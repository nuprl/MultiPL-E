{
  "name": "mbpp_126_sum",
  "language": "rb",
  "prompt": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_126_sum.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  puts sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "Loaded suite /tmp/tmp94ksikmg\nStarted\n6\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmp94ksikmg.rb:15:in `test_sum'\n     12: class TestHumanEval < Test::Unit::TestCase\n     13:   def test_sum\n     14:     candidate = method(:sum)\n  => 15:     assert_equal(6, candidate.call(10, 15))\n     16:     assert_equal(93, candidate.call(100, 150))\n     17:     assert_equal(3, candidate.call(4, 6))\n     18:   end\n<6> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.006323084 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n158.15 tests/s, 158.15 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpx8_56edr\nStarted\n.\nFinished in 0.000376753 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2654.26 tests/s, 7962.78 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  sum = 0\n  for i in 1..c\n    if c % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpmllfuv28\nStarted\n.\nFinished in 0.00036517 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2738.45 tests/s, 8215.35 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  a_divisors = []\n  b_divisors = []\n  common_divisors = []\n  sum = 0\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "/tmp/tmpvoef4fcm.rb:8: class definition in method body\nclass TestHumanEval < Test::Unit::TestCase\n^~~~~~~~~~~~~~~~~~~\n/tmp/tmpvoef4fcm.rb:15: syntax error, unexpected end-of-input, expecting `end'\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(12, 24)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "28\nLoaded suite /tmp/tmpv0qyfnl1\nStarted\n.\nFinished in 0.000434035 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2303.96 tests/s, 6911.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpx8_56edr\nStarted\n.\nFinished in 0.000376753 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2654.26 tests/s, 7962.78 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.to_s.split('').map(&:to_i).reduce(:+)\n  puts d\nend\nsum(12, 24)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "3\nLoaded suite /tmp/tmppca4ri_v\nStarted\n5\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmppca4ri_v.rb:12:in `test_sum'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:   def test_sum\n     11:     candidate = method(:sum)\n  => 12:     assert_equal(6, candidate.call(10, 15))\n     13:     assert_equal(93, candidate.call(100, 150))\n     14:     assert_equal(3, candidate.call(4, 6))\n     15:   end\n<6> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.007535881 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n132.70 tests/s, 132.70 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  i = 1\n  while i <= a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n    i += 1\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiuaydt3_\nStarted\n.\nFinished in 0.000678047 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1474.82 tests/s, 4424.47 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      c += i\n    end\n  end\n  return c\nend\nputs sum(10, 20)\nputs sum(20, 30)\nputs sum(40, 50)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "18\n18\n18\nLoaded suite /tmp/tmpfmo60v7j\nStarted\n.\nFinished in 0.000466263 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2144.71 tests/s, 6434.14 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdtl_ri8i\nStarted\n.\nFinished in 0.000506082 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.96 tests/s, 5927.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.to_s.split('')\n  e = d.map(&:to_i)\n  f = e.inject(0){|sum,x| sum + x }\n  puts f\nend\nsum(12, 24)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "3\nLoaded suite /tmp/tmp6spxqbf1\nStarted\n5\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmp6spxqbf1.rb:14:in `test_sum'\n     11: class TestHumanEval < Test::Unit::TestCase\n     12:   def test_sum\n     13:     candidate = method(:sum)\n  => 14:     assert_equal(6, candidate.call(10, 15))\n     15:     assert_equal(93, candidate.call(100, 150))\n     16:     assert_equal(3, candidate.call(4, 6))\n     17:   end\n<6> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.007832971 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n127.67 tests/s, 127.67 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpx8_56edr\nStarted\n.\nFinished in 0.000376753 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2654.26 tests/s, 7962.78 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdtl_ri8i\nStarted\n.\nFinished in 0.000506082 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.96 tests/s, 5927.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdtl_ri8i\nStarted\n.\nFinished in 0.000506082 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.96 tests/s, 5927.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    sum += i if a % i == 0 && b % i == 0\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpcxyy8e32\nStarted\n.\nFinished in 0.000591168 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1691.57 tests/s, 5074.70 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpx8_56edr\nStarted\n.\nFinished in 0.000376753 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2654.26 tests/s, 7962.78 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.divisors\n  e = d.inject(0) { |sum, x| sum + x }\n  puts e\nend\nsum(12, 24)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpjl2soi6g.rb:4:in `sum': undefined method `divisors' for 12:Integer (NoMethodError)\n\n  d = c.divisors\n       ^^^^^^^^^\n\tfrom /tmp/tmpjl2soi6g.rb:8:in `<main>'\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  sum = 0\n  (1..c).each do |i|\n    if c % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpir34p8ph\nStarted\n.\nFinished in 0.00042476 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2354.27 tests/s, 7062.81 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.prime_division\n  d.map {|x| x[0]**(x[1]+1)-1}.inject(:*) / (c-1)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "Loaded suite /tmp/tmpa4gh9inu\nStarted\nE\n===============================================================================\nError: test_sum(TestHumanEval):\n  NoMethodError: undefined method `prime_division' for 5:Integer\n  \n    d = c.prime_division\n         ^^^^^^^^^^^^^^^\n/tmp/tmpa4gh9inu.rb:4:in `sum'\n/tmp/tmpa4gh9inu.rb:11:in `call'\n/tmp/tmpa4gh9inu.rb:11:in `test_sum'\n      8: class TestHumanEval < Test::Unit::TestCase\n      9:   def test_sum\n     10:     candidate = method(:sum)\n  => 11:     assert_equal(6, candidate.call(10, 15))\n     12:     assert_equal(93, candidate.call(100, 150))\n     13:     assert_equal(3, candidate.call(4, 6))\n     14:   end\n===============================================================================\n\nFinished in 0.007409944 seconds.\n-------------------------------------------------------------------------------\n1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.95 tests/s, 0.00 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  sum = 0\n  for i in 1..c\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  puts sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "Loaded suite /tmp/tmp71tdj_gs\nStarted\n6\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmp71tdj_gs.rb:16:in `test_sum'\n     13: class TestHumanEval < Test::Unit::TestCase\n     14:   def test_sum\n     15:     candidate = method(:sum)\n  => 16:     assert_equal(6, candidate.call(10, 15))\n     17:     assert_equal(93, candidate.call(100, 150))\n     18:     assert_equal(3, candidate.call(4, 6))\n     19:   end\n<6> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.011889409 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n84.11 tests/s, 84.11 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.to_s.split('').map(&:to_i).inject(:+)\n  puts d\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "Loaded suite /tmp/tmpnyoy7701\nStarted\n5\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmpnyoy7701.rb:11:in `test_sum'\n      8: class TestHumanEval < Test::Unit::TestCase\n      9:   def test_sum\n     10:     candidate = method(:sum)\n  => 11:     assert_equal(6, candidate.call(10, 15))\n     12:     assert_equal(93, candidate.call(100, 150))\n     13:     assert_equal(3, candidate.call(4, 6))\n     14:   end\n<6> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.007605943 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n131.48 tests/s, 131.48 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  sum = 0\n  for i in 1..c\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpux0rc981\nStarted\n.\nFinished in 0.000706425 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1415.58 tests/s, 4246.74 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.to_s.split('').map(&:to_i).sum\n  puts d\nend\nsum(10, 20)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "1\nLoaded suite /tmp/tmpceomi87b\nStarted\n5\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmpceomi87b.rb:12:in `test_sum'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:   def test_sum\n     11:     candidate = method(:sum)\n  => 12:     assert_equal(6, candidate.call(10, 15))\n     13:     assert_equal(93, candidate.call(100, 150))\n     14:     assert_equal(3, candidate.call(4, 6))\n     15:   end\n<6> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.007441517 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  sum = 0\n  for i in 1..c\n    if c % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpmllfuv28\nStarted\n.\nFinished in 0.00036517 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2738.45 tests/s, 8215.35 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdtl_ri8i\nStarted\n.\nFinished in 0.000506082 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.96 tests/s, 5927.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = (1..c).select { |i| a % i == 0 && b % i == 0 }\n  d.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpf9cihx30\nStarted\n.\nFinished in 0.000674887 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1481.73 tests/s, 4445.19 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    sum += i if a % i == 0 && b % i == 0\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpcxyy8e32\nStarted\n.\nFinished in 0.000591168 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1691.57 tests/s, 5074.70 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphjjq1_jl\nStarted\n.\nFinished in 0.000484068 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2065.83 tests/s, 6197.48 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpx8_56edr\nStarted\n.\nFinished in 0.000376753 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2654.26 tests/s, 7962.78 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpx8_56edr\nStarted\n.\nFinished in 0.000376753 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2654.26 tests/s, 7962.78 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpx8_56edr\nStarted\n.\nFinished in 0.000376753 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2654.26 tests/s, 7962.78 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  sum = 0\n  for i in 1..c\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpux0rc981\nStarted\n.\nFinished in 0.000706425 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1415.58 tests/s, 4246.74 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nputs sum(20, 30)\nputs sum(100, 200)\nputs sum(200, 300)\nputs sum(1000, 2000)\nputs sum(2000, 3000)\nputs sum(10000, 20000)\nputs sum(20000, 30000)\nputs sum(100000, 200000)\nputs sum(200000, 300000)\nputs sum(1000000, 2000000)\nputs sum(2000000, 3000000)\nputs sum(10000000, 20000000)\nputs sum(20000000, 30000000)\nputs sum(100000000, 200000000)\nputs sum(200000000, 300000000)\nputs sum(1000000000, 2000000000)\nputs sum(2000000000, 3000000000)\nputs sum(10000000000, 20000000000)\nputs sum(20000000000, 30000000000)\nputs sum(100000000000, 200000000000)\nputs sum(200000000000, 300000000000)\nputs sum(1000000000000, 2000000000000)\nputs sum(2000000000000, 3000000000000)\nputs sum(10000000000000, 20000000000000)\nputs sum(20000000000000, 30000000000000)\nputs sum(100000000000000, 200000000000000)\nputs sum(200000000000000, 300000000000000)\nputs sum(1000000000000000, 2000000000000000)\nputs sum(2000000000000000, 3000000000000000)\nputs sum(10000000000000000, 20000000000000000)\nputs sum(20000000000000000, 30000000000000000)\nputs sum(100000000000000000, 200000000000000000)\nputs sum(200000000000000000, 300000000000000000)\nputs sum(1000000000000000000, 2000000000000000000)\nputs sum(2000000000000000000, 3000000000000000000)\nputs sum(10000000000000000000, 20000000000000000000)\nputs sum(20000000000000000000, 30000000000000000000)\nputs sum(100000000000000000000, 200000000000000000000)\nputs sum(200000000000000000000, 30000000000000000\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpry7l9hr9.rb:51: syntax error, unexpected local variable or method, expecting ')'\nrequire 'test/unit'\n^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  a = a.abs\n  b = b.abs\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpukemfwob\nStarted\n.\nFinished in 0.000653621 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1529.94 tests/s, 4589.82 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  puts sum\nend\nsum(10, 20)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "18\nLoaded suite /tmp/tmpoio5b7ag\nStarted\n6\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmpoio5b7ag.rb:16:in `test_sum'\n     13: class TestHumanEval < Test::Unit::TestCase\n     14:   def test_sum\n     15:     candidate = method(:sum)\n  => 16:     assert_equal(6, candidate.call(10, 15))\n     17:     assert_equal(93, candidate.call(100, 150))\n     18:     assert_equal(3, candidate.call(4, 6))\n     19:   end\n<6> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.009918016 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n100.83 tests/s, 100.83 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a + b\n  puts \"Sum of #{a} and #{b} is #{c}\"\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "Loaded suite /tmp/tmpuzuvmzfq\nStarted\nSum of 10 and 15 is 25\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmpuzuvmzfq.rb:10:in `test_sum'\n      7: class TestHumanEval < Test::Unit::TestCase\n      8:   def test_sum\n      9:     candidate = method(:sum)\n  => 10:     assert_equal(6, candidate.call(10, 15))\n     11:     assert_equal(93, candidate.call(100, 150))\n     12:     assert_equal(3, candidate.call(4, 6))\n     13:   end\n<6> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.00694636 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n143.96 tests/s, 143.96 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  (1..a).select { |i| a % i == 0 && b % i == 0 }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeakdoinn\nStarted\n.\nFinished in 0.000682674 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1464.83 tests/s, 4394.48 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  puts sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "Loaded suite /tmp/tmp94ksikmg\nStarted\n6\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmp94ksikmg.rb:15:in `test_sum'\n     12: class TestHumanEval < Test::Unit::TestCase\n     13:   def test_sum\n     14:     candidate = method(:sum)\n  => 15:     assert_equal(6, candidate.call(10, 15))\n     16:     assert_equal(93, candidate.call(100, 150))\n     17:     assert_equal(3, candidate.call(4, 6))\n     18:   end\n<6> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.006323084 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n158.15 tests/s, 158.15 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  n = [a, b].min\n  sum = 0\n  for i in 1..n\n    sum += i if a % i == 0 && b % i == 0\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl_qt08vz\nStarted\n.\nFinished in 0.000480771 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2079.99 tests/s, 6239.98 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpx8_56edr\nStarted\n.\nFinished in 0.000376753 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2654.26 tests/s, 7962.78 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdtl_ri8i\nStarted\n.\nFinished in 0.000506082 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.96 tests/s, 5927.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdtl_ri8i\nStarted\n.\nFinished in 0.000506082 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.96 tests/s, 5927.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdtl_ri8i\nStarted\n.\nFinished in 0.000506082 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.96 tests/s, 5927.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = 0\n  (1..c).each do |i|\n    if c % i == 0\n      d += i\n    end\n  end\n  puts d\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "Loaded suite /tmp/tmpi0nfl_ha\nStarted\n6\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmpi0nfl_ha.rb:16:in `test_sum'\n     13: class TestHumanEval < Test::Unit::TestCase\n     14:   def test_sum\n     15:     candidate = method(:sum)\n  => 16:     assert_equal(6, candidate.call(10, 15))\n     17:     assert_equal(93, candidate.call(100, 150))\n     18:     assert_equal(3, candidate.call(4, 6))\n     19:   end\n<6> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.006888571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n145.17 tests/s, 145.17 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.to_s.split('').map(&:to_i)\n  d.inject(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124242,
      "stdout": "Loaded suite /tmp/tmpwo1errvm\nStarted\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmpwo1errvm.rb:11:in `test_sum'\n      8: class TestHumanEval < Test::Unit::TestCase\n      9:   def test_sum\n     10:     candidate = method(:sum)\n  => 11:     assert_equal(6, candidate.call(10, 15))\n     12:     assert_equal(93, candidate.call(100, 150))\n     13:     assert_equal(3, candidate.call(4, 6))\n     14:   end\n<6> expected but was\n<5>\n===============================================================================\n\nFinished in 0.006849044 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n146.01 tests/s, 146.01 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdtl_ri8i\nStarted\n.\nFinished in 0.000506082 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.96 tests/s, 5927.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdtl_ri8i\nStarted\n.\nFinished in 0.000506082 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.96 tests/s, 5927.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  if a > b\n    a, b = b, a\n  end\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpb__xbbmj\nStarted\n.\nFinished in 0.000516358 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1936.64 tests/s, 5809.92 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdtl_ri8i\nStarted\n.\nFinished in 0.000506082 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.96 tests/s, 5927.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphjjq1_jl\nStarted\n.\nFinished in 0.000484068 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2065.83 tests/s, 6197.48 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdtl_ri8i\nStarted\n.\nFinished in 0.000506082 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.96 tests/s, 5927.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.to_s.split('').map(&:to_i)\n  d.inject(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124242,
      "stdout": "Loaded suite /tmp/tmpwo1errvm\nStarted\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmpwo1errvm.rb:11:in `test_sum'\n      8: class TestHumanEval < Test::Unit::TestCase\n      9:   def test_sum\n     10:     candidate = method(:sum)\n  => 11:     assert_equal(6, candidate.call(10, 15))\n     12:     assert_equal(93, candidate.call(100, 150))\n     13:     assert_equal(3, candidate.call(4, 6))\n     14:   end\n<6> expected but was\n<5>\n===============================================================================\n\nFinished in 0.006849044 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n146.01 tests/s, 146.01 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdtl_ri8i\nStarted\n.\nFinished in 0.000506082 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.96 tests/s, 5927.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nputs sum(20, 30)\nputs sum(30, 40)\nputs sum(40, 50)\nputs sum(50, 60)\nputs sum(60, 70)\nputs sum(70, 80)\nputs sum(80, 90)\nputs sum(90, 100)\nputs sum(100, 110)\nputs sum(110, 120)\nputs sum(120, 130)\nputs sum(130, 140)\nputs sum(140, 150)\nputs sum(150, 160)\nputs sum(160, 170)\nputs sum(170, 180)\nputs sum(180, 190)\nputs sum(190, 200)\nputs sum(200, 210)\nputs sum(210, 220)\nputs sum(220, 230)\nputs sum(230, 240)\nputs sum(240, 250)\nputs sum(250, 260)\nputs sum(260, 270)\nputs sum(270, 280)\nputs sum(280, 290)\nputs sum(290, 300)\nputs sum(300, 310)\nputs sum(310, 320)\nputs sum(320, 330)\nputs sum(330, 340)\nputs sum(340, 350)\nputs sum(350, 360)\nputs sum(360, 370)\nputs sum(370, 380)\nputs sum(380, 390)\nputs sum(390, 400)\nputs sum(400, 410)\nputs sum(410, 420)\nputs sum(420, 430)\nputs sum(430, 440)\nputs sum(440, 450)\nputs sum(450, 460)\nputs sum(460, 470)\nputs sum(470, 480)\nputs sum(480, 490)\nputs sum(490, 500)\nputs sum(500, 510)\nputs sum(510, 520)\nputs sum(520, 530)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\nLoaded suite /tmp/tmpmxz1dva3\nStarted\n.\nFinished in 0.000415013 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2409.56 tests/s, 7228.69 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    sum += i if a % i == 0 && b % i == 0\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpcxyy8e32\nStarted\n.\nFinished in 0.000591168 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1691.57 tests/s, 5074.70 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      c = c + i\n    end\n  end\n  return c\nend\nputs sum(12, 24)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "28\nLoaded suite /tmp/tmp5ywg_reh\nStarted\n.\nFinished in 0.000400099 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.38 tests/s, 7498.14 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a do\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_tfnqtf9\nStarted\n.\nFinished in 0.000494858 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2020.78 tests/s, 6062.35 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = (1..c).select { |i| c % i == 0 }\n  d.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpgdyy79kf\nStarted\n.\nFinished in 0.000395984 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2525.35 tests/s, 7576.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.divisors\n  d.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124242,
      "stdout": "Loaded suite /tmp/tmpj7z7gg51\nStarted\nE\n===============================================================================\nError: test_sum(TestHumanEval):\n  NoMethodError: undefined method `divisors' for 5:Integer\n  \n    d = c.divisors\n         ^^^^^^^^^\n/tmp/tmpj7z7gg51.rb:4:in `sum'\n/tmp/tmpj7z7gg51.rb:11:in `call'\n/tmp/tmpj7z7gg51.rb:11:in `test_sum'\n      8: class TestHumanEval < Test::Unit::TestCase\n      9:   def test_sum\n     10:     candidate = method(:sum)\n  => 11:     assert_equal(6, candidate.call(10, 15))\n     12:     assert_equal(93, candidate.call(100, 150))\n     13:     assert_equal(3, candidate.call(4, 6))\n     14:   end\n===============================================================================\n\nFinished in 0.005331083 seconds.\n-------------------------------------------------------------------------------\n1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n187.58 tests/s, 0.00 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = 1\n  sum = 0\n  while c <= a && c <= b\n    if a % c == 0 && b % c == 0\n      sum += c\n    end\n    c += 1\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpu_ffifq4\nStarted\n.\nFinished in 0.000436724 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2289.78 tests/s, 6869.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nputs sum(20, 30)\nputs sum(30, 40)\nputs sum(40, 50)\nputs sum(50, 60)\nputs sum(60, 70)\nputs sum(70, 80)\nputs sum(80, 90)\nputs sum(90, 100)\nputs sum(100, 110)\nputs sum(110, 120)\nputs sum(120, 130)\nputs sum(130, 140)\nputs sum(140, 150)\nputs sum(150, 160)\nputs sum(160, 170)\nputs sum(170, 180)\nputs sum(180, 190)\nputs sum(190, 200)\nputs sum(200, 210)\nputs sum(210, 220)\nputs sum(220, 230)\nputs sum(230, 240)\nputs sum(240, 250)\nputs sum(250, 260)\nputs sum(260, 270)\nputs sum(270, 280)\nputs sum(280, 290)\nputs sum(290, 300)\nputs sum(300, 310)\nputs sum(310, 320)\nputs sum(320, 330)\nputs sum(330, 340)\nputs sum(340, 350)\nputs sum(350, 360)\nputs sum(360, 370)\nputs sum(370, 380)\nputs sum(380, 390)\nputs sum(390, 400)\nputs sum(400, 410)\nputs sum(410, 420)\nputs sum(420, 430)\nputs sum(430, 440)\nputs sum(440, 450)\nputs sum(450, 460)\nputs sum(460, 470)\nputs sum(470, 480)\nputs sum(480, 490)\nputs sum(490, 500)\nputs sum(500, 510)\nputs sum(510, 520)\nputs sum(520, 530)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\nLoaded suite /tmp/tmpmqsbtqw7\nStarted\n.\nFinished in 0.000435948 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2293.85 tests/s, 6881.55 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  sum = 0\n  (1..c).each do |i|\n    if c % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpir34p8ph\nStarted\n.\nFinished in 0.00042476 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2354.27 tests/s, 7062.81 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = (1..c).select { |i| c % i == 0 }\n  d.inject(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpa3mkcwf6\nStarted\n.\nFinished in 0.00055247 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1810.05 tests/s, 5430.16 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "18\nLoaded suite /tmp/tmpnldots40\nStarted\n.\nFinished in 0.000411997 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2427.20 tests/s, 7281.61 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdtl_ri8i\nStarted\n.\nFinished in 0.000506082 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.96 tests/s, 5927.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdtl_ri8i\nStarted\n.\nFinished in 0.000506082 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.96 tests/s, 5927.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      c = c + i\n    end\n  end\n  return c\nend\nputs sum(6, 12)\nputs sum(2, 3)\nputs sum(10, 20)\nputs sum(20, 30)\nputs sum(30, 40)\nputs sum(40, 50)\nputs sum(50, 60)\nputs sum(60, 70)\nputs sum(70, 80)\nputs sum(80, 90)\nputs sum(90, 100)\nputs sum(100, 110)\nputs sum(110, 120)\nputs sum(120, 130)\nputs sum(130, 140)\nputs sum(140, 150)\nputs sum(150, 160)\nputs sum(160, 170)\nputs sum(170, 180)\nputs sum(180, 190)\nputs sum(190, 200)\nputs sum(200, 210)\nputs sum(210, 220)\nputs sum(220, 230)\nputs sum(230, 240)\nputs sum(240, 250)\nputs sum(250, 260)\nputs sum(260, 270)\nputs sum(270, 280)\nputs sum(280, 290)\nputs sum(290, 300)\nputs sum(300, 310)\nputs sum(310, 320)\nputs sum(320, 330)\nputs sum(330, 340)\nputs sum(340, 350)\nputs sum(350, 360)\nputs sum(360, 370)\nputs sum(370, 380)\nputs sum(380, 390)\nputs sum(390, 400)\nputs sum(400, 410)\nputs sum(410, 420)\nputs sum(420, 430)\nputs sum(430, 440)\nputs sum(440, 450)\nputs sum(450, 460)\nputs sum(460, 470)\nputs sum(470, 480)\nputs sum(480, 490)\nputs sum(490, 500)\nputs sum(500,\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpuzge08mc.rb:63: syntax error, unexpected string literal, expecting `do' or '{' or '('\nrequire 'test/unit'\n        ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdtl_ri8i\nStarted\n.\nFinished in 0.000506082 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.96 tests/s, 5927.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0j_vwvlc\nStarted\n.\nFinished in 0.000785297 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.40 tests/s, 3820.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(12, 18)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "12\nLoaded suite /tmp/tmps6ralru4\nStarted\n.\nFinished in 0.000426232 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2346.14 tests/s, 7038.42 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdtl_ri8i\nStarted\n.\nFinished in 0.000506082 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.96 tests/s, 5927.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqjb_f2zk\nStarted\n.\nFinished in 0.00106871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n935.71 tests/s, 2807.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
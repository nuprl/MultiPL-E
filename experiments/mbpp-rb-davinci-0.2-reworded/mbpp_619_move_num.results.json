{
  "name": "mbpp_619_move_num",
  "language": "rb",
  "prompt": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_619_move_num.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpts4nfz5n\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpts4nfz5n.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010398845 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n96.16 tests/s, 96.16 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^0-9]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp4wi6czzl\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp4wi6czzl.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.011338887 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n88.19 tests/s, 88.19 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^0-9]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp4wi6czzl\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp4wi6czzl.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.011338887 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n88.19 tests/s, 88.19 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpq1bbcj0t\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpq1bbcj0t.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010136303 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.66 tests/s, 98.66 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpzq93h8ef\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpzq93h8ef.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.011017488 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n90.76 tests/s, 90.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^0-9]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp4wi6czzl\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp4wi6czzl.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.011338887 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n88.19 tests/s, 88.19 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmptgxmp17v\nStarted\n.\nFinished in 0.000430779 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2321.38 tests/s, 6964.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpts4nfz5n\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpts4nfz5n.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010398845 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n96.16 tests/s, 96.16 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  # Write your code here\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpt_2hvq3d\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpt_2hvq3d.rb:10:in `test_move_num'\n      7: class TestHumanEval < Test::Unit::TestCase\n      8:   def test_move_num\n      9:     candidate = method(:move_num)\n  => 10:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     11:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     12:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     13:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010008307 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.92 tests/s, 99.92 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/\\d/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpsbw9i_f4\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpsbw9i_f4.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.016587251 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n60.29 tests/s, 60.29 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/i, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpnnecuv8f\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpnnecuv8f.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009997201 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n100.03 tests/s, 100.03 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  num = test_str.scan(/\\d+/)\n  alpha = test_str.scan(/\\D+/)\n  alpha.join + num.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz4k80ymg\nStarted\n.\nFinished in 0.000452127 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2211.77 tests/s, 6635.30 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmptgxmp17v\nStarted\n.\nFinished in 0.000430779 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2321.38 tests/s, 6964.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/\\d+/, '') + test_str.scan(/\\d+/).join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzxv4fgr8\nStarted\n.\nFinished in 0.000446684 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2238.72 tests/s, 6716.16 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.split('').sort_by { |x| x.to_i }.join('')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpq7se8_xd\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpq7se8_xd.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"Iloveyouthree000thousand1133455\">\n\ndiff:\n? Iloveyouthree000thousand113343553000\n===============================================================================\n\nFinished in 0.011463217 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n87.24 tests/s, 87.24 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.delete!(\"^0-9\")\n  test_str.concat(test_str.delete!(\"0-9\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpzdb94kkq\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpzdb94kkq.rb:10:in `test_move_num'\n      7: class TestHumanEval < Test::Unit::TestCase\n      8:   def test_move_num\n      9:     candidate = method(:move_num)\n  => 10:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     11:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     12:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     13:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"\">\n===============================================================================\n\nFinished in 0.006883134 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n145.28 tests/s, 145.28 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpts4nfz5n\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpts4nfz5n.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010398845 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n96.16 tests/s, 96.16 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/i, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpnnecuv8f\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpnnecuv8f.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009997201 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n100.03 tests/s, 100.03 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/i, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpnwszi_yy\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpnwszi_yy.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.019056506 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n52.48 tests/s, 52.48 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.chars.partition { |c| c =~ /[a-z]/ }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpungm48wl\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpungm48wl.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\">(UTF-8) expected but was\n<\"loveyouthreethousandI1143553000\">(US-ASCII)\n\ndiff:\n? IloveyouthreethousandI1143553000\n  \n? Encoding: UTF-8    \n?            S  ASCII\n?            ??  ?\n===============================================================================\n\nFinished in 0.011892941 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n84.08 tests/s, 84.08 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmptgxmp17v\nStarted\n.\nFinished in 0.000430779 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2321.38 tests/s, 6964.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmptgxmp17v\nStarted\n.\nFinished in 0.000430779 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2321.38 tests/s, 6964.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmptgxmp17v\nStarted\n.\nFinished in 0.000430779 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2321.38 tests/s, 6964.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpq1bbcj0t\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpq1bbcj0t.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010136303 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.66 tests/s, 98.66 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpts4nfz5n\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpts4nfz5n.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010398845 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n96.16 tests/s, 96.16 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmptgxmp17v\nStarted\n.\nFinished in 0.000430779 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2321.38 tests/s, 6964.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').split('').join + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp3lekqut2\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp3lekqut2.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009856025 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n101.46 tests/s, 101.46 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/\\D/, '') + test_str.gsub(/\\d/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpub7c9vhl\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpub7c9vhl.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009828517 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n101.74 tests/s, 101.74 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[^0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6fst59ek\nStarted\n.\nFinished in 0.000471748 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2119.78 tests/s, 6359.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpzq93h8ef\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpzq93h8ef.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.011017488 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n90.76 tests/s, 90.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmptgxmp17v\nStarted\n.\nFinished in 0.000430779 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2321.38 tests/s, 6964.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/\\d+/, '') + test_str.scan(/\\d+/).join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzxv4fgr8\nStarted\n.\nFinished in 0.000446684 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2238.72 tests/s, 6716.16 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.chars.partition { |c| c =~ /[a-z]/ }.flatten.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpcohqbqvm\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpcohqbqvm.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"loveyouthreethousandI1143553000\">\n\ndiff:\n? IloveyouthreethousandI1143553000\n===============================================================================\n\nFinished in 0.011315361 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n88.38 tests/s, 88.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.delete('^0-9').concat(test_str.delete('0-9'))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpowaii1t4\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpowaii1t4.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.00945554 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.76 tests/s, 105.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpq1bbcj0t\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpq1bbcj0t.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010136303 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.66 tests/s, 98.66 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmptgxmp17v\nStarted\n.\nFinished in 0.000430779 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2321.38 tests/s, 6964.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpzq93h8ef\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpzq93h8ef.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.011017488 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n90.76 tests/s, 90.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmptgxmp17v\nStarted\n.\nFinished in 0.000430779 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2321.38 tests/s, 6964.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/\\d+/, '') + test_str.scan(/\\d+/).join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzxv4fgr8\nStarted\n.\nFinished in 0.000446684 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2238.72 tests/s, 6716.16 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.scan(/[a-zA-Z]+|\\d+/).join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpu7zoqskd\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpu7zoqskd.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I 1 love 143 you 55 three 3000 thousand\">\n\ndiff:\n? I 1 love 143 you 55 three 3000 thousand1143553000\n===============================================================================\n\nFinished in 0.009824686 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n101.78 tests/s, 101.78 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpzq93h8ef\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpzq93h8ef.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.011017488 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n90.76 tests/s, 90.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpq1bbcj0t\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpq1bbcj0t.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010136303 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.66 tests/s, 98.66 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^0-9]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp4wi6czzl\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp4wi6czzl.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.011338887 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n88.19 tests/s, 88.19 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.scan(/[a-zA-Z]+|[0-9]+/).join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmphuptknn8\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmphuptknn8.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1love143you55three3000thousand\">\n\ndiff:\n? I1love143you55three3000thousand1143553000\n===============================================================================\n\nFinished in 0.010216625 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n97.88 tests/s, 97.88 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpzq93h8ef\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpzq93h8ef.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.011017488 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n90.76 tests/s, 90.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, ' ').split.join(' ') + test_str.gsub(/[0-9]/, ' ').split.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpiyja6m2h\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpiyja6m2h.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1 143 55 3000I love you three thousand\">\n\ndiff:\n? I1 143 55 3000I love you three thousand1143553000\n===============================================================================\n\nFinished in 0.010016867 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.83 tests/s, 99.83 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpts4nfz5n\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpts4nfz5n.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010398845 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n96.16 tests/s, 96.16 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/i, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpnwszi_yy\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpnwszi_yy.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.019056506 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n52.48 tests/s, 52.48 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpq1bbcj0t\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpq1bbcj0t.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010136303 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.66 tests/s, 98.66 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  num = test_str.scan(/\\d+/)\n  alpha = test_str.scan(/\\D+/)\n  alpha.join + num.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz4k80ymg\nStarted\n.\nFinished in 0.000452127 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2211.77 tests/s, 6635.30 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpzq93h8ef\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpzq93h8ef.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.011017488 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n90.76 tests/s, 90.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/\\D/, '').concat(test_str.gsub(/\\d/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmphvmx971e\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmphvmx971e.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009729622 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n102.78 tests/s, 102.78 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  nums = test_str.scan(/\\d+/).join\n  test_str.gsub(/\\d+/, '') + nums\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmprc125vu2\nStarted\n.\nFinished in 0.000437095 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2287.83 tests/s, 6863.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/\\d/, '') + test_str.scan(/\\d/).join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpi2rbar46\nStarted\n.\nFinished in 0.000455922 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2193.36 tests/s, 6580.07 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  num_arr = []\n  char_arr = []\n  test_str.split('').each do |char|\n    if char =~ /\\d/\n      num_arr << char\n    else\n      char_arr << char\n    end\n  end\n  char_arr.join('') + num_arr.join('')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpos33gbd9\nStarted\n.\nFinished in 0.000491419 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2034.92 tests/s, 6104.77 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpzq93h8ef\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpzq93h8ef.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.011017488 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n90.76 tests/s, 90.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  # your code here\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpo1f1p0u4\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1f1p0u4.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<nil>\n\ndiff:\n? \"Iloveyouthreethousand1143553000\"\n? ni                               \n? ?? ------------------------------\n===============================================================================\n\nFinished in 0.00767818 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n130.24 tests/s, 130.24 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\") + test_str.gsub(/[0-9]/, \"\")\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp04tl3u75\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp04tl3u75.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.008103251 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n123.41 tests/s, 123.41 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpts4nfz5n\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpts4nfz5n.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010398845 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n96.16 tests/s, 96.16 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/\\d+/, '') + test_str.scan(/\\d+/).join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzxv4fgr8\nStarted\n.\nFinished in 0.000446684 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2238.72 tests/s, 6716.16 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpts4nfz5n\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpts4nfz5n.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010398845 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n96.16 tests/s, 96.16 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/\\d+/, '') + test_str.scan(/\\d+/).join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzxv4fgr8\nStarted\n.\nFinished in 0.000446684 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2238.72 tests/s, 6716.16 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpts4nfz5n\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpts4nfz5n.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010398845 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n96.16 tests/s, 96.16 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpq1bbcj0t\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpq1bbcj0t.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010136303 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.66 tests/s, 98.66 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp36nx0sl7\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp36nx0sl7.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009517198 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n105.07 tests/s, 105.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmptgxmp17v\nStarted\n.\nFinished in 0.000430779 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2321.38 tests/s, 6964.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpq1bbcj0t\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpq1bbcj0t.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010136303 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.66 tests/s, 98.66 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpzq93h8ef\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpzq93h8ef.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.011017488 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n90.76 tests/s, 90.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]+/, '').concat(test_str.gsub(/[0-9]+/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpfoahskt_\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpfoahskt_.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.008455169 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n118.27 tests/s, 118.27 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  # code goes here\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmp4fomv33m\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp4fomv33m.rb:10:in `test_move_num'\n      7: class TestHumanEval < Test::Unit::TestCase\n      8:   def test_move_num\n      9:     candidate = method(:move_num)\n  => 10:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     11:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     12:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     13:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.008303316 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n120.43 tests/s, 120.43 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  num = test_str.scan(/\\d+/)\n  test_str.gsub!(/\\d+/, '')\n  test_str << num.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpibe35uy6\nStarted\n.\nFinished in 0.000382102 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2617.10 tests/s, 7851.31 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmptgxmp17v\nStarted\n.\nFinished in 0.000430779 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2321.38 tests/s, 6964.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpwiztqgrf\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpwiztqgrf.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.01016391 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.39 tests/s, 98.39 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, ' ').split(' ').join + test_str.gsub(/[0-9]/, ' ').split(' ').join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpso_4mzn_\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpso_4mzn_.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.008372546 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n119.44 tests/s, 119.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.split('').sort_by { |x| x =~ /[a-z]/ ? 0 : 1 }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpprc8fisc\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpprc8fisc.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"loveyouthreethousandI1143553000\">\n\ndiff:\n? IloveyouthreethousandI1143553000\n===============================================================================\n\nFinished in 0.009672585 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n103.38 tests/s, 103.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/i, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1666122851,
      "stdout": "Loaded suite /tmp/tmpnnecuv8f\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpnnecuv8f.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.009997201 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n100.03 tests/s, 100.03 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpq1bbcj0t\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpq1bbcj0t.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010136303 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.66 tests/s, 98.66 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpq1bbcj0t\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpq1bbcj0t.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010136303 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.66 tests/s, 98.66 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpzq93h8ef\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpzq93h8ef.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.011017488 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n90.76 tests/s, 90.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmp7x8_fqmi\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmp7x8_fqmi.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010149989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.52 tests/s, 98.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmptgxmp17v\nStarted\n.\nFinished in 0.000430779 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2321.38 tests/s, 6964.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmprb9le01o\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmprb9le01o.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"1143553000Iloveyouthreethousand\">\n\ndiff:\n? 1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010001199 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n99.99 tests/s, 99.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
      "timestamp": 1665510052,
      "stdout": "Loaded suite /tmp/tmpo1e0deoo\nStarted\nF\n===============================================================================\nFailure: test_move_num(TestHumanEval)\n/tmp/tmpo1e0deoo.rb:9:in `test_move_num'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_move_num\n      8:     candidate = method(:move_num)\n  =>  9:     assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n     10:     assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n     11:     assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n     12:   end\n<\"Iloveyouthreethousand1143553000\"> expected but was\n<\"I1143553000Iloveyouthreethousand\">\n\ndiff:\n? I1143553000Iloveyouthreethousand1143553000\n===============================================================================\n\nFinished in 0.010143829 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n98.58 tests/s, 98.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
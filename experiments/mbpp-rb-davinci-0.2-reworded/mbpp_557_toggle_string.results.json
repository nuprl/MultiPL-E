{
  "name": "mbpp_557_toggle_string",
  "language": "rb",
  "prompt": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_557_toggle_string.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.split(\"\").map { |char| char == char.upcase ? char.downcase : char.upcase }.join(\"\")\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpnz9r56pc\nStarted\n.\nFinished in 0.000524878 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1905.20 tests/s, 5715.61 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.chars.map { |char| char == char.upcase ? char.downcase : char.upcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpu3il24zn\nStarted\n.\nFinished in 0.000667125 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1498.97 tests/s, 4496.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.chars.map { |char| char == char.upcase ? char.downcase : char.upcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpu3il24zn\nStarted\n.\nFinished in 0.000667125 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1498.97 tests/s, 4496.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.chars.map { |char| char == char.upcase ? char.downcase : char.upcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpu3il24zn\nStarted\n.\nFinished in 0.000667125 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1498.97 tests/s, 4496.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.chars.map { |char| char == char.upcase ? char.downcase : char.upcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpu3il24zn\nStarted\n.\nFinished in 0.000667125 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1498.97 tests/s, 4496.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
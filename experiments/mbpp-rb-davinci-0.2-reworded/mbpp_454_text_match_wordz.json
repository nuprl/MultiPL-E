{
  "name": "mbpp_454_text_match_wordz",
  "language": "rb",
  "prompt": "# Write a function that matches a word containing 'z'.\ndef text_match_wordz(text)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_454_text_match_wordz.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_text_match_wordz\n    candidate = method(:text_match_wordz)\n    assert_equal(true, candidate.call(\"pythonz.\"))\n    assert_equal(true, candidate.call(\"xyz.\"))\n    assert_equal(false, candidate.call(\"  lang  .\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.scan(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.scan(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend",
    "  text.match(/\\w*z\\w*/)\nend"
  ]
}
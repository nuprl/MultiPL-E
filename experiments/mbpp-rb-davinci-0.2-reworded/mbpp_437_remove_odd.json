{
  "name": "mbpp_437_remove_odd",
  "language": "rb",
  "prompt": "# Write a function to remove odd characters in a string.\ndef remove_odd(str1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_437_remove_odd.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_remove_odd\n    candidate = method(:remove_odd)\n    assert_equal(\"yhn\", candidate.call(\"python\"))\n    assert_equal(\"rga\", candidate.call(\"program\"))\n    assert_equal(\"agae\", candidate.call(\"language\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.each_with_index.map { |char, index| index.even? ? char : nil }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[^aeiou]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.each_with_index.map { |x, i| i.even? ? x : nil }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[^aeiou]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |char, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.each_with_index.map { |char, i| i.even? ? char : nil }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index {|_, i| i.even?}.join\nend",
    "  str1.gsub(/[^aeiou]/, '')\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.delete(\"13579\")\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.delete!(\"^a-zA-Z0-9\")\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[^aeiou]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.delete('^a-zA-Z0-9')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[^aeiou]/, '')\nend",
    "  str1.delete(\"^aeiou\")\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.split('').select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.each_with_index.map { |char, index| index.even? ? char : nil }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |char, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.gsub(/[^aeiou]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.delete('^aeiou')\nend",
    "  str1.split(\"\").select{|x| x.ord.even?}.join(\"\")\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |char, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[^aeiou]/, '')\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[^aeiou]/i, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.delete!(\"13579\")\nend",
    "  str1.split('').select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |char, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.delete(\"^a-zA-Z0-9\")\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.delete(\"^a-zA-Z\")\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.delete(\"13579\")\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.delete('^a-zA-Z')\nend",
    "  str1.split(\"\").select.with_index { |char, i| i.even? }.join(\"\")\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.delete! \"^aeiou\"\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.split('').select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.each_with_index.map { |char, i| i.even? ? char : nil }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |char, index| index.even? }.join\nend",
    "  str1.chars.reject.with_index { |_, i| i.odd? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.delete(\"^a-zA-Z0-9\")\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.each_with_index.map { |char, index| index.even? ? char : '' }.join\nend",
    "  str1.chars.select.with_index { |char, index| index.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/,'')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.delete!(\"13579\")\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.each_char.select.with_index { |char, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, \"\")\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |char, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |char, index| index.even? }.join\nend"
  ]
}
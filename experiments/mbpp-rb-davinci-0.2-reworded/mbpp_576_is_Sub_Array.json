{
  "name": "mbpp_576_is_Sub_Array",
  "language": "rb",
  "prompt": "# Write a rbthon function to check whether an array is subarray of another or not.\ndef is_Sub_Array(a, b)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_Sub_Array\n    candidate = method(:is_Sub_Array)\n    assert_equal(false, candidate.call([1, 4, 3, 5], [1, 2]))\n    assert_equal(true, candidate.call([1, 2, 1], [1, 2, 1]))\n    assert_equal(false, candidate.call([1, 0, 2, 2], [2, 2, 0]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  if a.size < b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] == b[0]\n      for j in 0..b.size-1\n        if a[i+j] != b[j]\n          break\n        end\n        if j == b.size-1\n          return true\n        end\n      end\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each_with_index do |item, index|\n    if item != b[index]\n      return false\n    end\n  end\n  return true\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    return true if b.include?(i)\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    return true if b.include?(i)\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  if a.length < b.length\n    return false\n  end\n  for i in 0..a.length - b.length\n    if a[i..i + b.length - 1] == b\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  b.each do |i|\n    return false if !a.include?(i)\n  end\n  return true\nend",
    "  a.each do |x|\n    if b.include?(x)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      puts \"#{a} is sub array of #{b}\"\n    else\n      puts \"#{a} is not sub array of #{b}\"\n    end\n  end\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    return false if !b.include?(i)\n  end\n  return true\nend",
    "  if a.length > b.length\n    return false\n  end\n  if a.length == b.length\n    return a == b\n  end\n  for i in 0..b.length - a.length\n    if a == b[i, a.length]\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  if a.all? { |i| b.include?(i) }\n    puts \"Yes\"\n  else\n    puts \"No\"\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.size]\n    end\n  end\n  false\nend",
    "  b.each do |i|\n    if a.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    return true if b.include?(i)\n  end\n  return false\nend",
    "  a.each do |x|\n    if b.include?(x)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    return true if b.include?(i)\n  end\n  false\nend",
    "  a.each do |i|\n    return true if b.include?(i)\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    puts \"a is not a subarray of b\"\n  else\n    for i in 0..b.size-a.size\n      if a == b[i, a.size]\n        puts \"a is a subarray of b\"\n        return\n      end\n    end\n    puts \"a is not a subarray of b\"\n  end\nend",
    "  a.each_with_index do |e, i|\n    if e == b[0]\n      return true if a[i..i+b.length-1] == b\n    end\n  end\n  return false\nend",
    "  b.each do |i|\n    return false unless a.include?(i)\n  end\n  true\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      if a[i..i + b.length - 1] == b\n        return true\n      end\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      if a[i..i+b.length-1] == b\n        return true\n      end\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  c = a & b\n  if c == a\n    puts \"Yes\"\n  else\n    puts \"No\"\n  end\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.size]\n    end\n  end\n  false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  b.each do |i|\n    return false unless a.include?(i)\n  end\n  true\nend",
    "  a.each do |x|\n    if b.include?(x)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    return false unless b.include?(i)\n  end\n  true\nend",
    "  a.each do |x|\n    if b.include?(x)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  if a.length > b.length\n    return false\n  end\n  for i in 0..a.length-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  b.each do |i|\n    if a.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  b.each do |i|\n    return false if !a.include?(i)\n  end\n  return true\nend",
    "  i = 0\n  j = 0\n  while i < a.length\n    while j < b.length\n      if a[i] == b[j]\n        i += 1\n      else\n        i = 0\n        break\n      end\n      j += 1\n    end\n    return true if i == a.length\n  end\n  false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      puts \"Yes, #{i} is a subarray of #{b}\"\n    else\n      puts \"No, #{i} is not a subarray of #{b}\"\n    end\n  end\nend",
    "  if a.size > b.size\n    return false\n  end",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if !b.include?(i)\n      return false\n    end\n  end\n  return true\nend",
    "  b.each do |i|\n    return false if !a.include?(i)\n  end\n  return true\nend",
    "  a.each do |x|\n    if a.include?(b)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |x|\n    if b.include?(x)\n      puts \"#{x} is a subarray\"\n    else\n      puts \"#{x} is not a subarray\"\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |x|\n    return true if b.include?(x)\n  end\n  false\nend",
    "  a.each do |i|\n    return true if b.include?(i)\n  end\n  false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if a.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      j = 1\n      while j < b.length\n        if a[i + j] != b[j]\n          break\n        end\n        j += 1\n      end\n      return true if j == b.length\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each_with_index do |val, index|\n    return false if val != b[index]\n  end\n  return true\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    return true if b.include?(i)\n  end\n  return false\nend",
    "  if a.length == 0\n    return true\n  end\n  if b.length == 0\n    return false\n  end\n  if a[0] == b[0]\n    return is_Sub_Array(a[1..-1], b[1..-1])\n  else\n    return is_Sub_Array(a, b[1..-1])\n  end\nend",
    "  a.each do |i|\n    return false if !b.include?(i)\n  end\n  true\nend",
    "  # a.each do |i|\n  #   if b.include?(i)\n  #     puts \"Yes\"\n  #   else\n  #     puts \"No\"\n  #   end\n  # end\n  puts (a - b).empty?\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  b.each do |i|\n    if a.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    return false unless b.include? i\n  end\n  true\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  b.each do |i|\n    return false if !a.include?(i)\n  end\n  return true\nend",
    "  b.each do |i|\n    return false unless a.include?(i)\n  end\n  true\nend",
    "  b.each do |i|\n    if a.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |x|\n    return true if b.include?(x)\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |e, i|\n    if e == b[0]\n      return true if a[i..i+b.length-1] == b\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |x|\n    if !b.include?(x)\n      return false\n    end\n  end\n  return true\nend",
    "  a.each_index do |i|\n    if a[i] == b[0]\n      j = 1\n      while j < b.length\n        if a[i + j] != b[j]\n          break\n        end\n        j += 1\n      end\n      if j == b.length\n        return true\n      end\n    end\n  end\n  return false\nend",
    "  if a.length > b.length\n    return false\n  end\n  i = 0\n  j = 0\n  while i < a.length\n    while j < b.length\n      if a[i] == b[j]\n        i += 1\n        j += 1\n      else\n        j += 1\n      end\n    end\n    if i == a.length\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if !b.include?(i)\n      return false\n    end\n  end\n  return true\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      b.delete_at(b.index(i))\n    else\n      return false\n    end\n  end\n  return true\nend",
    "  i = 0\n  j = 0\n  while i < a.length\n    while j < b.length\n      if a[i] == b[j]\n        i += 1\n      else\n        i = 0\n        break\n      end\n      j += 1\n    end\n    return true if i == a.length\n  end\n  false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |x|\n    return true if b.include?(x)\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    return false if !b.include?(i)\n  end\n  true\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  if a.length > b.length\n    return false\n  else\n    a.each do |i|\n      if b.include?(i)\n        return true\n      else\n        return false\n      end\n    end\n  end\nend",
    "  b.each do |i|\n    if a.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    return true if b.include?(i)\n  end\n  return false\nend",
    "  a.each do |i|\n    if a.include?(b)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..b.size - a.size\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "  b.each do |i|\n    return false if !a.include?(i)\n  end\n  return true\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      b.delete_at(b.index(i))\n    else\n      return false\n    end\n  end\n  return true\nend",
    "  a.each do |x|\n    if b.include?(x)\n      puts \"#{x} is a subarray of #{b}\"\n    else\n      puts \"#{x} is not a subarray of #{b}\"\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    return false if !b.include?(i)\n  end\n  return true\nend",
    "  return a.all? {|i| b.include? i}\nend",
    "  return a.sort == b.sort\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i..i + b.length - 1]\n    end\n  end\n  false\nend",
    "  a.each_index do |i|\n    return true if a[i] == b[0]\n    return false if a[i] != b[0]\n  end\nend",
    "  b.each do |i|\n    if a.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each_with_index do |value, index|\n    if value == b[0]\n      return true if b == a[index, b.length]\n    end\n  end\n  false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.size]\n    end\n  end\n  false\nend",
    "  if a.size < b.size\n    return false\n  end\n  for i in 0..a.size-1\n    for j in 0..b.size-1\n      if a[i+j] != b[j]\n        break\n      end\n      if j == b.size-1\n        return true\n      end\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if a.include?(b)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size < b.size\n    return false\n  end\n  for i in 0..a.size-b.size\n    if a[i, b.size] == b\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  b.each do |i|\n    return false if !a.include?(i)\n  end\n  true\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..(b.size - a.size)\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "  if a.length < b.length\n    return false\n  end\n  a.each_with_index do |x, i|\n    if x == b[0]\n      if a[i, b.length] == b\n        return true\n      end\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if !b.include?(i)\n      return false\n    end\n  end\n  return true\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    return false unless b.include?(i)\n  end\n  true\nend",
    "  if a.size > b.size\n    return false\n  end\n  i = 0\n  while i < b.size\n    j = 0\n    while j < a.size\n      if a[j] != b[i + j]\n        break\n      end\n      j += 1\n    end\n    if j == a.size\n      return true\n    end\n    i += 1\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each_index do |i|\n    if a[i] == b[0]\n      j = 0\n      while j < b.length\n        if a[i + j] != b[j]\n          break\n        end\n        j += 1\n      end\n      if j == b.length\n        return true\n      end\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    return true if b.include?(i)\n  end\n  false\nend",
    "  a.each do |x|\n    if b.include?(x)\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if a.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    return true if a.include?(b)\n  end\n  return false\nend",
    "  if a.size == 0\n    return true\n  end\n  if b.size == 0\n    return false\n  end\n  if a[0] == b[0]\n    return is_Sub_Array(a[1..-1], b[1..-1])\n  else\n    return is_Sub_Array(a, b[1..-1])\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  if a.length > b.length\n    return false\n  end\n  for i in 0..b.length-a.length\n    if a == b[i..i+a.length-1]\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |x|\n    if b.include?(x)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    return true if b.include?(i)\n  end\n  false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if a[i, b.length] == b\n    end\n  end\n  false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..b.size-a.size\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if a.include?(b)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |x|\n    if b.include?(x)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  b.each do |i|\n    if a.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..(b.size - a.size)\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  false\nend",
    "  if a.length > b.length\n    return false\n  end\n  for i in 0..b.length-a.length\n    if a == b[i, a.length]\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each_with_index do |e, i|\n    if e == b[i]\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if a.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  if a.length > b.length\n    return false\n  end\n  for i in 0..b.length - a.length\n    if a == b[i, a.length]\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    return false unless b.include?(i)\n  end\n  true\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  a.each do |i|\n    return false unless b.include?(i)\n  end\n  true\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    return true if b.include?(i)\n  end\n  false\nend",
    "  if a.size > b.size\n    return false\n  else\n    for i in 0..a.size-1\n      if a[i] != b[i]\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    return true if b.include?(i)\n  end\n  false\nend",
    "  a.each do |i|\n    if b.include? i\n      return true\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |e, i|\n    return false if e != b[i]\n  end\n  true\nend",
    "  b.each do |i|\n    if a.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  if a.length > b.length\n    return false\n  end\n  i = 0\n  j = 0\n  while i < a.length\n    while j < b.length\n      if a[i] == b[j]\n        i += 1\n        j += 1\n      else\n        j += 1\n      end\n    end\n    if i == a.length\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  b.each do |i|\n    if a.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      b.delete_at(b.index(i))\n    else\n      return false\n    end\n  end\n  return true\nend",
    "  b.each do |i|\n    return false unless a.include?(i)\n  end\n  true\nend",
    "  a.each do |i|\n    return false unless b.include? i\n  end\n  true\nend",
    "  if a.length > b.length\n    return false\n  end\n  for i in 0..a.length-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.length]\n    end\n  end\n  return false\nend"
  ]
}
{
  "name": "mbpp_74_is_samepatterns",
  "language": "rb",
  "prompt": "# Write a function to check whether it follows the sequence given in the patterns array.\ndef is_samepatterns(colors, patterns)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_74_is_samepatterns.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_samepatterns\n    candidate = method(:is_samepatterns)\n    assert_equal(true, candidate.call([\"red\", \"green\", \"green\"], [\"a\", \"b\", \"b\"]))\n    assert_equal(false, candidate.call([\"red\", \"green\", \"greenn\"], [\"a\", \"b\", \"b\"]))\n    assert_equal(false, candidate.call([\"red\", \"green\", \"greenn\"], [\"a\", \"b\"]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  # Write your code here\n  return false if colors.length != patterns.length\n  return false if patterns.length == 0\n  return false if patterns.length == 1 && patterns[0] == 1\n  return false if patterns.length == 1 && patterns[0] == 0\n  return false if patterns.length == 2 && patterns[0] == 1 && patterns[1] == 0\n  return false if patterns.length == 2 && patterns[0] == 0 && patterns[1] == 1\n  return false if patterns.length == 2 && patterns[0] == 1 && patterns[1] == 1\n  return false if patterns.length == 2 && patterns[0] == 0 && patterns[1] == 0\n  return false if patterns.length == 3 && patterns[0] == 1 && patterns[1] == 0 && patterns[2] == 1\n  return false if patterns.length == 3 && patterns[0] == 0 && patterns[1] == 1 && patterns[2] == 0\n  return false if patterns.length == 3 && patterns[0] == 1 && patterns[1] == 1 && patterns[2] == 0\n  return false if patterns.length == 3 && patterns[0] == 0 && patterns[1] == 0 && patterns[2] == 1\n  return false if patterns.length == 3 && patterns[0] == 1 && patterns[1] == 0 && patterns[2] == 0\n  return false if patterns.length == 3 && patterns[0] == 0 && patterns[1] == 1 && patterns[2] == 1\n  return false if patterns.length == 3 && patterns[0] == 1 && patterns[1] == 1 && patterns[2] == 1\n  return false if patterns.length == 3 && patterns[0] == 0 && patterns[1] == 0 && patterns[2] == 0\n  return false if patterns.length == 4 && patterns[0] == 1 && patterns[1] == 0 && patterns[2] == 1 && patterns[3] == 0\n  return false if patterns.length == 4 && patterns[0] == 0 && patterns[1] == 1 && patterns[2] == 0 && patterns[3] == 1\n  return false if patterns.length == 4 && patterns[0] == 1 && patterns[1] == 1 && patterns[2]",
    "  # Write your code here\n  colors.each_with_index do |color, index|\n    if patterns[index] == 'any'\n      next\n    elsif patterns[index] != color\n      return false\n    end\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  patterns.each do |pattern|\n    return false if pattern.length > colors.length\n    return false if pattern.length == 0\n    return false if pattern.length == 1 && colors.length > 1\n    return false if pattern.length == 1 && colors.length == 1 && pattern[0] != colors[0]\n    return false if pattern.length == 2 && colors.length == 2 && pattern[0] != colors[0] && pattern[1] != colors[1]\n    return false if pattern.length == 2 && colors.length == 2 && pattern[0] == colors[0] && pattern[1] == colors[1]\n    return false if pattern.length == 2 && colors.length == 2 && pattern[0] == colors[1] && pattern[1] == colors[0]\n    return false if pattern.length == 2 && colors.length == 3 && pattern[0] == colors[0] && pattern[1] == colors[1]\n    return false if pattern.length == 2 && colors.length == 3 && pattern[0] == colors[0] && pattern[1] == colors[2]\n    return false if pattern.length == 2 && colors.length == 3 && pattern[0] == colors[1] && pattern[1] == colors[0]\n    return false if pattern.length == 2 && colors.length == 3 && pattern[0] == colors[1] && pattern[1] == colors[2]\n    return false if pattern.length == 2 && colors.length == 3 && pattern[0] == colors[2] && pattern[1] == colors[0]\n    return false if pattern.length == 2 && colors.length == 3 && pattern[0] == colors[2] && pattern[1] == colors[1]\n    return false if pattern.length == 3 && colors.length == 3 && pattern[0] == colors[0] && pattern[1] == colors[1] && pattern[2] == colors[2]\n    return false if pattern.length == 3 && colors.length == 3 && pattern[0] == colors[0] && pattern[1] == colors[2] && pattern",
    "  colors.each_with_index do |color, i|\n    return false if color != patterns[i % patterns.length]\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  return false if colors.length == 0\n  return false if patterns.length == 0\n  return false if colors.length == 1 && patterns[0] != \"*\"\n  return false if patterns.length == 1 && patterns[0] != \"*\"\n  return false if colors.length == 1 && patterns[0] == \"*\"\n  return false if patterns.length == 1 && patterns[0] == \"*\"\n  return false if colors.length == 2 && patterns[0] != \"*\" && patterns[1] != \"*\"\n  return false if patterns.length == 2 && patterns[0] != \"*\" && patterns[1] != \"*\"\n  return false if colors.length == 2 && patterns[0] == \"*\" && patterns[1] == \"*\"\n  return false if patterns.length == 2 && patterns[0] == \"*\" && patterns[1] == \"*\"\n  return false if colors.length == 2 && patterns[0] == \"*\" && patterns[1] != \"*\"\n  return false if patterns.length == 2 && patterns[0] == \"*\" && patterns[1] != \"*\"\n  return false if colors.length == 2 && patterns[0] != \"*\" && patterns[1] == \"*\"\n  return false if patterns.length == 2 && patterns[0] != \"*\" && patterns[1] == \"*\"\n  return false if colors.length == 3 && patterns[0] != \"*\" && patterns[1] != \"*\" && patterns[2] != \"*\"\n  return false if patterns.length == 3 && patterns[0] != \"*\" && patterns[1] != \"*\" && patterns[2] != \"*\"\n  return false if colors.length == 3 && patterns[0] == \"*\" && patterns[1] == \"*\" && patterns[2] == \"*\"\n  return false if patterns.length == 3 && patterns[0] == \"*\" && patterns[1] == \"*\" && patterns[2] == \"*\"\n  return false if colors.length == 3 && patterns[0] == \"*\" && patterns[1] ==",
    "  patterns.each_with_index do |pattern, index|\n    return false if colors[index] != pattern\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  colors.each_with_index do |color, index|\n    return false if color != patterns[index]\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern != colors[index]\n  end\n  true\nend",
    "  colors.each_with_index do |color, index|\n    return false if color != patterns[index % patterns.length]\n  end\n  true\nend",
    "  # Write your code here\n  return false if patterns.length != colors.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == \"*\" && colors[index] != colors[index-1]\n    return false if pattern == \"*\" && colors[index] == colors[index-1]\n    return false if pattern == \"R\" && colors[index] != \"R\"\n    return false if pattern == \"G\" && colors[index] != \"G\"\n    return false if pattern == \"B\" && colors[index] != \"B\"\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  return false if colors.length == 0\n  return false if patterns.length == 0\n  return false if colors.length == 1 && patterns[0] != 0\n  return false if patterns.length == 1 && patterns[0] != 0\n  return false if patterns.length == 2 && patterns[0] != 0 && patterns[1] != 1",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == \"R\" && colors[index] != \"R\"\n    return false if pattern == \"G\" && colors[index] != \"G\"\n    return false if pattern == \"B\" && colors[index] != \"B\"\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == \"*\" && colors[index] == colors[index - 1]\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    if pattern == 'R'\n      return false if colors[index] != 'R' && colors[index] != 'G'\n    elsif pattern == 'G'\n      return false if colors[index] != 'G' && colors[index] != 'B'\n    else\n      return false if colors[index] != 'B' && colors[index] != 'R'\n    end\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n  end\n  true\nend",
    "  patterns.each do |pattern|\n    return false if colors.index(pattern) == nil\n  end\n  true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if colors[i] != pattern && pattern != '*'\n  end\n  true\nend",
    "  colors.each_with_index.all? do |color, i|\n    color == patterns[i % patterns.size]\n  end\nend",
    "  patterns.each do |pattern|\n    return false unless colors.include?(pattern)\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern != '*' && colors[index] != pattern\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'b' && colors[index] == colors[index - 1]\n    return false if pattern == 'r' && colors[index] != colors[index - 1]\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n    return false if pattern == 'Y' && colors[index] != 'Y'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  colors.each_with_index do |color, index|\n    return false if color != patterns[index]\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  puts \"Hello world!\"\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'b' && colors[index] != 'blue'\n    return false if pattern == 'g' && colors[index] != 'green'\n    return false if pattern == 'r' && colors[index] != 'red'\n  end\n  true\nend",
    "  # Write your code here\n  return false if patterns.length != colors.length\n  patterns.each_with_index do |pattern, index|\n    if pattern == 'R'\n      return false if colors[index] != 'R'\n    elsif pattern == 'G'\n      return false if colors[index] != 'G'\n    elsif pattern == 'B'\n      return false if colors[index] != 'B'\n    elsif pattern == 'Y'\n      return false if colors[index] != 'Y'\n    end\n  end\n  true\nend",
    "  patterns.each do |pattern|\n    return false if pattern.length != colors.length\n    pattern.each_with_index do |color, index|\n      return false if color != colors[index]\n    end\n  end\n  true\nend",
    "  patterns.each do |pattern|\n    return false if colors.index(pattern) == nil\n  end\n  return true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n    return false if pattern == 'Y' && colors[index] != 'Y'\n  end\n  true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if pattern != '*' && pattern != colors[i]\n  end\n  true\nend",
    "  colors.each_with_index do |color, i|\n    return false if color != patterns[i % patterns.length]\n  end\n  true\nend",
    "  # TODO: Implement the function\n  patterns.each do |pattern|\n    if pattern.length > colors.length\n      return false\n    end\n    if pattern.length == 1\n      if colors.count(pattern[0]) == 0\n        return false\n      end\n    else\n      if colors.count(pattern[0]) == 0\n        return false\n      end\n      if colors.count(pattern[1]) == 0\n        return false\n      end\n      if colors.count(pattern[0]) != colors.count(pattern[1])\n        return false\n      end\n    end\n  end\n  return true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if pattern != '*' && colors[i] != pattern\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'b' && colors[index] == 'w'\n    return false if pattern == 'w' && colors[index] == 'b'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n  end\n  true\nend",
    "  colors.each_with_index.all? { |color, i| color == patterns[i % patterns.size] }\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if colors[i] != pattern\n  end\n  true\nend",
    "  # Write your code here\n  # return true if the sequence of colors follows the patterns\n  # return false if the sequence of colors does not follow the patterns\n  # return false if the sequence of colors and patterns are not the same length\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'r' && colors[index] != 'red'\n    return false if pattern == 'g' && colors[index] != 'green'\n    return false if pattern == 'b' && colors[index] != 'blue'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if colors[i] != pattern\n  end\n  true\nend",
    "  return false if colors.size != patterns.size\n  patterns.each_with_index do |pattern, i|\n    return false if pattern != '*' && colors[i] != pattern\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  colors.each_with_index do |color, index|\n    return false if color != patterns[index] && patterns[index] != '*'\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  return false if colors.size != patterns.size\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'b' && colors[index] != colors[index-1]\n    return false if pattern == 'r' && colors[index] == colors[index-1]\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  puts colors.inspect\n  puts patterns.inspect\n  puts \"----\"\n  return true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if pattern != colors[i] && pattern != '*'\n  end\n  true\nend",
    "  patterns.each_with_index do |pattern, i|\n    return false if pattern != colors[i]\n  end\n  true\nend",
    "  # Write your code here\n  colors.each_with_index do |color, i|\n    return false if color != patterns[i % patterns.length]\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n  end\n  true\nend",
    "  colors.each_with_index do |color, i|\n    return false if color != patterns[i % patterns.length]\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example puts \"Hello world!\"\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n    return false if pattern == 'Y' && colors[index] != 'Y'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.size != patterns.size\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'r' && colors[index] != 'r'\n    return false if pattern == 'g' && colors[index] != 'g'\n    return false if pattern == 'b' && colors[index] != 'b'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  return false if colors.length == 0\n  return false if patterns.length == 0\n  return false if colors.length == 1 && patterns[0] != 0\n  return false if patterns.length == 1 && patterns[0] != 0\n  return false if patterns[0] != 0\n  return false if patterns[-1] != 0\n  return false if patterns.uniq.length == 1 && patterns[0] == 0\n  return false if patterns.uniq.length == 1 && patterns[0] != 0\n  return false if patterns.uniq.length == 2 && patterns[0] == 0 && patterns[-1] == 0\n  return false if patterns.uniq.length == 2 && patterns[0] != 0 && patterns[-1] != 0\n  return false if patterns.uniq.length == 2 && patterns[0] == 0 && patterns[-1] != 0\n  return false if patterns.uniq.length == 2 && patterns[0] != 0 && patterns[-1] == 0\n  return false if patterns.uniq.length == 3 && patterns[0] == 0 && patterns[-1] == 0 && patterns.count(1) == 1\n  return false if patterns.uniq.length == 3 && patterns[0] == 0 && patterns[-1] == 0 && patterns.count(1) == 2\n  return false if patterns.uniq.length == 3 && patterns[0] == 0 && patterns[-1] == 0 && patterns.count(1) == 3\n  return false if patterns.uniq.length == 3 && patterns[0] == 0 && patterns[-1] != 0 && patterns.count(1) == 1\n  return false if patterns.uniq.length == 3 && patterns[0] == 0 && patterns[-1] != 0 && patterns.count(1) == 2\n  return false if patterns.uniq.length == 3 && patterns[0] == 0 && patterns[-1] != 0 && patterns.count(1) == 3\n  return false if patterns.uniq.length == 3 && patterns[0] != 0 && patterns[-1] == 0 && patterns.count(1) == 1\n  return false if",
    "  # Write your code here\n  return false if colors.size != patterns.size\n  colors.each_with_index do |color, index|\n    return false if color != patterns[index] && patterns[index] != '*'\n  end\n  true\nend",
    "  # TODO: Implement the method\n  #puts colors\n  #puts patterns\n  #puts \"------\"\n  patterns.each do |pattern|\n    if colors.include?(pattern)\n      colors.delete_at(colors.index(pattern))\n    else\n      return false\n    end\n  end\n  return true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  return false if colors.length != patterns.length\n  return false if patterns.include?(\"*\") && colors.include?(\"R\")\n  return false if patterns.include?(\"*\") && colors.include?(\"G\")\n  return false if patterns.include?(\"*\") && colors.include?(\"B\")\n  return false if patterns.include?(\"*\") && colors.include?(\"Y\")\n  return false if patterns.include?(\"*\") && colors.include?(\"O\")\n  return false if patterns.include?(\"*\") && colors.include?(\"W\")\n  return false if patterns.include?(\"*\") && colors.include?(\"P\")\n  return false if patterns.include?(\"*\") && colors.include?(\"*\")\n  return false if patterns.include?(\"*\") && colors.include?(\"\")\n  return false if patterns.include?(\"\") && colors.include?(\"R\")\n  return false if patterns.include?(\"\") && colors.include?(\"G\")\n  return false if patterns.include?(\"\") && colors.include?(\"B\")\n  return false if patterns.include?(\"\") && colors.include?(\"Y\")\n  return false if patterns.include?(\"\") && colors.include?(\"O\")\n  return false if patterns.include?(\"\") && colors.include?(\"W\")\n  return false if patterns.include?(\"\") && colors.include?(\"P\")\n  return false if patterns.include?(\"\") && colors.include?(\"*\")\n  return false if patterns.include?(\"\") && colors.include?(\"\")\n  return false if patterns.include?(\"R\") && colors.include?(\"G\")\n  return false if patterns.include?(\"R\") && colors.include?(\"B\")\n  return false if patterns.include?(\"R\") && colors.include?(\"Y\")\n  return false if patterns.include?(\"R\") && colors.include?(\"O\")\n  return false if patterns.include?(\"R\") && colors.include?(\"W\")\n  return false if patterns.include?(\"R\") && colors.include?(\"P\")",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern.length != colors[index].length\n    pattern.each_with_index do |p, i|\n      return false if p != '*' && p != colors[index][i]\n    end\n  end\n  true\nend",
    "  colors.each_with_index do |color, index|\n    return false if color != patterns[index % patterns.length]\n  end\n  true\nend",
    "  color_pattern = []\n  patterns.each do |pattern|\n    color_pattern << pattern.split('')\n  end\n  color_pattern.flatten!\n  colors.each_with_index do |color, index|\n    return false if color != color_pattern[index]\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if colors[index] != pattern\n  end\n  true\nend",
    "  # Write your code here\n  patterns.each_with_index do |pattern, index|\n    if pattern == 'R'\n      return false if colors[index] != 'R'\n    elsif pattern == 'G'\n      return false if colors[index] != 'G'\n    elsif pattern == 'B'\n      return false if colors[index] != 'B'\n    elsif pattern == 'Y'\n      return false if colors[index] != 'Y'\n    elsif pattern == '*'\n      return false if colors[index] == 'R' || colors[index] == 'G' || colors[index] == 'B' || colors[index] == 'Y'\n    end\n  end\n  true\nend",
    "  colors.each_with_index do |color, i|\n    if color != patterns[i % patterns.length]\n      return false\n    end\n  end\n  return true\nend",
    "  colors.each_with_index do |color, index|\n    return false if color != patterns[index % patterns.length]\n  end\n  true\nend",
    "  colors.each_with_index do |color, i|\n    return false if color != patterns[i % patterns.length]\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  patterns.each_with_index do |pattern, index|\n    return false if colors[index] != pattern\n  end\n  return true\nend",
    "  colors.each_with_index do |color, i|\n    return false if color != patterns[i % patterns.length]\n  end\n  true\nend",
    "  # TODO\n  # if colors.length != patterns.length\n  #   return false\n  # end\n  #\n  # for i in 0..colors.length-1\n  #   if colors[i] != patterns[i]\n  #     return false\n  #   end\n  # end\n  #\n  # return true",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  colors.each_with_index do |color, index|\n    return false if color != patterns[index]\n  end\n  true\nend",
    "  colors.each_with_index do |color, index|\n    return false if color != patterns[index % patterns.length]\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == \"*\" && colors[index] == colors[index - 1]\n  end\n  true\nend",
    "  # Write your code here\n  # return true if the colors array follows the patterns array\n  # return false if the colors array does not follow the patterns array\n  # return false if the colors array is empty\n  # return false if the patterns array is empty\n  # return true if the colors array is empty and the patterns array is empty\n  return false if colors.empty? || patterns.empty?\n  return true if colors.empty? && patterns.empty?\n  return false if colors.length != patterns.length\n  return false if colors.length == 1 && patterns.length == 1 && colors[0] != patterns[0]\n  return false if colors.length == 1 && patterns.length == 1 && colors[0] == patterns[0]\n  return false if colors.length == 2 && patterns.length == 2 && colors[0] != patterns[0] && colors[1] != patterns[1]\n  return false if colors.length == 2 && patterns.length == 2 && colors[0] == patterns[0] && colors[1] == patterns[1]\n  return false if colors.length == 2 && patterns.length == 2 && colors[0] == patterns[0] && colors[1] != patterns[1]\n  return false if colors.length == 2 && patterns.length == 2 && colors[0] != patterns[0] && colors[1] == patterns[1]\n  return false if colors.length == 2 && patterns.length == 2 && colors[0] != patterns[0] && colors[1] != patterns[1]\n  return false if colors.length == 2 && patterns.length == 2 && colors[0] == patterns[0] && colors[1] == patterns[1]\n  return false if colors.length == 3 && patterns.length == 3 && colors[0] != patterns[0] && colors[1] != patterns[1] && colors[2] != patterns[2]\n  return false if colors.length == 3 && patterns.length == 3 && colors[0] == patterns[0] && colors[1] == patterns[1] && colors[2] == patterns[2]\n  return false if colors.length == 3 && patterns.length == 3 && colors[0] == patterns[0] && colors[1] == patterns[1] && colors",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern != colors[index]\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    if pattern == 'R' && colors[index] != 'R'\n      return false\n    elsif pattern == 'G' && colors[index] != 'G'\n      return false\n    elsif pattern == 'B' && colors[index] != 'B'\n      return false\n    end\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern != colors[index] && pattern != '*'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  colors.each_with_index do |color, index|\n    return false if color != patterns[index] && patterns[index] != '*'\n  end\n  true\nend",
    "  patterns.each_with_index do |pattern, index|\n    return false if colors[index] != pattern\n  end\n  true\nend",
    "  colors.each_with_index do |color, index|\n    return false if patterns[index] != color\n  end\n  true\nend",
    "  colors.each_with_index do |color, index|\n    return false if color != patterns[index % patterns.length]\n  end\n  true\nend",
    "  colors.each_with_index do |color, index|\n    return false if color != patterns[index % patterns.length]\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n    return false if pattern == 'Y' && colors[index] != 'Y'\n    return false if pattern == 'W' && colors[index] != 'W'\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  return false if colors.length != patterns.length\n  colors.each_with_index do |color, i|\n    return false if color != patterns[i] && patterns[i] != '*'\n  end\n  true\nend",
    "  colors.each_with_index do |color, index|\n    return false if color != patterns[index % patterns.length]\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  return false if colors.length != patterns.length\n  colors.each_with_index do |color, index|\n    return false if color != patterns[index] && patterns[index] != '*'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n  end\n  true\nend",
    "  if colors.length != patterns.length\n    return false\n  end\n  for i in 0..colors.length-1\n    if colors[i] != patterns[i]\n      return false\n    end\n  end\n  return true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example puts \"Hello world!\"\n  #puts colors\n  #puts patterns\n  #puts colors.length\n  #puts patterns.length\n  if colors.length != patterns.length\n    return false\n  end\n  i = 0\n  while i < patterns.length\n    if patterns[i] == 0\n      if colors[i] != 0\n        return false\n      end\n    elsif patterns[i] == 1\n      if colors[i] == 0\n        return false\n      end\n    elsif patterns[i] == 2\n      if colors[i] == 0\n        return false\n      end\n    end\n    i += 1\n  end\n  return true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if pattern == 'b' && colors[i] != colors[i+1]\n    return false if pattern == 'r' && colors[i] == colors[i+1]\n  end\n  true\nend",
    "  patterns.each do |pattern|\n    return false unless colors.include?(pattern)\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  return false if colors.length == 0\n  return false if patterns.length == 0\n  return false if colors.length == 1 && patterns[0] != 'a'\n  return false if colors.length == 1 && patterns[0] == 'a'\n  return false if patterns.length == 1 && patterns[0] != 'a'\n  return false if patterns.length == 1 && patterns[0] == 'a'\n  return false if patterns.length == 2 && patterns[0] != 'a'\n  return false if patterns.length == 2 && patterns[0] == 'a' && patterns[1] != 'b'\n  return false if patterns.length == 2 && patterns[0] == 'a' && patterns[1] == 'b'\n  return false if patterns.length == 3 && patterns[0] != 'a'\n  return false if patterns.length == 3 && patterns[0] == 'a' && patterns[1] != 'b'\n  return false if patterns.length == 3 && patterns[0] == 'a' && patterns[1] == 'b' && patterns[2] != 'c'\n  return false if patterns.length == 3 && patterns[0] == 'a' && patterns[1] == 'b' && patterns[2] == 'c'\n  return false if patterns.length == 4 && patterns[0] != 'a'\n  return false if patterns.length == 4 && patterns[0] == 'a' && patterns[1] != 'b'\n  return false if patterns.length == 4 && patterns[0] == 'a' && patterns[1] == 'b' && patterns[2] != 'c'\n  return false if patterns.length == 4 && patterns[0] == 'a' && patterns[1] == 'b' && patterns[2] == 'c' && patterns[3] != 'd'\n  return false if patterns.length == 4 && patterns[0] == 'a' && patterns[1] == 'b' && patterns[2] == 'c' && patterns[3] == 'd'\n  return false if patterns.length == 5 && patterns[0] != 'a'\n  return false if patterns",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if pattern == 'r' && colors[i] != 'red'\n    return false if pattern == 'g' && colors[i] != 'green'\n    return false if pattern == 'b' && colors[i] != 'blue'\n  end\n  true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if pattern != '*' && pattern != colors[i]\n  end\n  true\nend",
    "  colors.each_with_index do |color, index|\n    if patterns[index] != color\n      return false\n    end\n  end\n  return true\nend",
    "  # Write your code here\n  # return true if all the patterns are same\n  # return false if any of the patterns are different\n  patterns.each_with_index do |pattern, index|\n    return false if pattern != colors[index]\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n  end\n  true\nend",
    "  patterns.each do |pattern|\n    return false if colors.index(pattern) != 0\n    colors.slice!(0, pattern.length)\n  end\n  true\nend",
    "  colors.each_with_index.all? do |color, index|\n    color == patterns[index % patterns.length]\n  end\nend",
    "  # Write your code here\n  patterns.each_with_index do |pattern, index|\n    if pattern.length > 1\n      return false if colors[index] != pattern[0]\n    else\n      return false if colors[index] != pattern\n    end\n  end\n  true\nend",
    "  patterns.each do |pattern|\n    return false if colors.index(pattern) == nil\n  end\n  return true\nend",
    "  i = 0\n  while i < patterns.length\n    if colors.include?(patterns[i])\n      colors.delete_at(colors.index(patterns[i]))\n    else\n      return false\n    end\n    i += 1\n  end\n  return true\nend",
    "  patterns.each do |pattern|\n    return false unless colors.include?(pattern)\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == \"*\" && colors[index] != colors[index - 1]\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  colors.each_with_index do |color, index|\n    return false if color != patterns[index] && patterns[index] != '*'\n  end\n  true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if pattern == 'r' && colors[i] != 'red'\n    return false if pattern == 'g' && colors[i] != 'green'\n    return false if pattern == 'b' && colors[i] != 'blue'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  return false if colors.length == 0\n  return false if patterns.length == 0\n  return false if colors.length == 1 && patterns[0] != '*'\n  return false if patterns.length == 1 && patterns[0] != '*'\n  return false if patterns.length == 1 && patterns[0] == '*' && colors[0] != colors[1]\n  return false if patterns.length == 1 && patterns[0] == '*' && colors[0] == colors[1]\n  return false if patterns.length == 2 && patterns[0] == '*' && patterns[1] == '*' && colors[0] != colors[2]\n  return false if patterns.length == 2 && patterns[0] == '*' && patterns[1] == '*' && colors[0] == colors[2]\n  return false if patterns.length == 2 && patterns[0] == '*' && patterns[1] != '*' && colors[0] != colors[1]\n  return false if patterns.length == 2 && patterns[0] == '*' && patterns[1] != '*' && colors[0] == colors[1]\n  return false if patterns.length == 2 && patterns[0] != '*' && patterns[1] == '*' && colors[0] != colors[1]\n  return false if patterns.length == 2 && patterns[0] != '*' && patterns[1] == '*' && colors[0] == colors[1]\n  return false if patterns.length == 2 && patterns[0] != '*' && patterns[1] != '*' && colors[0] != colors[1]\n  return false if patterns.length == 2 && patterns[0] != '*' && patterns[1] != '*' && colors[0] == colors[1]\n  return false if patterns.length == 3 && patterns[0] == '*' && patterns[1] == '*' && patterns[2] == '*' && colors[0] != colors[3]\n  return false if patterns.length == 3 && patterns[0] == '*' && patterns[1] == '",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == \"*\" && colors[index] != colors[index - 1]\n    return false if pattern == \"*\" && colors[index] == colors[index - 1]\n    return false if pattern == \"*\" && colors[index] == colors[index + 1]\n    return false if pattern == \"*\" && colors[index] != colors[index + 1]\n    return false if pattern == \"*\" && colors[index] == colors[index - 1] && colors[index] == colors[index + 1]\n    return false if pattern == \"*\" && colors[index] != colors[index - 1] && colors[index] != colors[index + 1]\n    return false if pattern == \"*\" && colors[index] != colors[index - 1] && colors[index] == colors[index + 1]\n    return false if pattern == \"*\" && colors[index] == colors[index - 1] && colors[index] != colors[index + 1]\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  for i in 0..(colors.length - 1)\n    return false if patterns[i] != '*' && colors[i] != patterns[i]\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n  end\n  true\nend",
    "  # Write your code here\n  patterns.each_with_index do |pattern, index|\n    return false if colors[index] != pattern\n  end\n  true\nend",
    "  patterns.each_with_index do |pattern, index|\n    return false if colors[index] != pattern\n  end\n  true\nend",
    "  colors.each_with_index do |color, i|\n    return false if color != patterns[i % patterns.length]\n  end\n  true\nend",
    "  patterns.each_with_index do |pattern, i|\n    return false if pattern != colors[i]\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern != colors[index]\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if colors[index] != pattern\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  puts \"Hello world!\"\nend",
    "  patterns.each_with_index do |pattern, i|\n    return false unless pattern == colors[i, pattern.length]\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if pattern == 'R' && colors[i] != 'R'\n    return false if pattern == 'G' && colors[i] != 'G'\n    return false if pattern == 'B' && colors[i] != 'B'\n    return false if pattern == 'Y' && colors[i] != 'Y'\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  patterns.each do |pattern|\n    if pattern.length > 1\n      return false if colors.index(pattern[0]) > colors.index(pattern[1])\n    end\n  end\n  return true\nend",
    "  # Write your code here\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  colors.each_with_index do |color, index|\n    return false if color != patterns[index] && patterns[index] != '*'\n  end\n  true\nend",
    "  # your code here\n  # return true if all the patterns are same\n  # return false if any of the pattern is not same\n  # if the length of the colors and patterns are not same, return false\n  if colors.length != patterns.length\n    return false\n  end\n  # if the length of the colors and patterns are same, then check whether the patterns are same\n  # if the patterns are same, return true\n  # if the patterns are not same, return false\n  for i in 0..colors.length-1\n    if colors[i] != patterns[i]\n      return false\n    end\n  end\n  return true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if colors[index] != pattern\n  end\n  true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    if pattern == 'r'\n      return false if colors[i] != 'red'\n    elsif pattern == 'b'\n      return false if colors[i] != 'blue'\n    elsif pattern == 'g'\n      return false if colors[i] != 'green'\n    end\n  end\n  true\nend",
    "  # TODO: Implement the method\n  # p patterns\n  # p colors\n  # p patterns.length\n  # p colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.length == colors.length\n  # p patterns.",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if colors[index] != pattern\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    if pattern == 'R'\n      return false if colors[index] != 'R'\n    elsif pattern == 'G'\n      return false if colors[index] != 'G'\n    elsif pattern == 'B'\n      return false if colors[index] != 'B'\n    elsif pattern == 'Y'\n      return false if colors[index] != 'Y'\n    elsif pattern == '*'\n      return false if colors[index] == 'R' || colors[index] == 'G' || colors[index] == 'B' || colors[index] == 'Y'\n    end\n  end\n  return true\nend",
    "  colors.each_with_index do |color, index|\n    if color != patterns[index % patterns.length]\n      return false\n    end\n  end\n  return true\nend",
    "  # TODO: Implement the method\n  # The method returns a boolean, true if the sequence follows patterns, false otherwise\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'r' && colors[index] != 'red'\n    return false if pattern == 'b' && colors[index] != 'blue'\n    return false if pattern == 'g' && colors[index] != 'green'\n  end\n  true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern != colors[index]\n  end\n  return true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if colors[i] != pattern\n  end\n  true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'b' && colors[index] != colors[index - 1]\n    return false if pattern == 'r' && colors[index] == colors[index - 1]\n  end\n  true\nend",
    "  patterns.each do |pattern|\n    return false if colors.index(pattern) != 0\n    colors = colors.slice(pattern.length, colors.length)\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'r' && colors[index] != 'r'\n    return false if pattern == 'g' && colors[index] != 'g'\n    return false if pattern == 'b' && colors[index] != 'b'\n    return false if pattern == 'y' && colors[index] != 'y'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern != '*' && colors[index] != pattern\n  end\n  true\nend",
    "  colors.each_with_index do |color, index|\n    return false if color != patterns[index % patterns.length]\n  end\n  true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'r' && colors[index] != 'red'\n    return false if pattern == 'g' && colors[index] != 'green'\n    return false if pattern == 'b' && colors[index] != 'blue'\n  end\n  true\nend",
    "  return false if colors.length != patterns.length\n  colors.each_with_index do |color, i|\n    return false if color != patterns[i] && patterns[i] != '*'\n  end\n  true\nend",
    "  # Write your code here\n  # return true if all the patterns are followed\n  # return false if any of the patterns are not followed\n  i = 0\n  while i < patterns.length\n    if colors.index(patterns[i]) == nil\n      return false\n    end\n    i += 1\n  end\n  return true\nend",
    "  patterns.each do |pattern|\n    return false if colors.index(pattern) != 0\n    colors.slice!(0, pattern.length)\n  end\n  true\nend",
    "  patterns.each do |pattern|\n    return false if colors.index(pattern) == nil\n  end\n  return true\nend",
    "  # Write your code here\n  colors.each_with_index do |color, index|\n    return false if patterns[index] != color\n  end\n  true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if colors[index] != pattern\n  end\n  true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if pattern != '*' && pattern != colors[i]\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  puts colors.join('') == patterns.join('')\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'b' && colors[index] == 'w'\n  end\n  true\nend",
    "  patterns.each do |pattern|\n    return false if pattern.length != colors.length\n    pattern.each_with_index do |color, index|\n      return false if color != colors[index]\n    end\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == \"R\" && colors[index] != \"R\"\n    return false if pattern == \"G\" && colors[index] != \"G\"\n    return false if pattern == \"B\" && colors[index] != \"B\"\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    if pattern == 'R'\n      if colors[i] != 'R'\n        return false\n      end\n    elsif pattern == 'G'\n      if colors[i] != 'G'\n        return false\n      end\n    elsif pattern == 'B'\n      if colors[i] != 'B'\n        return false\n      end\n    end\n  end\n  return true\nend",
    "  # Write your code here\n  colors.each_with_index do |color, index|\n    if patterns[index] == '*'\n      next\n    elsif patterns[index] == color\n      next\n    else\n      return false\n    end\n  end\n  return true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n    return false if pattern == 'Y' && colors[index] != 'Y'\n    return false if pattern == 'M' && colors[index] != 'M'\n    return false if pattern == 'C' && colors[index] != 'C'\n    return false if pattern == 'W' && colors[index] != 'W'\n  end\n  true\nend",
    "  colors.each_with_index do |color, index|\n    return false if color != patterns[index % patterns.length]\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if pattern == 'R' && colors[i] != 'R'\n    return false if pattern == 'G' && colors[i] != 'G'\n    return false if pattern == 'B' && colors[i] != 'B'\n  end\n  true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if pattern == 'r' && colors[i] != 'r'\n    return false if pattern == 'g' && colors[i] != 'g'\n    return false if pattern == 'b' && colors[i] != 'b'\n  end\n  true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if pattern != '*' && pattern != colors[i]\n  end\n  true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if colors[index] != pattern\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  puts colors.to_s\n  puts patterns.to_s\n  puts \"Hello world!\"\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern != '*' && pattern != colors[index]\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n    return false if pattern == 'Y' && colors[index] != 'Y'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  colors.each_with_index do |color, index|\n    return false if color != patterns[index]\n  end\n  true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if colors[index] != pattern\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n    return false if pattern == 'Y' && colors[index] != 'Y'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern != colors[index]\n  end\n  return true\nend",
    "  # TODO: Implement the method\n  # The method returns a boolean, true if the pattern is followed, false if not\n  # If the array is empty, it should return true\n  return true if colors.empty?\n  # If the array is not empty, it should return false\n  return false if colors.empty? == false\n  # If the array is not empty, it should return true if the pattern is followed\n  return true if colors.empty? == false && patterns.empty? == false\n  # If the array is not empty, it should return false if the pattern is not followed\n  return false if colors.empty? == false && patterns.empty? == false\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  return false if colors.length == 0\n  return false if patterns.length == 0",
    "  patterns.each_with_index do |pattern, index|\n    return false if colors[index] != pattern\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n  end\n  true\nend",
    "  # Write your code here\n  if colors.length != patterns.length\n    return false\n  end\n  for i in 0..colors.length-1\n    if colors[i] != patterns[i]\n      return false\n    end\n  end\n  return true\nend",
    "  return false if colors.size != patterns.size\n  patterns.each_with_index do |pattern, index|\n    return false if pattern != '*' && colors[index] != pattern\n  end\n  true\nend",
    "  # Write your code here\n  # if colors.length != patterns.length\n  #   return false\n  # end\n  #\n  # for i in 0..colors.length-1\n  #   if colors[i] != patterns[i]\n  #     return false\n  #   end\n  # end\n  #\n  # return true",
    "  colors.each_with_index.all? do |color, index|\n    color == patterns[index % patterns.length]\n  end\nend",
    "  # Write your code here\n  # To print results to the standard output you can use print\n  # Example: print \"Hello world!\"\n  #print colors\n  #print patterns\n  #print colors.length\n  #print patterns.length\n  #print colors.length == patterns.length\n  #print colors.length == patterns.length && colors.length > 0\n  #print colors.length == patterns.length && colors.length > 0 && patterns.length > 0\n  #print colors.length == patterns.length && colors.length > 0 && patterns.length > 0 && colors[0] == patterns[0]\n  #print colors.length == patterns.length && colors.length > 0 && patterns.length > 0 && colors[0] == patterns[0] && colors[1] == patterns[1]\n  #print colors.length == patterns.length && colors.length > 0 && patterns.length > 0 && colors[0] == patterns[0] && colors[1] == patterns[1] && colors[2] == patterns[2]\n  #print colors.length == patterns.length && colors.length > 0 && patterns.length > 0 && colors[0] == patterns[0] && colors[1] == patterns[1] && colors[2] == patterns[2] && colors[3] == patterns[3]\n  #print colors.length == patterns.length && colors.length > 0 && patterns.length > 0 && colors[0] == patterns[0] && colors[1] == patterns[1] && colors[2] == patterns[2] && colors[3] == patterns[3] && colors[4] == patterns[4]\n  #print colors.length == patterns.length && colors.length > 0 && patterns.length > 0 && colors[0] == patterns[0] && colors[1] == patterns[1] && colors[2] == patterns[2] && colors[3] == patterns[3] && colors[4] == patterns[4] && colors[5] == patterns[5]\n  #print colors.length == patterns.length && colors.length > 0 && patterns.length > 0 && colors[0] == patterns[0] && colors[1] == patterns[1] && colors[2] == patterns[2] && colors[3]",
    "  colors.each_with_index do |color, index|\n    return false if color != patterns[index % patterns.length]\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'b' && colors[index] != 'b'\n    return false if pattern == 'r' && colors[index] == 'b'\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  return false if colors.length != patterns.length\n  colors.each_with_index do |color, index|\n    return false if color != patterns[index] && patterns[index] != '*'\n  end\n  true\nend",
    "  patterns.each_with_index do |pattern, index|\n    return false if colors[index] != pattern\n  end\n  true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    if pattern == \"*\"\n      next\n    elsif pattern == \"R\"\n      return false if colors[index] != \"R\"\n    elsif pattern == \"G\"\n      return false if colors[index] != \"G\"\n    elsif pattern == \"B\"\n      return false if colors[index] != \"B\"\n    end\n  end\n  true\nend",
    "  patterns.each_with_index do |pattern, i|\n    return false if colors[i] != pattern\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if colors[i] != pattern\n  end\n  true\nend",
    "  patterns.each do |pattern|\n    return false if colors.index(pattern) == nil\n  end\n  return true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  puts colors.inspect\n  puts patterns.inspect\n  puts \"----\"\n  puts colors.length\n  puts patterns.length\n  puts \"----\"\n  puts colors.length == patterns.length\n  puts \"----\"\n  puts colors.length == patterns.length && colors.each_with_index.all? { |color, index| color == patterns[index] }\n  puts \"----\"\n  puts colors.length == patterns.length && colors.each_with_index.all? { |color, index| color == patterns[index] } ? \"YES\" : \"NO\"\nend",
    "  patterns.each do |pattern|\n    return false if colors.index(pattern) == nil\n  end\n  return true\nend",
    "  patterns.each_with_index do |pattern, index|\n    return false if colors[index] != pattern\n  end\n  true\nend",
    "  colors.each_with_index do |color, i|\n    return false if color != patterns[i % patterns.length]\n  end\n  true\nend",
    "  # Write your code here\n  patterns.each do |pattern|\n    return false if colors.index(pattern) == nil\n  end\n  return true\nend",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  return false if colors.length != patterns.length\n  return false if colors.length == 0\n  return false if patterns.length == 0\n  return false if colors.length == 1 && patterns[0] != 0\n  return false if patterns.length == 1 && patterns[0] != 0\n  return false if patterns.length == 1 && patterns[0] == 0 && colors.length != 1\n  return false if patterns.length == 2 && patterns[0] == 0 && patterns[1] == 0\n  return false if patterns.length == 2 && patterns[0] == 1 && patterns[1] == 1\n  return false if patterns.length == 2 && patterns[0] == 0 && patterns[1] == 1 && colors[0] != colors[1]\n  return false if patterns.length == 2 && patterns[0] == 1 && patterns[1] == 0 && colors[0] == colors[1]\n  return false if patterns.length == 3 && patterns[0] == 0 && patterns[1] == 0 && patterns[2] == 0\n  return false if patterns.length == 3 && patterns[0] == 1 && patterns[1] == 1 && patterns[2] == 1\n  return false if patterns.length == 3 && patterns[0] == 0 && patterns[1] == 1 && patterns[2] == 1 && colors[0] != colors[1] && colors[0] != colors[2]\n  return false if patterns.length == 3 && patterns[0] == 1 && patterns[1] == 0 && patterns[2] == 0 && colors[0] == colors[1] && colors[0] == colors[2]\n  return false if patterns.length == 3 && patterns[0] == 0 && patterns[1] == 1 && patterns[2] == 0 && colors[0] != colors[1] && colors[1] == colors[2]\n  return false if patterns.length == 3 && patterns[0] == 1 && patterns[1] == 0 && patterns[2] == 1 && colors[0] == colors[1] && colors[1] != colors[2]\n  return false if patterns.length == 3",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  puts \"Hello world!\"\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n  end\n  true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'r' && colors[index] != 'red'\n    return false if pattern == 'g' && colors[index] != 'green'\n    return false if pattern == 'b' && colors[index] != 'blue'\n  end\n  true\nend",
    "  patterns.each do |pattern|\n    return false unless colors.include?(pattern)\n  end\n  true\nend",
    "  colors.each_with_index do |color, index|\n    if patterns[index] != color\n      return false\n    end\n  end\n  return true\nend",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if colors[index] != pattern\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n    return false if pattern == 'Y' && colors[index] != 'Y'\n  end\n  true\nend",
    "  # Write your code here\n  return false if colors.length != patterns.length\n  return false if colors.length == 0\n  return false if patterns.length == 0\n  return false if colors.length == 1 && patterns[0] != \"1\"\n  return false if colors.length == 1 && patterns[0] == \"1\"\n  return false if colors.length == 2 && patterns[0] != \"1\"\n  return false if colors.length == 2 && patterns[1] != \"1\"\n  return false if colors.length == 2 && patterns[0] == \"1\" && patterns[1] == \"1\"\n  return false if colors.length == 2 && patterns[0] == \"1\" && patterns[1] != \"1\"\n  return false if colors.length == 2 && patterns[0] != \"1\" && patterns[1] == \"1\"\n  return false if colors.length == 2 && patterns[0] != \"1\" && patterns[1] != \"1\"\n  return false if colors.length == 3 && patterns[0] != \"1\"\n  return false if colors.length == 3 && patterns[1] != \"1\"\n  return false if colors.length == 3 && patterns[2] != \"1\"\n  return false if colors.length == 3 && patterns[0] == \"1\" && patterns[1] == \"1\" && patterns[2] == \"1\"\n  return false if colors.length == 3 && patterns[0] == \"1\" && patterns[1] == \"1\" && patterns[2] != \"1\"\n  return false if colors.length == 3 && patterns[0] == \"1\" && patterns[1] != \"1\" && patterns[2] == \"1\"\n  return false if colors.length == 3 && patterns[0] == \"1\" && patterns[1] != \"1\" && patterns[2] != \"1\"\n  return false if colors.length == 3 && patterns[0] != \"1\" && patterns[1] == \"1\" && patterns[2] == \"1\"\n  return false if colors.length == 3 && patterns[0] != \"1\" && patterns[1] == \"1\" && patterns[2] != \"1\"\n  return false if colors",
    "  # Write your code here\n  # To print results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n  return false if colors.size != patterns.size\n  return false if colors.size == 0\n  return false if patterns.size == 0\n  return false if patterns.include?('?')\n  return false if patterns.include?('*')\n  return false if patterns.include?('#')\n  return false if patterns.include?('!')\n  return false if patterns.include?('&')\n  return false if patterns.include?('^')\n  return false if patterns.include?('%')\n  return false if patterns.include?('$')\n  return false if patterns.include?('@')\n  return false if patterns.include?('+')\n  return false if patterns.include?('-')\n  return false if patterns.include?('=')\n  return false if patterns.include?('_')\n  return false if patterns.include?('|')\n  return false if patterns.include?('~')\n  return false if patterns.include?('`')\n  return false if patterns.include?('/')\n  return false if patterns.include?('\\\\')\n  return false if patterns.include?('<')\n  return false if patterns.include?('>')\n  return false if patterns.include?('.')\n  return false if patterns.include?(',')\n  return false if patterns.include?(';')\n  return false if patterns.include?(':')\n  return false if patterns.include?('\"')\n  return false if patterns.include?(\"'\")\n  return false if patterns.include?('[')\n  return false if patterns.include?(']')\n  return false if patterns.include?('{')\n  return false if patterns.include?('}')\n  return false if patterns.include?('(')\n  return false if patterns.include?(')')\n  return false if patterns.include?('1')\n  return false if patterns.include?('2')\n  return false if patterns.include?('3')\n  return false if patterns.include?('4')\n  return false if patterns.include?('5')\n  return false if",
    "  return false if colors.length != patterns.length\n  patterns.each_with_index do |pattern, i|\n    return false if colors[i] != pattern\n  end\n  true\nend",
    "  # Write your code here\n  # return true or false\n  return false if patterns.length != colors.length\n  patterns.each_with_index do |pattern, index|\n    return false if pattern == 'R' && colors[index] != 'R'\n    return false if pattern == 'G' && colors[index] != 'G'\n    return false if pattern == 'B' && colors[index] != 'B'\n  end\n  true\nend"
  ]
}
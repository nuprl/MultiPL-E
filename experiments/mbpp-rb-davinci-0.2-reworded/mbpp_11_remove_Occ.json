{
  "name": "mbpp_11_remove_Occ",
  "language": "rb",
  "prompt": "# Write a rbthon function to remove first and last occurrence of a given character from the string.\ndef remove_Occ(s, ch)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_11_remove_Occ.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_remove_Occ\n    candidate = method(:remove_Occ)\n    assert_equal(\"heo\", candidate.call(\"hello\", \"l\"))\n    assert_equal(\"bcd\", candidate.call(\"abcda\", \"a\"))\n    assert_equal(\"H\", candidate.call(\"PHP\", \"P\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  s.delete!(ch)\n  s\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\nend\nputs remove_Occ('Ruby', 'y')",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend\nremove_Occ(\"abracadabra\", \"a\")",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s\nend",
    "  s.slice!(ch)\n  s.reverse!.slice!(ch)\n  s.reverse!\nend",
    "  s.delete(ch)\nend",
    "  s.delete ch\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend\nremove_Occ(\"geeksforgeeks\", \"e\")",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete ch\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.chars.reject { |c| c == ch }.join\nend\nputs remove_Occ(\"Ruby is a beautiful language\", \"a\")",
    "  s.delete!(ch)\n  s\nend",
    "  s.delete(ch)\nend\nputs remove_Occ(\"Ruby\", \"y\")",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete!(ch)\n  s\nend",
    "  s.delete! ch\n  s.delete! ch\nend",
    "  s.delete!(ch)\n  s\nend",
    "  s.delete!(ch)\n  s\nend\nputs remove_Occ(\"Ruby\", \"y\")",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.chars.reject { |c| c == ch }.join\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete!(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.chars.reject { |c| c == ch }.join\nend",
    "  s.chars.reject { |c| c == ch }.join\nend",
    "  s.delete!(ch)\n  s\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\nend\nputs remove_Occ(\"geeksforgeeks\", \"e\")",
    "  s.delete!(ch)\n  s\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  return s\nend",
    "  return s.sub(ch, '').sub(ch, '')\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  s\nend",
    "  s.delete!(ch)\n  s\nend\nputs remove_Occ(\"Ruby is a beautiful language\", \"a\")",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend\nputs remove_Occ(\"Ruby is a beautiful language\", \"a\")",
    "  s.slice!(ch)\n  s.slice!(ch)\n  puts s\nend\nremove_Occ(\"Ruby\", \"y\")",
    "  s.sub(ch, '').sub(ch, '')\nend\nputs remove_Occ('Ruby', 'y')",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s\nend",
    "  s.delete(ch)\nend\nputs remove_Occ(\"Ruby\", \"y\")",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend\nputs remove_Occ(\"Ruby\", \"y\")",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend\nputs remove_Occ(\"Ruby\", \"y\")",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s\nend",
    "  s.chars.reject { |c| c == ch }.join\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  return s\nend\nputs remove_Occ(\"geeksforgeeks\", \"e\")",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend\nremove_Occ(\"hello world\", \"l\")",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete! ch\n  s.reverse!\n  s.delete! ch\n  s.reverse!\n  puts s\nend\nremove_Occ(\"geeksforgeeks\", \"e\")",
    "  s.delete(ch)\nend\nputs remove_Occ('Ruby', 'y')",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.reverse!\n  s.delete!(ch)\n  s.reverse!\n  puts s\nend",
    "  s.delete(ch)\nend\nputs remove_Occ(\"Ruby\", \"y\")",
    "  s.delete!(ch)\n  s\nend",
    "  s.delete! ch\n  s.reverse!\n  s.delete! ch\n  s.reverse!\n  puts s\nend",
    "  s.slice!(ch)\n  s.reverse!.slice!(ch)\n  s.reverse!\n  puts s\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\nend\nputs remove_Occ(\"Ruby\", \"y\")",
    "  s.delete(ch)\nend",
    "  s.chars.reject { |c| c == ch }.join\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend\nremove_Occ(\"python\", \"p\")",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend\nputs remove_Occ(\"Ruby\", \"y\")",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend",
    "  s.delete_prefix(ch)\n  s.delete_suffix(ch)\nend",
    "  s.delete!(ch)\n  s\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend",
    "  s.sub(ch, '').sub(ch, '')\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete!(ch)\nend",
    "  s.chars.reject { |c| c == ch }.join\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend\nputs remove_Occ(\"Ruby is a beautiful language\", \"a\")\nputs remove_Occ(\"Python is a beautiful language\", \"a\")",
    "  s.delete_prefix(ch)\n  s.delete_suffix(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend\nputs remove_Occ(\"Ruby is a beautiful language\", \"a\")",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend",
    "  s.delete!(ch)\n  return s\nend\nputs remove_Occ('Ruby', 'y')",
    "  s.delete!(ch)\n  s\nend",
    "  s.delete!(ch)\n  s\nend\nputs remove_Occ(\"Ruby\", \"u\")",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend\nremove_Occ(\"abcabc\", \"a\")",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.chars.reject { |c| c == ch }.join\nend",
    "  s.chars.reject { |c| c == ch }.join\nend",
    "  s.delete(ch)\nend",
    "  s.chars.delete_if { |c| c == ch }.join\nend",
    "  s.sub(ch, '').sub(ch, '')\nend",
    "  s.delete(ch)\nend",
    "  s.chars.delete_if { |c| c == ch }.join\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.chars.reject.with_index { |_, i| i == 0 || i == s.length - 1 }.join\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete(ch).delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  return s\nend",
    "  s.delete(ch)\nend",
    "  s.chars.reject { |c| c == ch }.join\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.sub(ch, '').sub(ch, '')\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\nend",
    "  s.delete(ch)\nend",
    "  s.delete ch\nend",
    "  s.chars.reject { |c| c == ch }.join\nend",
    "  s.chars.reject { |c| c == ch }.join\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend",
    "  s.chars.reject { |c| c == ch }.join\nend",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend",
    "  s.delete(ch)\nend\nputs remove_Occ(\"Ruby is a beautiful language\", \"a\")",
    "  s.delete(ch)\nend",
    "  s.delete!(ch)\n  s.delete!(ch)\n  puts s\nend\nremove_Occ(\"geeksforgeeks\", \"e\")",
    "  s.chars.reject { |c| c == ch }.join\nend",
    "  s.delete(ch)\nend"
  ]
}
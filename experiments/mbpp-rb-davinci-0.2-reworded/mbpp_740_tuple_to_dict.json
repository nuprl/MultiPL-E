{
  "name": "mbpp_740_tuple_to_dict",
  "language": "rb",
  "prompt": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_740_tuple_to_dict.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  test_tup.each_slice(2).to_h\nend",
    "  test_dict = Hash.new\n  test_tup.each_slice(2) { |a,b| test_dict[a] = b }\n  test_dict\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "    test_dict = Hash.new\n    test_tup.each_slice(2) {|a, b| test_dict[a] = b}\n    test_dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_with_object({}) { |(k, v), h| h[k] = v }\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  dict = Hash.new\n  test_tup.each_slice(2) { |k, v| dict[k] = v }\n  dict\nend",
    "  dict = Hash.new\n  for i in 0..test_tup.length-1\n    dict[test_tup[i][0]] = test_tup[i][1]\n  end\n  return dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  hash = Hash.new\n  test_tup.each_slice(2) {|a, b| hash[a] = b}\n  hash\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "    test_dict = Hash.new\n    test_tup.each_slice(2) {|a, b| test_dict[a] = b}\n    return test_dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "    test_dict = Hash.new\n    test_tup.each_with_index do |val, index|\n        test_dict[val] = test_tup[index+1]\n    end\n    test_dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  dict = Hash.new\n  test_tup.each_slice(2) do |key, value|\n    dict[key] = value\n  end\n  dict\nend",
    "  dict = Hash.new\n  test_tup.each_slice(2) do |key, value|\n    dict[key] = value\n  end\n  return dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "    dict = Hash.new\n    test_tup.each_slice(2) {|a, b| dict[a] = b}\n    return dict\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "    test_dict = Hash.new\n    test_tup.each_slice(2) { |a, b| test_dict[a] = b }\n    return test_dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "    test_dict = {}\n    test_tup.each_slice(2) { |key, value| test_dict[key] = value }\n    return test_dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  dict = Hash.new\n  test_tup.each_slice(2) { |a, b| dict[a] = b }\n  dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  dict = Hash.new\n  test_tup.each_with_index do |val, index|\n    if index % 2 == 0\n      dict[val] = test_tup[index + 1]\n    end\n  end\n  dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "    test_dict = Hash.new\n    test_tup.each_slice(2) { |key, value| test_dict[key] = value }\n    return test_dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  hash = Hash.new\n  test_tup.each_slice(2) { |key, value| hash[key] = value }\n  hash\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "    test_dict = Hash.new\n    test_tup.each_slice(2) {|a, b| test_dict[a] = b}\n    return test_dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_with_object({}) do |(key, value), hash|\n    hash[key] = value\n  end\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_dict = Hash.new\n  test_tup.each_slice(2) { |a, b| test_dict[a] = b }\n  test_dict\nend",
    "  dict = Hash.new\n  test_tup.each_slice(2) do |key, value|\n    dict[key] = value\n  end\n  dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_dict = Hash.new\n  test_tup.each_slice(2) { |k, v| test_dict[k] = v }\n  test_dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_with_object({}) do |(key, value), hash|\n    hash[key] = value\n  end\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  dict = Hash.new\n  test_tup.each_with_index do |item, index|\n    if index % 2 == 0\n      dict[item] = test_tup[index + 1]\n    end\n  end\n  dict\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  dict = Hash.new\n  test_tup.each_slice(2) { |a, b| dict[a] = b }\n  dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "    test_dict = Hash.new\n    test_tup.each_slice(2) {|a, b| test_dict[a] = b}\n    test_dict\nend",
    "  dict = Hash.new\n  for i in 0..test_tup.length-1\n    dict[test_tup[i][0]] = test_tup[i][1]\n  end\n  dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  dict = Hash.new\n  for i in 0...test_tup.length\n    dict[test_tup[i][0]] = test_tup[i][1]\n  end\n  return dict\nend",
    "    test_dict = {}\n    for i in 0..test_tup.length-1\n        test_dict[test_tup[i][0]] = test_tup[i][1]\n    end\n    return test_dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  dict = Hash.new\n  test_tup.each_with_index do |value, index|\n    if index % 2 == 0\n      dict[value] = test_tup[index + 1]\n    end\n  end\n  dict\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  dict = Hash.new\n  test_tup.each_slice(2) { |a, b| dict[a] = b }\n  dict\nend",
    "    test_dict = Hash.new\n    test_tup.each_slice(2) { |k, v| test_dict[k] = v }\n    test_dict\nend",
    "  test_dict = {}\n  test_tup.each_slice(2) do |key, value|\n    test_dict[key] = value\n  end\n  test_dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "    test_dict = Hash.new\n    test_tup.each_slice(2) {|a,b| test_dict[a] = b}\n    return test_dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "    test_dict = Hash.new\n    test_tup.each_slice(2) { |a, b| test_dict[a] = b }\n    return test_dict\nend",
    "  dict = Hash.new\n  test_tup.each_slice(2) { |key, value| dict[key] = value }\n  dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  dict = {}\n  test_tup.each_slice(2) { |a, b| dict[a] = b }\n  dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_dict = Hash.new\n  test_tup.each_slice(2) { |a, b| test_dict[a] = b }\n  test_dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_dict = Hash.new\n  test_tup.each_slice(2) {|a, b| test_dict[a] = b}\n  test_dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  dict = Hash.new\n  for i in 0..test_tup.length-1\n    dict[test_tup[i][0]] = test_tup[i][1]\n  end\n  return dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  dict = Hash.new\n  for i in 0...test_tup.length\n    dict[test_tup[i][0]] = test_tup[i][1]\n  end\n  dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_with_object({}) do |(key, value), hash|\n    hash[key] = value\n  end\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "    test_dict = Hash.new\n    test_tup.each_slice(2) {|a,b| test_dict[a] = b}\n    return test_dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  hash = Hash.new\n  test_tup.each_slice(2) do |key, value|\n    hash[key] = value\n  end\n  hash\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "    test_dict = Hash.new\n    test_tup.each_slice(2) { |a, b| test_dict[a] = b }\n    return test_dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  dict = Hash.new\n  for i in 0..test_tup.length-1\n    dict[test_tup[i][0]] = test_tup[i][1]\n  end\n  return dict\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_tup.each_slice(2).to_a.to_h\nend",
    "  test_dict = Hash[*test_tup.flatten]\n  puts test_dict\nend",
    "    dict = Hash.new\n    test_tup.each_slice(2) { |a, b| dict[a] = b }\n    return dict\nend",
    "  dict = Hash.new\n  test_tup.each_slice(2) { |key, value| dict[key] = value }\n  dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "    test_dict = Hash.new\n    test_tup.each_slice(2) {|a, b| test_dict[a] = b}\n    test_dict\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend",
    "  test_tup.each_slice(2).to_h\nend"
  ]
}
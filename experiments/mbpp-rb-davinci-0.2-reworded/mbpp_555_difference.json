{
  "name": "mbpp_555_difference",
  "language": "rb",
  "prompt": "# Write a rbthon function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.\ndef difference(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_555_difference.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_difference\n    candidate = method(:difference)\n    assert_equal(30, candidate.call(3))\n    assert_equal(210, candidate.call(5))\n    assert_equal(6, candidate.call(2))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  (1..n).each do |i|\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (n*(n+1)/2)**2\n  sum_of_squares = n*(n+1)*(2*n+1)/6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) {|sum, i| sum + i**3}\n  sum_of_numbers = (1..n).inject(0) {|sum, i| sum + i}\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_numbers = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  return sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject { |sum, n| sum + n**3 }\n  sum_of_numbers = (1..n).inject { |sum, n| sum + n }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum = 0\n  for i in 1..n\n    sum += i**3\n  end\n  sum1 = 0\n  for i in 1..n\n    sum1 += i\n  end\n  sum - sum1\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i ** 3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  (1..n).each do |i|\n    sum_of_cubes += i**3\n    sum += i\n  end\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, x| sum + x ** 3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, x| sum + x }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i ** 3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) {|sum, i| sum + i**3}\n  sum_of_numbers = (1..n).inject(0) {|sum, i| sum + i}\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  (1..n).each do |i|\n    sum_of_cubes += i**3\n    sum += i\n  end\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  return sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  (1..n).each do |i|\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (n*(n+1)/2)**2\n  sum_of_squares = (n*(n+1)*(2*n+1))/6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_numbers = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum += i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum += i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  (1..n).inject(0) { |sum, x| sum + x**3 } - (1..n).inject(0) { |sum, x| sum + x }\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  (1..n).each do |i|\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, x| sum + x ** 3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, x| sum + x }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum += i\n  end\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  (1..n).each do |i|\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  (1..n).inject(0) { |sum, i| sum + i**3 } - (1..n).inject(0) { |sum, i| sum + i }\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, x| sum + x**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, x| sum + x }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) {|sum, x| sum + x**3}\n  sum_of_numbers = (1..n).inject(0) {|sum, x| sum + x}\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) {|sum, i| sum + i**3}\n  sum_of_numbers = (1..n).inject(0) {|sum, i| sum + i}\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum += i\n  end\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (1..n).inject(0) {|sum, x| sum + x**3}\n  sum = (1..n).inject(0) {|sum, x| sum + x}\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (1..n).inject(0) {|sum, i| sum + i**3}\n  sum_of_numbers = (1..n).inject(0) {|sum, i| sum + i}\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_numbers = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  return sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum += i\n  end\n  return sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  (1..n).each do |i|\n    sum_of_cubes += i**3\n    sum += i\n  end\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (1..n).inject(0) {|sum, i| sum + i**3}\n  sum_of_numbers = (1..n).inject(0) {|sum, i| sum + i}\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n*(n+1)/2)**2\n  sum_of_squares = (n*(n+1)*(2*n+1))/6\n  return sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_numbers = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  (1..n).each do |i|\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum += i\n  end\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, x| sum + x**3 }\n  sum = (1..n).inject(0) { |sum, x| sum + x }\n  sum_of_cubes - sum\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  return sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_numbers = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i ** 3 }\n  sum = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum ** 2\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum += i\n  end\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum += i\n  end\n  return sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  return sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  (sum_of_cubes(n) - sum_of_squares(n)).abs\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum += i\n  end\n  return sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) {|sum, i| sum + i**3}\n  sum_of_numbers = (1..n).inject(0) {|sum, i| sum + i}\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  (1..n).each do |i|\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  (1..n).each do |i|\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum += i\n  end\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) {|sum, i| sum + i**3}\n  sum_of_numbers = (1..n).inject(0) {|sum, i| sum + i}\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  (1..n).each do |i|\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (n*(n+1)/2)**2\n  sum_of_numbers = (n*(n+1)*(2*n+1))/6\n  return sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i ** 3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers ** 2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) {|sum, i| sum + i**3}\n  sum_of_numbers = (1..n).inject(0) {|sum, i| sum + i}\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject { |sum, i| sum + i**3 }\n  sum_of_nums = (1..n).inject { |sum, i| sum + i }\n  sum_of_cubes - sum_of_nums\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  (1..n).inject(0) { |sum, i| sum + i } ** 2 - (1..n).inject(0) { |sum, i| sum + i ** 3 }\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, x| sum + x**3 }\n  sum_of_numbers = (1..n).inject(:+)\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_numbers = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  return sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum += i\n  end\n  return sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  (1..n).each do |i|\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, x| sum + x**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, x| sum + x }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + (i**3) }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum += i\n  end\n  return sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (n*(n+1)/2)**2\n  sum_of_numbers = n*(n+1)*(2*n+1)/6\n  return sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (n*(n+1)/2)**2\n  sum_of_numbers = n*(n+1)*(2*n+1)/6\n  return sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum += i\n  end\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  return sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject { |sum, n| sum + n ** 3 }\n  sum_of_numbers = (1..n).inject { |sum, n| sum + n }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum += i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum += i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_numbers = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum += i\n  end\n  sum_of_cubes - sum**2\nend",
    "  (n*(n+1)/2)**2 - (n*(n+1)*(2*n+1))/6\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (1..n).inject(0) {|sum, i| sum + i**3}\n  sum_of_numbers = (1..n).inject(0) {|sum, i| sum + i}\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  (1..n).inject(0) {|sum, x| sum += x**3} - (1..n).inject(0) {|sum, x| sum += x}\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum += i\n  end\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, x| sum + x**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, x| sum + x }\n  sum_of_cubes - sum_of_numbers\nend",
    "  (1..n).inject(0) { |sum, x| sum + (x * x * x) } - (1..n).inject(0) { |sum, x| sum + x }\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_numbers = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_numbers\nend",
    "  (1..n).inject(:+)**2 - (1..n).map{|i| i**3}.inject(:+)\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum += i**3 }\n  sum_of_naturals = (1..n).inject(0) { |sum, i| sum += i }\n  sum_of_cubes - sum_of_naturals\nend",
    "  (1..n).inject(0) {|sum, x| sum + x} ** 2 - (1..n).inject(0) {|sum, x| sum + x ** 3}\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i ** 3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = n * (n + 1) * (2 * n + 1) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i ** 3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers ** 2\nend",
    "  sum_of_cubes = (1..n).inject { |sum, n| sum + n**3 }\n  sum_of_numbers = (1..n).inject { |sum, n| sum + n }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  (1..n).each do |i|\n    sum_of_cubes += i**3\n    sum += i\n  end\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (n*(n+1)/2)**2\n  sum_of_squares = (n*(n+1)*(2*n+1))/6\n  puts sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (n*(n+1)/2)**2\n  sum_of_numbers = (n*(n+1)*(2*n+1))/6\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum += i\n  end\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_squares\nend",
    "  sum_of_cubes = (n*(n+1)/2)**2\n  sum_of_numbers = (n*(n+1)*(2*n+1))/6\n  return sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  (1..n).each do |i|\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_numbers = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) {|sum, i| sum + i**3}\n  sum_of_numbers = (1..n).inject(0) {|sum, i| sum + i}\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  (1..n).inject(0) { |sum, i| sum + i**3 } - (1..n).inject(0) { |sum, i| sum + i }\nend",
    "  (1..n).inject(0) { |sum, x| sum + x } ** 2 - (1..n).inject(0) { |sum, x| sum + x ** 3 }\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i ** 3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i } ** 2\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  return sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (n*(n+1)/2)**2\n  sum_of_numbers = (n*(n+1)*(2*n+1))/6\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject { |sum, n| sum + n**3 }\n  sum_of_numbers = (1..n).inject { |sum, n| sum + n }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n*(n+1)/2)**2\n  sum_of_numbers = (n*(n+1)*(2*n+1))/6\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_n = (n * (n + 1) * (2 * n + 1)) / 6\n  sum_of_cubes - sum_of_n\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum\nend",
    "  (1..n).inject(0) { |sum, i| sum + i } ** 2 - (1..n).inject(0) { |sum, i| sum + i ** 3 }\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (n * (n + 1) / 2) ** 2\n  sum_of_numbers = n * (n + 1) * (2 * n + 1) / 6\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  return sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes(n) - sum_of_n(n)\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, num| sum + (num ** 3) }\n  sum_of_numbers = (1..n).inject(0) { |sum, num| sum + num }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = (1..n).inject { |sum, n| sum + n**3 }\n  sum_of_numbers = (1..n).inject { |sum, n| sum + n }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  (1..n).each do |i|\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, n| sum + n**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, n| sum + n }\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum += i\n  end\n  return sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, x| sum += x**3 }\n  sum = (1..n).inject(0) { |sum, x| sum += x }\n  sum_of_cubes - sum\nend",
    "  sum_of_cubes = 0\n  sum_of_n = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum_of_n += i\n  end\n  return sum_of_cubes - sum_of_n**2\nend",
    "  sum_of_cubes = (1..n).inject(0) {|sum, x| sum + x**3}\n  sum_of_numbers = (1..n).inject(0) {|sum, x| sum + x}\n  sum_of_cubes - sum_of_numbers\nend",
    "  sum_of_cubes(n) - sum_of_numbers(n)\nend",
    "  sum_of_cubes = (1..n).inject(0) {|sum, i| sum + i**3}\n  sum_of_numbers = (1..n).inject(0) {|sum, i| sum + i}\n  sum_of_cubes - sum_of_numbers**2\nend",
    "  (1..n).inject(0) {|sum, i| sum + i**3} - (1..n).inject(0) {|sum, i| sum + i}\nend",
    "  sum_of_cubes = 0\n  sum = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum += i\n  end\n  sum_of_cubes - sum**2\nend",
    "  sum_of_cubes = 0\n  sum_of_numbers = 0\n  for i in 1..n\n    sum_of_cubes += i**3\n    sum_of_numbers += i\n  end\n  return sum_of_cubes - sum_of_numbers**2\nend",
    "  sum_of_cubes = (1..n).inject(0) { |sum, i| sum + i**3 }\n  sum_of_numbers = (1..n).inject(0) { |sum, i| sum + i }\n  sum_of_cubes - sum_of_numbers**2\nend"
  ]
}
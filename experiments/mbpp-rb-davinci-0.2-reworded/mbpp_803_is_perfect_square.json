{
  "name": "mbpp_803_is_perfect_square",
  "language": "rb",
  "prompt": "# Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\ndef is_perfect_square(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_803_is_perfect_square.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_perfect_square\n    candidate = method(:is_perfect_square)\n    assert_equal(false, candidate.call(10))\n    assert_equal(true, candidate.call(36))\n    assert_equal(false, candidate.call(14))\n    assert_equal(true, candidate.call(196))\n    assert_equal(false, candidate.call(125))\n    assert_equal(true, candidate.call(15625))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  return false if n < 0\n  return true if n == 0 || n == 1\n  i = 1\n  while i * i <= n\n    return true if i * i == n\n    i += 1\n  end\n  false\nend",
    "  return false if n < 0\n  return true if n == 0 || n == 1\n  i = 1\n  while i * i <= n\n    return true if i * i == n\n    i += 1\n  end\n  false\nend",
    "  return false if n < 0\n  return true if n == 0 || n == 1",
    "  return false if n < 0\n  return true if n == 0 || n == 1\n  i = 1\n  while i * i <= n\n    return true if i * i == n\n    i += 1\n  end\n  false\nend",
    "  return false if n < 0\n  return true if n == 0 || n == 1\n  i = 1\n  while i * i <= n\n    return true if i * i == n\n    i += 1\n  end\n  return false\nend",
    "  return false if n < 0\n  return true if n == 0 || n == 1\n  i = 1\n  while i*i <= n\n    return true if i*i == n\n    i += 1\n  end\n  return false\nend",
    "  if n < 0\n    return false\n  end\n  if n == 0 or n == 1\n    return true\n  end\n  i = 1\n  while i * i <= n\n    if (i * i == n)\n      return true\n    end\n    i += 1\n  end\n  return false\nend",
    "  return false if n < 0\n  return true if n == 0 || n == 1\n  i = 1\n  while i * i <= n\n    return true if i * i == n\n    i += 1\n  end\n  false\nend",
    "  return false if n < 0\n  return true if n == 0 || n == 1\n  i = 1\n  while i * i <= n\n    return true if i * i == n\n    i += 1\n  end\n  false\nend",
    "  return false if n < 0\n  return true if n == 0 || n == 1",
    "  if n < 0\n    return false\n  end\n  if n == 0 || n == 1\n    return true\n  end\n  i = 1\n  while i * i <= n\n    if i * i == n\n      return true\n    end\n    i += 1\n  end\n  return false\nend",
    "  return false if n < 0\n  return true if n == 0 || n == 1\n  i = 1\n  while i * i <= n\n    return true if i * i == n\n    i += 1\n  end\n  false\nend",
    "  return false if n < 0\n  return true if n == 0 || n == 1",
    "  if n < 0\n    return false\n  end",
    "  return false if n < 0\n  return true if n == 0 || n == 1\n  i = 1\n  while i * i <= n\n    return true if i * i == n\n    i += 1\n  end\n  false\nend",
    "  return false if n < 0\n  return true if n == 0 || n == 1\n  i = 1\n  while i * i <= n\n    return true if i * i == n\n    i += 1\n  end\n  false\nend",
    "  return false if n < 0\n  return true if n == 0 || n == 1\n  i = 1\n  while i * i <= n\n    return true if i * i == n\n    i += 1\n  end\n  return false\nend",
    "  return false if n < 0\n  return true if n == 0 || n == 1\n  i = 1\n  while i * i <= n\n    return true if i * i == n\n    i += 1\n  end\n  false\nend",
    "  return false if n < 0\n  return true if n == 0 || n == 1\n  i = 1\n  while i * i <= n\n    return true if i * i == n\n    i += 1\n  end\n  return false\nend",
    "  return false if n < 0\n  return true if n == 0 || n == 1\n  i = 1\n  while i * i <= n\n    return true if i * i == n\n    i += 1\n  end\n  return false\nend"
  ]
}
{
  "name": "mbpp_764_number_ctr",
  "language": "rb",
  "prompt": "# Write a rbthon function to count number of digits in a given string.\ndef number_ctr(str)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_764_number_ctr.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_number_ctr\n    candidate = method(:number_ctr)\n    assert_equal(1, candidate.call(\"program2bedone\"))\n    assert_equal(1, candidate.call(\"3wonders\"))\n    assert_equal(3, candidate.call(\"123\"))\n    assert_equal(3, candidate.call(\"3wond-1ers2\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  str.count(\"0-9\")\nend\nputs number_ctr(\"hello123\")",
    "  str.length\nend\nputs number_ctr(\"hello\")",
    "  str.length\nend",
    "  str.scan(/\\d/).count\nend",
    "  str.scan(/\\d/).size\nend",
    "  str.scan(/\\d/).count\nend",
    "  str.scan(/\\d/).count\nend",
    "  str.scan(/\\d/).count\nend\nputs number_ctr(\"Hello World! 123\")",
    "  str.scan(/\\d/).count\nend",
    "  str.scan(/\\d/).size\nend",
    "  str.scan(/\\d/).size\nend",
    "  str.scan(/\\d/).count\nend",
    "  str.scan(/\\d/).count\nend",
    "  str.length\nend",
    "  str.scan(/\\d/).count\nend\nputs number_ctr(\"Hello World! 123\")",
    "  str.scan(/\\d/).size\nend\np number_ctr(\"hello123\")",
    "  str.scan(/\\d/).count\nend",
    "  str.length\nend\nputs number_ctr(\"hello\")",
    "  str.scan(/\\d/).count\nend\nputs number_ctr(\"Hello World 123\")",
    "  str.scan(/\\d/).count\nend"
  ]
}
{
  "name": "mbpp_58_opposite_Signs",
  "language": "rb",
  "prompt": "# Write a rbthon function to check whether the given two integers have opposite sign or not.\ndef opposite_Signs(x, y)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_58_opposite_Signs.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_opposite_Signs\n    candidate = method(:opposite_Signs)\n    assert_equal(true, candidate.call(1, -2))\n    assert_equal(false, candidate.call(3, 2))\n    assert_equal(false, candidate.call(-10, -10))\n    assert_equal(true, candidate.call(-2, 2))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  if ((x ^ y) < 0)\n    puts \"Signs are opposite\"\n  else\n    puts \"Signs are not opposite\"\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  return ((x ^ y) < 0)\nend",
    "  return ((x ^ y) < 0)\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  (x ^ y) < 0\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    return true\n  else\n    return false\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    return true\n  end\n  return false\nend",
    "  return ((x ^ y) < 0)\nend\nputs opposite_Signs(100, -1)\nputs opposite_Signs(100, 1)",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend\nopposite_Signs(10, -20)",
    "  if (x > 0 && y < 0) || (x < 0 && y > 0)\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  return (x ^ y) < 0\nend",
    "  return ((x ^ y) < 0)\nend",
    "  return ((x ^ y) < 0)\nend"
  ]
}
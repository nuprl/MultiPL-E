{
  "name": "mbpp_438_count_bidirectional",
  "language": "rb",
  "prompt": "# Write a function to count bidirectional array pairs.\ndef count_bidirectional(test_list)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_438_count_bidirectional.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_count_bidirectional\n    candidate = method(:count_bidirectional)\n    assert_equal(3, candidate.call([[5, 6], [1, 2], [6, 5], [9, 1], [6, 5], [2, 1]]))\n    assert_equal(2, candidate.call([[5, 6], [1, 3], [6, 5], [9, 1], [6, 5], [2, 1]]))\n    assert_equal(4, candidate.call([[5, 6], [1, 2], [6, 5], [9, 2], [6, 5], [2, 1]]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if num + num2 == 0 && index != index2\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, idx|\n    test_list.each_with_index do |num2, idx2|\n      if idx2 > idx && num + num2 == 0\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  # Write your code here\nend",
    "  count = 0\n  test_list.each_with_index do |item, index|\n    if test_list[index + 1] == item.reverse\n      count += 1\n    end\n  end\n  count\nend",
    "  # Your code here\nend",
    "  count = 0\n  test_list.each_with_index do |item, index|\n    if test_list.include?(item.reverse) && test_list.index(item.reverse) != index\n      count += 1\n    end\n  end\n  count\nend",
    "  # Your code here\nend",
    "  # Your code here\nend",
    "  count = 0\n  test_list.each_with_index do |value, index|\n    test_list.each_with_index do |value2, index2|\n      if index2 > index && value == value2.reverse\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x + y == 0\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each do |i|\n    test_list.each do |j|\n      if i == j.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each do |num|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count / 2\nend",
    "  # Write your code here\n  count = 0\n  test_list.each_with_index do |item, index|\n    if test_list.include?(-item) && index != test_list.index(-item)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list[index + 1] == num\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if num == test_list[index2] && index != index2\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  test_list.count { |x| test_list.include?(x.reverse) }\nend",
    "  count = 0\n  test_list.each_with_index do |item, index|\n    if index < test_list.length - 1\n      if item == test_list[index + 1]\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list[index + 1] == num * -1\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num == num2\n          count += 1\n        end\n      end\n    end\n  end\n  return count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  # Your code here\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list[index + 1] == num\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x + y == 0\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index < index2 && num == num2\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  # Write your code here.\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index < index2\n        count += 1 if num + num2 == 0\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |item, index|\n    if index < test_list.length - 1\n      if item == test_list[index + 1]\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |item|\n    count += 1 if test_list.include?(item.reverse)\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each do |first|\n    test_list.each do |second|\n      if first == second.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list[index + 1] == num\n      count += 1\n    end\n  end\n  count\nend",
    "  # Write your code here\n  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count/2\nend",
    "  # Your code here\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |x, i|\n    test_list.each_with_index do |y, j|\n      if x + y == 0 && i != j\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    count += 1 if test_list[index + 1] == num * -1\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |item, index|\n    test_list.each_with_index do |item2, index2|\n      if index2 > index\n        if item == item2.reverse\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list[index + 1] == num * -1\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |num|\n    count += 1 if test_list.include?(num * -1)\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  # Write your code here\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list[index + 1] == num\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |item, index|\n    if test_list[index + 1] == item\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |first_element|\n    test_list.each do |second_element|\n      if first_element == second_element.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |item, index|\n    if test_list[index + 1] == item.reverse\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each do |item|\n    if test_list.include?(item.reverse)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x + y == 0\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num == num2\n          count += 1\n        end\n      end\n    end\n  end\n  return count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |value, index|\n    if test_list[index + 1] == value\n      count += 1\n    end\n  end\n  count\nend",
    "  # Your code here\nend",
    "  count = 0\n  test_list.each_with_index do |num, idx|\n    test_list.each_with_index do |num2, idx2|\n      if idx2 > idx\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  # Your code here\nend",
    "  # Write your code here.\nend",
    "  # Your code here\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  return count\nend",
    "  count = 0\n  test_list.each do |item|\n    count += 1 if test_list.include?(item.reverse)\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num == num2\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num == test_list[index2]\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x + y == 0\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  # Your code goes here.\nend",
    "  # Your code goes here.\nend",
    "  # Your code here\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x + y == 0\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  for i in 0...test_list.length\n    for j in 0...test_list.length\n      if test_list[i] == test_list[j] && i != j\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index && num + num2 == 0\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    count += 1 if test_list[index + 1] == num * -1\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if num + num2 == 0 && index != index2\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list[index + 1] == num\n      count += 1\n    end\n  end\n  count\nend",
    "  # Write your code here.\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  for i in 0..test_list.length - 1\n    for j in i + 1..test_list.length - 1\n      if test_list[i] == test_list[j]\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index < index2\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index && num + num2 == 0\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index && num2 == num\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index && num + num2 == 0\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      count += 1 if x + y == 0\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index && num + num2 == 0\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |first|\n    test_list.each do |second|\n      if first == second.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num.to_s.reverse.to_i) && index != test_list.index(num.to_s.reverse.to_i)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |num|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index && num + num2 == 0\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, i|\n    test_list.each_with_index do |num2, j|\n      if i != j\n        if num == num2\n          count += 1\n        end\n      end\n    end\n  end\n  return count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  for i in 0..test_list.length - 1\n    for j in i + 1..test_list.length - 1\n      if test_list[i] == test_list[j].reverse\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |i|\n    test_list.each do |j|\n      if i + j == 0\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list[index + 1] == num\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list[index + 1] == num\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |x, i|\n    test_list.each_with_index do |y, j|\n      if i < j\n        if x == y.reverse\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x + y == 0\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, i|\n    test_list.each_with_index do |num2, j|\n      if i < j\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |num|\n    if test_list.include?(-num)\n      count += 1\n    end\n  end\n  count\nend",
    "  # Write your code here\nend",
    "  # Your code here\nend",
    "  count = 0\n  test_list.each_with_index do |item, index|\n    if test_list[index + 1] == item.reverse\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |item, index|\n    if index == 0\n      next\n    elsif index == test_list.length - 1\n      next\n    else\n      if test_list[index - 1] == test_list[index + 1]\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |item, index|\n    if index < test_list.length - 1\n      count += 1 if item == test_list[index + 1]\n    end\n  end\n  count\nend",
    "  # Your code here\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list[index + 1] == num * -1\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  # Write your code here\n  count = 0\n  test_list.each do |i|\n    test_list.each do |j|\n      if i + j == 0\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num == num2\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |num|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    count += 1 if test_list.include?(num * -1)\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |item|\n    if test_list.include?(item.reverse)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |item, index|\n    if test_list[index + 1] == item.reverse\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x[0] == y[1] && x[1] == y[0]\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each do |item|\n    test_list.each do |item2|\n      if item == item2.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index && num == num2\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list[index + 1] == num\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num == num2\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list[index+1..-1].each do |num2|\n      if num + num2 == 0\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, i|\n    test_list.each_with_index do |num2, j|\n      if i < j && num == test_list[j]\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |item, index|\n    if test_list[index + 1] == item\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num == num2.reverse\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index && num + num2 == 0\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  counter = 0\n  test_list.each do |num|\n    test_list.each do |num2|\n      if num + num2 == 0\n        counter += 1\n      end\n    end\n  end\n  counter / 2\nend",
    "  count = 0\n  test_list.each_with_index do |element, index|\n    if index < test_list.length - 1\n      if element == test_list[index + 1]\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num == num2.reverse\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  return count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x + y == 0\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |item, index|\n    test_list.each_with_index do |item2, index2|\n      if index2 > index && item == item2.reverse\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num == num2\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  return count\nend",
    "  count = 0\n  test_list.each_with_index do |num, i|\n    test_list.each_with_index do |num2, j|\n      if num == test_list[j] && i != j\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list[index + 1] == num\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  return count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |element|\n    count += 1 if test_list.include?(element.reverse)\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list[index + 1] == num\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x + y == 0\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |item, index|\n    count += 1 if test_list[index + 1] == item\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index && num + num2 == 0\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y.reverse\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x + y == 0\n        count += 1\n      end\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num == test_list[index2]\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y\n        count += 1\n      end\n    end\n  end\n  return count\nend",
    "  count = 0\n  test_list.each_with_index do |item, index|\n    if index < test_list.length - 1\n      if test_list[index + 1] == item\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index2 > index\n        if num + num2 == 0\n          count += 1\n        end\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    if test_list.include?(num * -1)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      if index < index2 && num == test_list[index2]\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x == y\n        count += 1\n      end\n    end\n  end\n  count\nend"
  ]
}
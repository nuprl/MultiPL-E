{
  "name": "mbpp_608_bell_Number",
  "language": "rb",
  "prompt": "# Write a rbthon function to find nth bell number.\ndef bell_Number(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_608_bell_Number.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_bell_Number\n    candidate = method(:bell_Number)\n    assert_equal(2, candidate.call(2))\n    assert_equal(5, candidate.call(3))\n    assert_equal(15, candidate.call(4))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  bell = Array.new(n+1,0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0 for i in 0..n]]\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i-1][i-1]\n    for j in 1..i\n      bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] += bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0], [1]]\n  for i in 2..n\n    bell[i] = Array.new(i, 0)\n    bell[i][0] = bell[i - 1][i - 1]\n    for j in 1..i - 1\n      bell[i][j] = bell[i][j - 1] + bell[i - 1][j - 1]\n    end\n  end\n  return bell[n][0]\nend",
    "  return 1 if n == 0\n  return 2 if n == 1\n  return 5 if n == 2\n  return 15 if n == 3\n  return 52 if n == 4\n  return 203 if n == 5\n  return 877 if n == 6\n  return 4140 if n == 7\n  return 21147 if n == 8\n  return 115975 if n == 9\n  return 678570 if n == 10\n  return 4213597 if n == 11\n  return 27644437 if n == 12\n  return 190899322 if n == 13\n  return 1382958545 if n == 14\n  return 10480142147 if n == 15\n  return 82864869804 if n == 16\n  return 682076806159 if n == 17\n  return 5832742205057 if n == 18\n  return 51724158235372 if n == 19\n  return 474869816156751 if n == 20\n  return 4506715738447323 if n == 21\n  return 44152005855084346 if n == 22\n  return 445958869294805289 if n == 23\n  return 4638590332229999353 if n == 24\n  return 49631246523618756274 if n == 25\n  return 541095999582453606441 if n == 26\n  return 6003908783936073365967 if n == 27\n  return 67850280798173030452758 if n == 28\n  return 779586907249415901882377 if n == 29\n  return 9087200398610967808823381 if n == 30\n  return 10736435245553362672316182 if n == 31\n  return 128694512362885158007161924 if n == 32\n  return 1559743958708040539945681451 if n == 33\n  return 19115672818328823145965369603 if n == 34\n  return 237727494518332160037143810626 if n == 35\n  return 2983635228660757777302555770135 if n == 36\n  return 376103901982067365958644434",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0 for i in 0..n]]\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i-1][i-1]\n    for j in 1..i\n      bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0 for i in 0..n]]\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i-1][i-1]\n    for j in 1..i\n      bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] += bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell_number = Array.new(n+1)\n  bell_number[0] = 1\n  for i in 1..n\n    bell_number[i] = 0\n    for j in 0..i-1\n      bell_number[i] = bell_number[i] + bell_number[j] * bell_number[i-j-1]\n    end\n  end\n  return bell_number[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "    bell = [[0 for i in 0..n] for j in 0..n]\n    bell[0][0] = 1\n    for i in 1..n\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1..i\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        end\n    end\n    return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0 for x in 1..n] for y in 1..n]\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i-1][i-1]\n    for j in 1..i\n      bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1){Array.new(n+1,0)}\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i-1][i-1]\n    for j in 1..i\n      bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0 for i in 0..n]]\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i-1][i-1]\n    for j in 1..i\n      bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  return 1 if n == 0\n  return 2 if n == 1\n  return 5 if n == 2\n  return 15 if n == 3\n  return 52 if n == 4\n  return 203 if n == 5\n  return 877 if n == 6\n  return 4140 if n == 7\n  return 21147 if n == 8\n  return 115975 if n == 9\n  return 678570 if n == 10\n  return 4213597 if n == 11\n  return 27644437 if n == 12\n  return 190899322 if n == 13\n  return 1382958545 if n == 14\n  return 10480142147 if n == 15\n  return 82864869804 if n == 16\n  return 682076806159 if n == 17\n  return 5832742205057 if n == 18\n  return 51724158235372 if n == 19\n  return 474869816156751 if n == 20\n  return 4506715738447323 if n == 21\n  return 44152005855084346 if n == 22\n  return 445958869294805289 if n == 23\n  return 4638590332229999353 if n == 24\n  return 49631246523618756274 if n == 25\n  return 541095999582453606491 if n == 26\n  return 6003908783936073332247 if n == 27\n  return 67850280829031415367023 if n == 28\n  return 779586907249415918824213 if n == 29\n  return 9086995125553601242436997 if n == 30\n  return 107399558312815505718908050 if n == 31\n  return 1290601952646645783406727011 if n == 32\n  return 15692754338466701909589472223 if n == 33\n  return 193327365474244226191519582846 if n == 34\n  return 2376523897391034245323717427495 if n == 35\n  return 29336882422802314874950226775349 if n == 36\n  return 363789184028288514649599085",
    "  bell = [[0 for i in 0..n]]\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i-1][i-1]\n    for j in 1..i\n      bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0 for i in 0..n]]\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i-1][i-1]\n    for j in 1..i\n      bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1,0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j]*bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1,0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1,0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] += bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell_number = Array.new(n+1, 0)\n  bell_number[0] = 1\n  for i in 1..n\n    bell_number[i] = 0\n    for j in 0..i-1\n      bell_number[i] += bell_number[j] * bell_number[i-1-j]\n    end\n  end\n  return bell_number[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell_number = Array.new(n+1, 0)\n  bell_number[0] = 1\n  for i in 1..n\n    bell_number[i] = 0\n    for j in 0..i-1\n      bell_number[i] = bell_number[i] + bell_number[j] * bell_number[i-j-1]\n    end\n  end\n  return bell_number[n]\nend",
    "  return 1 if n == 0\n  return bell_Number(n-1) * (n-1) + 1\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0 for i in 0..n]]\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i-1][i-1]\n    for j in 1..i\n      bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend\nputs \"Enter the number\"\nn = gets.chomp.to_i\nputs \"The #{n}th bell number is #{bell_Number(n)}\"",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  return 1 if n == 0\n  return 2 if n == 1\n  return 3 if n == 2\n  return 4 if n == 3\n  return 5 if n == 4\n  return 15 if n == 5\n  return 52 if n == 6\n  return 203 if n == 7\n  return 877 if n == 8\n  return 4140 if n == 9\n  return 21147 if n == 10\n  return 115975 if n == 11\n  return 678570 if n == 12\n  return 4213597 if n == 13\n  return 27644437 if n == 14\n  return 190899322 if n == 15\n  return 1382958545 if n == 16\n  return 10480142147 if n == 17\n  return 82864869804 if n == 18\n  return 682076806159 if n == 19\n  return 5832742205057 if n == 20\n  return 51724158235372 if n == 21\n  return 474869816156751 if n == 22\n  return 4506715738447323 if n == 23\n  return 44152005855084346 if n == 24\n  return 445958869294805289 if n == 25\n  return 4638590332229999353 if n == 26\n  return 49631246523618756274 if n == 27\n  return 541095999582453449881 if n == 28\n  return 600390878398912382362 if n == 29\n  return 6785028079826226500455 if n == 30\n  return 78195538237797945006906 if n == 31\n  return 918193600598055773978847 if n == 32\n  return 11096529743698328934856880 if n == 33\n  return 136731093178124183970271961 if n == 34\n  return 1714888463338554496908419842 if n == 35\n  return 21869987835777989589544291423 if n == 36\n  return 281857109689300456949004717204 if n == 37\n  return 3660452480794144518756725584085 if n ==",
    "  return 1 if n == 0\n  return 0 if n == 1\n  return bell_Number(n-1) * (n-1) + bell_Number(n-2)\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0] * (n + 1)] * (n + 1)\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i - 1][i - 1]\n    for j in 1..i\n      bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] += bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] += bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1,0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0 for x in 1..n] for y in 1..n]\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i-1][i-1]\n    for j in 1..i\n      bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0 for i in 0..n]]\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i-1][i-1]\n    for j in 1..i\n      bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] += bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0 for i in 0..n]]\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i-1][i-1]\n    for j in 1..i\n      bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] += bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell_number = Array.new(n+1)\n  bell_number[0] = 1\n  for i in 1..n\n    bell_number[i] = 0\n    for j in 0..i-1\n      bell_number[i] = bell_number[i] + bell_number[j] * bell_number[i-j-1]\n    end\n  end\n  return bell_number[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0] * (n + 1)] * (n + 1)\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i - 1][i - 1]\n    for j in 1..i\n      bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1,0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j]*bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0] * (n + 1)] * (n + 1)\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i - 1][i - 1]\n    for j in 1..i\n      bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0 for x in 0..n]]\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i-1][i-1]\n    for j in 1..i\n      bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = bell[i-1]\n    for j in (i-1).downto(1)\n      bell[j] = bell[j] + bell[j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  return 1 if n == 0\n  return 2 if n == 1\n  return 3 if n == 2\n  return 5 if n == 3\n  return 15 if n == 4\n  return 52 if n == 5\n  return 203 if n == 6\n  return 877 if n == 7\n  return 4140 if n == 8\n  return 21147 if n == 9\n  return 115975 if n == 10\n  return 678570 if n == 11\n  return 4213597 if n == 12\n  return 27644437 if n == 13\n  return 190899322 if n == 14\n  return 1382958545 if n == 15\n  return 10480142147 if n == 16\n  return 82864869804 if n == 17\n  return 682076806159 if n == 18\n  return 5832742205057 if n == 19\n  return 51724158235372 if n == 20\n  return 474869816156751 if n == 21\n  return 4506715738447323 if n == 22\n  return 44152005855084346 if n == 23\n  return 445958869294805289 if n == 24\n  return 4681797805464777320 if n == 25\n  return 49879406880552055001 if n == 26\n  return 538257874427863286372 if n == 27\n  return 5980159073114688403373 if n == 28\n  return 68130593683991565670429 if n == 29\n  return 792951650218659279997889 if n == 30\n  return 942689044888324774562618 if n == 31\n  return 11425896447871834976429068 if n == 32\n  return 139838163404419609208823449 if n == 33\n  return 1727245890454638911203445404 if n == 34\n  return 21794574969231145138314122619 if n == 35\n  return 281857110440460683057907049376 if n == 36\n  return 3734956947264191830963059612201 if n == 37\n  return 50543612",
    "  bell = Array.new(n+1,0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j]*bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n)\n  bell[0] = 1\n  for i in 1..n-1\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n-1]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0 for x in 1..n] for y in 1..n]\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i-1][i-1]\n    for j in 1..i\n      bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1,0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0], [1]]\n  for i in 2..n\n    bell[i] = Array.new(i)\n    bell[i][0] = bell[i - 1][i - 1]\n    for j in 1..i - 1\n      bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0, 1], [1, 1]]\n  for i in 2..n\n    bell[i] = Array.new(i + 1, 0)\n    bell[i][0] = bell[i - 1][i - 1]\n    for j in 1..i\n      bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  return 1 if n == 0\n  return 2 if n == 1\n  return 3 if n == 2\n  return 4 if n == 3\n  return 5 if n == 4\n  return 15 if n == 5\n  return 52 if n == 6\n  return 203 if n == 7\n  return 877 if n == 8\n  return 4140 if n == 9\n  return 21147 if n == 10\n  return 115975 if n == 11\n  return 678570 if n == 12\n  return 4213597 if n == 13\n  return 27644437 if n == 14\n  return 190899322 if n == 15\n  return 1382958545 if n == 16\n  return 10480142147 if n == 17\n  return 82864869804 if n == 18\n  return 682076806159 if n == 19\n  return 5832742205057 if n == 20\n  return 51724158235372 if n == 21\n  return 474869816156751 if n == 22\n  return 4506715738447323 if n == 23\n  return 44152005855084346 if n == 24\n  return 445958869294805289 if n == 25\n  return 4638590332229999353 if n == 26\n  return 49631246523618756274 if n == 27\n  return 541095999582453449881 if n == 28\n  return 6003908783936073370274 if n == 29\n  return 6785028079827703078919 if n == 30\n  return 78195724048963625643020 if n == 31\n  return 918193627007357859557077 if n == 32\n  return 11091878333611008152430728 if n == 33\n  return 136725104532725524166255845 if n == 34\n  return 1716884938325249157681765206 if n == 35\n  return 21874460601497868225324534147 if n == 36\n  return 281599227435709718472728656788 if n == 37\n  return 365099348864170898414019728905 if n == 38\n  return",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell_number = Array.new(n+1, 0)\n  bell_number[0] = 1\n  for i in 1..n\n    bell_number[i] = 0\n    for j in 0..i-1\n      bell_number[i] = bell_number[i] + bell_number[j] * bell_number[i-j-1]\n    end\n  end\n  return bell_number[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] += bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  return 1 if n == 0\n  return 2 if n == 1\n  return 5 if n == 2\n  return 15 if n == 3\n  return 52 if n == 4\n  return 203 if n == 5\n  return 877 if n == 6\n  return 4140 if n == 7\n  return 21147 if n == 8\n  return 115975 if n == 9\n  return 678570 if n == 10\n  return 4213597 if n == 11\n  return 27644437 if n == 12\n  return 190899322 if n == 13\n  return 1382958545 if n == 14\n  return 10480142147 if n == 15\n  return 82864869804 if n == 16\n  return 682076806159 if n == 17\n  return 5832742205057 if n == 18\n  return 51724158235372 if n == 19\n  return 474869816156751 if n == 20\n  return 4506715738447323 if n == 21\n  return 44152005855084346 if n == 22\n  return 445958869294805289 if n == 23\n  return 4638590332229999353 if n == 24\n  return 49631246523618756274 if n == 25\n  return 541095999582452504087 if n == 26\n  return 6003908783936073332302 if n == 27\n  return 67850280798170833559093 if n == 28\n  return 781957326059044547861432 if n == 29\n  return 9181915935445573162499441 if n == 30\n  return 110947644252537626767280210 if n == 31\n  return 1367310793307349094749137871 if n == 32\n  return 17253750390793406377970703816 if n == 33\n  return 223169845582228690985864182345 if n == 34\n  return 2946702272495038326504339330192 if n == 35\n  return 39861842453704038071660605092705 if n == 36\n  return 55820683453535939164393647529",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] += bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0] * (n + 1)] * (n + 1)\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i - 1][i - 1]\n    for j in 1..i\n      bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  puts \"bell number is #{bell[n]}\"\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0] * (n + 1)] * (n + 1)\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i - 1][i - 1]\n    for j in 1..i\n      bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell_triangle = Array.new(n){Array.new(n)}\n  bell_triangle[0][0] = 1\n  for i in 1..n-1\n    bell_triangle[i][0] = bell_triangle[i-1][i-1]\n    for j in 1..i\n      bell_triangle[i][j] = bell_triangle[i-1][j-1] + bell_triangle[i][j-1]\n    end\n  end\n  return bell_triangle[n-1][n-1]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] += bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1,0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j]*bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = bell[i-1]\n    for j in (i-1).downto(1)\n      bell[j] = bell[j] + bell[j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1,0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1,0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j]*bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  return 1 if n == 0\n  return 0 if n < 0\n  return bell_Number(n - 1) * (n - 1) + bell_Number(n - 2)\nend",
    "  bell = [[0] * (n + 1)] * (n + 1)\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i - 1][i - 1]\n    for j in 1..i\n      bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell_number = Array.new(n)\n  bell_number[0] = 1\n  for i in 1..n\n    bell_number[i] = 0\n    for j in 0..i-1\n      bell_number[i] = bell_number[i] + bell_number[j] * bell_number[i-j-1]\n    end\n  end\n  return bell_number[n-1]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0 for x in 1..n] for y in 1..n]\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i-1][i-1]\n    for j in 1..i\n      bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = [[0] * (n + 1)] * (n + 1)\n  bell[0][0] = 1\n  for i in 1..n\n    bell[i][0] = bell[i - 1][i - 1]\n    for j in 1..i\n      bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n    end\n  end\n  return bell[n][0]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  return 1 if n == 0\n  return 2 if n == 1\n  return 3 if n == 2\n  return 5 if n == 3\n  return 15 if n == 4\n  return 52 if n == 5\n  return 203 if n == 6\n  return 877 if n == 7\n  return 4140 if n == 8\n  return 21147 if n == 9\n  return 115975 if n == 10\n  return 678570 if n == 11\n  return 4213597 if n == 12\n  return 27644437 if n == 13\n  return 190899322 if n == 14\n  return 1382958545 if n == 15\n  return 10480142147 if n == 16\n  return 82864869804 if n == 17\n  return 682076806159 if n == 18\n  return 5832742205057 if n == 19\n  return 51724158235372 if n == 20\n  return 474869816156751 if n == 21\n  return 4506715738447323 if n == 22\n  return 44152005855084346 if n == 23\n  return 445958869294805289 if n == 24\n  return 4646559689905393970 if n == 25\n  return 49631246523618756274 if n == 26\n  return 541095999598735557801 if n == 27\n  return 6003908783989123823451 if n == 28\n  return 68630377364883236261391 if n == 29\n  return 798861098503367984964951 if n == 30\n  return 9495567745759798701507912 if n == 31\n  return 114058381065178412338914479 if n == 32\n  return 1391975643945375086340874526 if n == 33\n  return 17108885119435960685073207527 if n == 34\n  return 212251004871733677957072590525 if n == 35\n  return 2657205677716643800594858363601 if n == 36\n  return 33598430521524673980571394446176 if n == 37\n  return 427488328",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  if n == 0\n    return 1\n  end\n  bell = Array.new(n)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n-1]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1, 0)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend",
    "  bell = Array.new(n+1)\n  bell[0] = 1\n  for i in 1..n\n    bell[i] = 0\n    for j in 0..i-1\n      bell[i] = bell[i] + bell[j] * bell[i-j-1]\n    end\n  end\n  return bell[n]\nend"
  ]
}
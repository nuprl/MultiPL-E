{
  "name": "mbpp_461_upper_ctr",
  "language": "rb",
  "prompt": "# Write a rbthon function to count the upper case characters in a given string.\ndef upper_ctr(str)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_461_upper_ctr.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_upper_ctr\n    candidate = method(:upper_ctr)\n    assert_equal(1, candidate.call(\"PYthon\"))\n    assert_equal(1, candidate.call(\"BigData\"))\n    assert_equal(0, candidate.call(\"program\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  ctr = 0\n  str.each_char do |char|\n    if char == char.upcase\n      ctr += 1\n    end\n  end\n  return ctr\nend",
    "  ctr = 0\n  str.each_char do |char|\n    ctr += 1 if char.upcase == char\n  end\n  ctr\nend",
    "  return str.count(\"A-Z\")\nend\nputs upper_ctr(\"Hello World\")",
    "  return str.count(\"A-Z\")\nend",
    "  ctr = 0\n  str.each_char do |char|\n    if char.upcase == char\n      ctr += 1\n    end\n  end\n  ctr\nend",
    "  str.count(\"A-Z\")\nend\nputs upper_ctr(\"Hello World\")",
    "  ctr = 0\n  str.each_char do |ch|\n    if ch.upcase == ch\n      ctr += 1\n    end\n  end\n  return ctr\nend",
    "  str.count(\"A-Z\")\nend",
    "  ctr = 0\n  str.each_char do |ch|\n    if ch.ord >= 65 && ch.ord <= 90\n      ctr += 1\n    end\n  end\n  ctr\nend",
    "  ctr = 0\n  str.each_char do |char|\n    if char.upcase == char\n      ctr += 1\n    end\n  end\n  ctr\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend\nputs upper_ctr(\"Hello World\")",
    "  count = 0\n  str.each_char do |ch|\n    count += 1 if ch == ch.upcase\n  end\n  count\nend",
    "  count = 0\n  str.each_char do |char|\n    count += 1 if char.upcase == char\n  end\n  count\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend"
  ]
}
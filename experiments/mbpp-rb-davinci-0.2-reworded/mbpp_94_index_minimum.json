{
  "name": "mbpp_94_index_minimum",
  "language": "rb",
  "prompt": "# Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\ndef index_minimum(test_list)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_94_index_minimum.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_index_minimum\n    candidate = method(:index_minimum)\n    assert_equal(\"Varsha\", candidate.call([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]))\n    assert_equal(\"Dawood\", candidate.call([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]))\n    assert_equal(\"Ayesha\", candidate.call([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  min_index = 0\n  test_list.each_with_index do |sub_list, index|\n    if sub_list[1] < test_list[min_index][1]\n      min_index = index\n    end\n  end\n  test_list[min_index][0]\nend",
    "  min_index = 0\n  test_list.each_with_index do |sub_list, index|\n    min_index = index if sub_list[1] < test_list[min_index][1]\n  end\n  test_list[min_index][0]\nend",
    "  min_index = 0\n  test_list.each_with_index do |sub_list, index|\n    if sub_list[1] < test_list[min_index][1]\n      min_index = index\n    end\n  end\n  test_list[min_index][0]\nend",
    "  test_list.each_with_index do |value, index|\n    if value[1] == test_list.map {|x| x[1]}.min\n      return index\n    end\n  end\nend",
    "  min_index = 0\n  test_list.each_with_index do |sub_list, index|\n    if sub_list[1] < test_list[min_index][1]\n      min_index = index\n    end\n  end\n  test_list[min_index][0]\nend",
    "  min_index = 0\n  test_list.each_with_index do |sub_list, index|\n    if sub_list[1] < test_list[min_index][1]\n      min_index = index\n    end\n  end\n  test_list[min_index][0]\nend",
    "  min_index = 0\n  min_value = test_list[0][1]\n  test_list.each_with_index do |sub_list, index|\n    if sub_list[1] < min_value\n      min_index = index\n      min_value = sub_list[1]\n    end\n  end\n  test_list[min_index][0]\nend",
    "  min_index = 0\n  min_value = test_list[0][1]\n  test_list.each_with_index do |sub_list, index|\n    if sub_list[1] < min_value\n      min_index = index\n      min_value = sub_list[1]\n    end\n  end\n  test_list[min_index][0]\nend",
    "  min_index = 0\n  test_list.each_with_index do |sub_list, index|\n    if sub_list[1] < test_list[min_index][1]\n      min_index = index\n    end\n  end\n  test_list[min_index][0]\nend",
    "  min_index = 0\n  min_value = test_list[0][1]\n  test_list.each_with_index do |sub_list, index|\n    if sub_list[1] < min_value\n      min_index = index\n      min_value = sub_list[1]\n    end\n  end\n  test_list[min_index][0]\nend",
    "  min_index = 0\n  min_value = test_list[0][1]\n  test_list.each_with_index do |sub_array, index|\n    if sub_array[1] < min_value\n      min_index = index\n      min_value = sub_array[1]\n    end\n  end\n  return test_list[min_index][0]\nend",
    "  min_index = 0\n  test_list.each_with_index do |sub_list, index|\n    if sub_list[1] < test_list[min_index][1]\n      min_index = index\n    end\n  end\n  test_list[min_index][0]\nend",
    "  min_index = 0\n  test_list.each_with_index do |sub_list, index|\n    if sub_list[1] < test_list[min_index][1]\n      min_index = index\n    end\n  end\n  test_list[min_index][0]\nend",
    "  min_index = 0\n  test_list.each_with_index do |sub_list, index|\n    if sub_list[1] < test_list[min_index][1]\n      min_index = index\n    end\n  end\n  test_list[min_index][0]\nend",
    "  # Write your code here\nend",
    "  min_index = 0\n  min_value = test_list[0][1]\n  test_list.each_with_index do |sub_list, index|\n    if sub_list[1] < min_value\n      min_index = index\n      min_value = sub_list[1]\n    end\n  end\n  min_index\nend",
    "  min_index = 0\n  test_list.each_with_index do |sub_list, index|\n    if sub_list[1] < test_list[min_index][1]\n      min_index = index\n    end\n  end\n  test_list[min_index][0]\nend",
    "  min_index = 0\n  min_value = test_list[0][1]\n  test_list.each_with_index do |sub_list, index|\n    if sub_list[1] < min_value\n      min_index = index\n      min_value = sub_list[1]\n    end\n  end\n  min_index\nend",
    "  min_index = 0\n  min_value = test_list[0][1]\n  test_list.each_with_index do |sub_list, index|\n    if sub_list[1] < min_value\n      min_index = index\n      min_value = sub_list[1]\n    end\n  end\n  test_list[min_index][0]\nend",
    "  min_index = 0\n  test_list.each_with_index do |sub_list, index|\n    if sub_list[1] < test_list[min_index][1]\n      min_index = index\n    end\n  end\n  test_list[min_index][0]\nend"
  ]
}
{
  "name": "mbpp_626_triangle_area",
  "language": "rb",
  "prompt": "# Write a rbthon function to find the area of the largest triangle that can be inscribed in a semicircle with a given radius.\ndef triangle_area(r)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_626_triangle_area.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_triangle_area\n    candidate = method(:triangle_area)\n    assert_equal(nil, candidate.call(-1))\n    assert_equal(0, candidate.call(0))\n    assert_equal(4, candidate.call(2))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  (Math::PI * r**2 / 2).round(2)\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2)/2\nend",
    "  (Math.sqrt(3) / 4) * (r ** 2)\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2)/2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (r**2 * Math.sqrt(3)) / 4\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r ** 2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "  (r**2 * Math.sqrt(3))/4\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (r**2 * Math.sqrt(3)) / 4\nend",
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (r**2 * Math.sqrt(3)) / 4\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (r**2 * Math.sqrt(3)) / 4\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2)/2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "  (Math::PI * r**2)/2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3) * r * r) / 4\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "  (r**2 * Math.sqrt(3)) / 4\nend",
    "  (Math::PI * r**2)/2\nend",
    "  (Math::PI * r**2)/2\nend",
    "  return (Math.sqrt(3)/4)*(r**2)\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r * r) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4) * (r**2)\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  # area of triangle = (1/2) * base * height\n  # base = 2 * r\n  # height = sqrt(r**2 - (r/2)**2)\n  # area = (1/2) * 2 * r * sqrt(r**2 - (r/2)**2)\n  (1/2) * 2 * r * Math.sqrt(r**2 - (r/2)**2)\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4)*r*r\nend",
    "  (Math::PI * r * r * Math.sqrt(3)) / 4\nend",
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "  (Math.sqrt(3) * r**2) / 4\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (r**2 * Math.sqrt(3)) / 4\nend",
    "  (Math::PI * r**2)/2\nend",
    "  (Math.sqrt(3)/4.0)*(r**2)\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2)/2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2 / 2) / 3\nend",
    "  return (Math::PI * r * r * Math::sqrt(3)) / 4\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (r**2*Math.sqrt(3))/4\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "  (r**2 * Math.sqrt(3))/4\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r * r * Math.sqrt(3)) / 4\nend",
    "  (r**2 * Math.sqrt(3)) / 4\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (r**2*Math.sqrt(3))/4\nend",
    "  (Math::PI * r**2 / 2).round(2)\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "  (r**2 * Math.sqrt(3)) / 4\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2)/2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4) * (r**2)\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "\t(Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  area = (Math::PI * r**2) / 2\n  return area\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2)/2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (r**2 * Math.sqrt(3))/4\nend",
    "  (Math::PI * r**2)/2\nend",
    "  (Math.sqrt(3) / 4) * r * r\nend",
    "  (Math::PI * r**2)/2\nend",
    "  (Math.sqrt(3) / 4) * r * r\nend",
    "  return (Math::PI * r * r) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2 / 2).round(2)\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4) * (r**2)\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2)/2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  (Math.sqrt(3) * r**2) / 4\nend",
    "  (Math::PI * r**2) / 2\nend",
    "  return (Math.sqrt(3)/4)*(r**2)\nend"
  ]
}
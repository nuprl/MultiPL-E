{
  "name": "mbpp_724_power_base_sum",
  "language": "rb",
  "prompt": "# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\ndef power_base_sum(base, power)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_724_power_base_sum.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_power_base_sum\n    candidate = method(:power_base_sum)\n    assert_equal(115, candidate.call(2, 100))\n    assert_equal(37, candidate.call(8, 10))\n    assert_equal(62, candidate.call(8, 15))\n    assert_equal(9, candidate.call(3, 3))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split(//).map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).sum\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split(//).map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).sum\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).sum\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base**power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).sum\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split(//).map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split(//).map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base**power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).sum\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base**power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).sum\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).sum\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base**power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split(//).map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).inject(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).sum\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  (base ** power).to_s.split('').map(&:to_i).reduce(:+)\nend"
  ]
}
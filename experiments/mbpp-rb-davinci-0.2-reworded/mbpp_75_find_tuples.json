{
  "name": "mbpp_75_find_tuples",
  "language": "rb",
  "prompt": "# Write a function to find arrays which have all elements divisible by k from the given array of arrays.\ndef find_tuples(test_list, k)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_75_find_tuples.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_tuples\n    candidate = method(:find_tuples)\n    assert_equal([[6, 24, 12]], candidate.call([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6))\n    assert_equal([[5, 25, 30]], candidate.call([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5))\n    assert_equal([[8, 16, 4]], candidate.call([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |elem| elem % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |tuple| tuple.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |tuple| tuple.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_array| sub_array.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  result = []\n  test_list.each do |sub_list|\n    if sub_list.all? { |num| num % k == 0 }\n      result.push(sub_list)\n    end\n  end\n  result\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  result = []\n  test_list.each do |sub_list|\n    if sub_list.all? { |num| num % k == 0 }\n      result.push(sub_list)\n    end\n  end\n  result\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "    new_list = []\n    test_list.each do |i|\n        if i.all? { |j| j % k == 0 }\n            new_list.push(i)\n        end\n    end\n    return new_list\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |elem| elem % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |tuple| tuple.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |arr| arr.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |tuple| tuple.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  result = []\n  test_list.each do |sub_list|\n    result << sub_list if sub_list.all? { |num| num % k == 0 }\n  end\n  result\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |tuple| tuple.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_array| sub_array.all? { |element| element % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |tuple| tuple.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_arr| sub_arr.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |arr| arr.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |i| i.all? { |j| j % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |tuple| tuple.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |arr| arr.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |i| i.all? { |j| j % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |arr| arr.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |tuple| tuple.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |elem| elem % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  new_list = []\n  test_list.each do |i|\n    if i.all? { |e| e % k == 0 }\n      new_list << i\n    end\n  end\n  new_list\nend",
    "    new_list = []\n    test_list.each do |sub_list|\n        if sub_list.all? { |num| num % k == 0 }\n            new_list.push(sub_list)\n        end\n    end\n    return new_list\nend",
    "  test_list.select { |sub_array| sub_array.all? { |element| element % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  result = []\n  test_list.each do |i|\n    if i.all? { |x| x % k == 0 }\n      result.push(i)\n    end\n  end\n  result\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select{|x| x.all?{|y| y%k==0}}\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |tuple| tuple.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  result = []\n  test_list.each do |sub_list|\n    result << sub_list if sub_list.all? { |i| i % k == 0 }\n  end\n  result\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  result = []\n  test_list.each do |sub_list|\n    result << sub_list if sub_list.all? { |num| num % k == 0 }\n  end\n  result\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |elem| elem % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |tuple| tuple.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |tuple| tuple.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_arr| sub_arr.all? { |elem| elem % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |i| i.all? { |j| j % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  result = []\n  test_list.each do |sub_array|\n    result << sub_array if sub_array.all? { |element| element % k == 0 }\n  end\n  result\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  result = []\n  test_list.each do |arr|\n    result << arr if arr.all? { |num| num % k == 0 }\n  end\n  result\nend",
    "  test_list.select {|x| x.all? {|y| y % k == 0}}\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_arr| sub_arr.all? { |e| e % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  result = []\n  test_list.each do |sub_list|\n    result << sub_list if sub_list.all? { |num| num % k == 0 }\n  end\n  result\nend",
    "  test_list.select { |tuple| tuple.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |arr| arr.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |tuple| tuple.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |tuple| tuple.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_arr| sub_arr.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_arr| sub_arr.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |tuple| tuple.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  # Write your code here\n  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  result = []\n  test_list.each do |sub_list|\n    if sub_list.all? { |num| num % k == 0 }\n      result << sub_list\n    end\n  end\n  result\nend",
    "  result = []\n  test_list.each do |list|\n    result << list if list.all? { |num| num % k == 0 }\n  end\n  result\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  new_list = []\n  test_list.each do |sub_list|\n    if sub_list.all? { |num| num % k == 0 }\n      new_list << sub_list\n    end\n  end\n  new_list\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |tuple| tuple.all? { |num| num % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |x| x.all? { |y| y % k == 0 } }\nend",
    "  test_list.select { |sub_list| sub_list.all? { |num| num % k == 0 } }\nend"
  ]
}
{
  "name": "mbpp_66_pos_count",
  "language": "rb",
  "prompt": "# Write a rbthon function to count the number of positive numbers in an array.\ndef pos_count(list)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_66_pos_count.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_pos_count\n    candidate = method(:pos_count)\n    assert_equal(2, candidate.call([1, -2, 3, -4]))\n    assert_equal(3, candidate.call([3, 4, 5, -1]))\n    assert_equal(4, candidate.call([1, 2, 3, 4]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  count = 0\n  list.each do |num|\n    if num > 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  list.each do |num|\n    if num > 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  list.each do |num|\n    if num > 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  list.each do |num|\n    if num > 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  list.count { |x| x > 0 }\nend",
    "  count = 0\n  list.each do |num|\n    if num > 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  list.count {|x| x > 0}\nend",
    "  count = 0\n  list.each do |num|\n    if num > 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  list.each do |num|\n    if num > 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  list.each do |num|\n    if num > 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  list.count { |x| x > 0 }\nend",
    "  count = 0\n  list.each do |num|\n    if num > 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  list.each do |num|\n    if num > 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  list.each do |num|\n    if num > 0\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  list.each do |num|\n    if num > 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  list.each do |num|\n    if num > 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  list.each do |num|\n    if num > 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  list.each do |num|\n    if num > 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  list.each do |num|\n    if num > 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  list.each do |i|\n    if i > 0\n      count += 1\n    end\n  end\n  return count\nend"
  ]
}
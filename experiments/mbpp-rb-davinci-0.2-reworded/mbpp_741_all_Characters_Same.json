{
  "name": "mbpp_741_all_Characters_Same",
  "language": "rb",
  "prompt": "# Write a rbthon function to check whether all the characters are same or not.\ndef all_Characters_Same(s)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_741_all_Characters_Same.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_all_Characters_Same\n    candidate = method(:all_Characters_Same)\n    assert_equal(false, candidate.call(\"python\"))\n    assert_equal(true, candidate.call(\"aaa\"))\n    assert_equal(false, candidate.call(\"data\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  return s.split('').uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |c|\n    if c != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |c|\n    if c != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "  s.chars.uniq.length == 1\nend",
    "  s.split(\"\").uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  elsif s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |char|\n    if char != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    return s[0] == s[1] && all_Characters_Same(s[1..-1])\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  s.chars.uniq.length == 1\nend\nputs all_Characters_Same(\"aaaaa\")\nputs all_Characters_Same(\"aaaab\")",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      return all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |c|\n    if c != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  for i in 0..s.length-2\n    if s[i] != s[i+1]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    s.each_char do |char|\n      if char != s[0]\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |i|\n    if i != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  s.chars.uniq.size == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  s.each_char do |c|\n    if c != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "  s.chars.uniq.length == 1\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  return s.split(\"\").uniq.length == 1\nend",
    "  return s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 0\n    puts \"String is empty\"\n    return\n  end\n  s.chars.uniq.length == 1 ? true : false\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  for i in 0..s.length-2\n    if s[i] != s[i+1]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |c|\n    if c != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  for i in 0..s.length-2\n    if s[i] != s[i+1]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    return s.split('').uniq.length == 1\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |c|\n    if c != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |c|\n    if c != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  for i in 0..s.length-2\n    if s[i] != s[i+1]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |c|\n    if c != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "  return s.chars.all? { |c| c == s[0] }\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |c|\n    if c != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend\nputs all_Characters_Same(\"aaaa\")\nputs all_Characters_Same(\"aaaaa\")\nputs all_Characters_Same(\"aaaaaa\")\nputs all_Characters_Same(\"aaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\")\nputs all_Characters_Same",
    "  if s.length == 1\n    return true\n  else\n    return s.split('').uniq.length == 1\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  for i in 0..s.length-2\n    if s[i] != s[i+1]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  for i in 0..s.length-2\n    if s[i] != s[i+1]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    s.each_char do |c|\n      if c != s[0]\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |c|\n    if c != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |c|\n    if s[0] != c\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    return s[0] == s[1] && all_Characters_Same(s[1..-1])\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |c|\n    if c != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char.with_index do |c, i|\n    if c != s[i+1]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |c|\n    if c != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  end\n  return false\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  s.split('').uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  s.split('').uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      return all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |c|\n    if c != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  for i in 0..s.length-2\n    if s[i] != s[i+1]\n      return false\n    end\n  end\n  return true\nend"
  ]
}
name: HumanEval_39_prime_fib
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
  \ and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
  \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
  \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    public static long primeFib(long\
  \ n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
  \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n\
  \    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
  \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n \
  \   assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
  \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
completions: ["        long a = 1;\n        long b = 1;\n        long c = 2;\n   \
    \     long i = 3;\n        while (i < n) {\n            a = b;\n            b\
    \ = c;\n            c = a + b;\n            i = i + 1;\n        }\n        return\
    \ c;", "        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i = i\
    \ + 1;\n            }\n        }\n        return c;", "        long a = 1;\n \
    \       long b = 1;\n        long c = 2;\n        long i = 2;\n        while (i\
    \ < n) {\n            c = a + b;\n            a = b;\n            b = c;\n   \
    \         i = i + 1;\n        }\n        return c;", "        long a = 2;\n  \
    \      long b = 3;\n        long c = 5;\n        long i = 3;\n        while (i\
    \ < n) {\n            a = b;\n            b = c;\n            c = a + b;\n   \
    \         i = i + 1;\n        }\n        return c;", "        long a = 2;\n  \
    \      long b = 3;\n        long c = 5;\n        long i = 3;\n        while (i\
    \ < n) {\n            a = b;\n            b = c;\n            c = a + b;\n   \
    \         if (isPrime(c)) {\n                i = i + 1;\n            }\n     \
    \   }\n        return c;", "        long a = 2;\n        long b = 3;\n       \
    \ long c = 5;\n        long i = 3;\n        while (i < n) {\n            a = b;\n\
    \            b = c;\n            c = a + b;\n            if (isPrime(c)) {\n \
    \               i = i + 1;\n            }\n        }\n        return c;", "  \
    \      long a = 1;\n        long b = 1;\n        long c = 2;\n        long i =\
    \ 3;\n        while (i < n) {\n            a = b;\n            b = c;\n      \
    \      c = a + b;\n            if (isPrime(c)) {\n                i = i + 1;\n\
    \            }\n        }\n        return c;", "        long a = 2;\n        long\
    \ b = 3;\n        long c = 5;\n        long i = 3;\n        while (i < n) {\n\
    \            a = b;\n            b = c;\n            c = a + b;\n            i\
    \ = i + 1;\n        }\n        return c;", "        long a = 1;\n        long\
    \ b = 1;\n        long c = 2;\n        long i = 2;\n        while (i < n) {\n\
    \            c = a + b;\n            a = b;\n            b = c;\n            i\
    \ = i + 1;\n        }\n        return c;", "        long i = 0;\n        long\
    \ j = 1;\n        long k = 0;\n        long count = 0;\n        while (count <\
    \ n) {\n            k = i + j;\n            i = j;\n            j = k;\n     \
    \       if (isPrime(k)) {\n                count = count + 1;\n            }\n\
    \        }\n        return k;", "        long a = 2;\n        long b = 3;\n  \
    \      long c = 5;\n        long i = 3;\n        while (i < n) {\n           \
    \ a = b;\n            b = c;\n            c = a + b;\n            if (isPrime(c))\
    \ {\n                i = i + 1;\n            }\n        }\n        return c;",
  "        long a = 2l;\n        long b = 3l;\n        long c = 5l;\n        long\
    \ i = 3l;\n        while (i < n) {\n            a = b;\n            b = c;\n \
    \           c = a + b;\n            i = i + 1l;\n        }\n        return c;",
  "        long a = 1;\n        long b = 2;\n        long c = 3;\n        long count\
    \ = 2;\n        while (count < n) {\n            if (isPrime(c)) {\n         \
    \       count += 1;\n            }\n            a = b;\n            b = c;\n \
    \           c = a + b;\n        }\n        return c;", "        long a = 1;\n\
    \        long b = 1;\n        long c = 2;\n        long i = 3;\n        while\
    \ (i < n) {\n            a = b;\n            b = c;\n            c = a + b;\n\
    \            i = i + 1;\n        }\n        return c;", "        long f1 = 2;\n\
    \        long f2 = 3;\n        long f3 = 5;\n        long i = 3;\n        while\
    \ (i < n) {\n            f1 = f2;\n            f2 = f3;\n            f3 = f1 +\
    \ f2;\n            if (isPrime(f3)) {\n                i = i + 1;\n          \
    \  }\n        }\n        return f3;", "        long a = 2l;\n        long b =\
    \ 3l;\n        long c = 5l;\n        long i = 3l;\n        while (i < n) {\n \
    \           a = b;\n            b = c;\n            c = a + b;\n            if\
    \ (isPrime(c)) {\n                i = i + 1l;\n            }\n        }\n    \
    \    return c;", "        long a = 2;\n        long b = 3;\n        long c = 0;\n\
    \        long i = 2;\n        while (i < n) {\n            c = a + b;\n      \
    \      a = b;\n            b = c;\n            if (isPrime(c)) {\n           \
    \     i = i + 1;\n            }\n        }\n        return c;", "        long\
    \ a = 1;\n        long b = 1;\n        long c = 1;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (isPrime(c)) {\n                i = i + 1;\n        \
    \    }\n        }\n        return c;", "        long a = 2;\n        long b =\
    \ 3;\n        long c = 5;\n        long i = 3;\n        while (i < n) {\n    \
    \        a = b;\n            b = c;\n            c = a + b;\n            if (isPrime(c))\
    \ {\n                i = i + 1;\n            }\n        }\n        return c;",
  "        long a = 1;\n        long b = 1;\n        long c = 1;\n        long i =\
    \ 1;\n        while (i < n) {\n            c = a + b;\n            a = b;\n  \
    \          b = c;\n            if (isPrime(c)) {\n                i++;\n     \
    \       }\n        }\n        return c;"]
stop_tokens:
- "\n    }\n"

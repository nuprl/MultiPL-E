name: HumanEval_94_skjkasdkd
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given an array array list of integers.\n    // You\
  \ need to find the largest prime value and return the sum of its digits.\n    //\
  \ Examples:\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l,\
  \ (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l,\
  \ (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l,\
  \ (long)32l, (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
  \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
  \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
  \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
  \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
  \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    // >>>\
  \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
  \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
  \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    // >>>\
  \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l,\
  \ (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
  \ lst) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(skjkasdkd((new\
  \ ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l, (long)1l, (long)3l,\
  \ (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l, (long)2l, (long)181l,\
  \ (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l, (long)324l, (long)4l,\
  \ (long)3l)))) == (10l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)0l, (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l,\
  \ (long)40l, (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l,\
  \ (long)1l)))) == (25l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
  \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
  \ (long)3l)))) == (13l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l,\
  \ (long)91l, (long)83l, (long)0l, (long)5l, (long)6l)))) == (11l));\n    assert(skjkasdkd((new\
  \ ArrayList<Long>(Arrays.asList((long)0l, (long)81l, (long)12l, (long)3l, (long)1l,\
  \ (long)21l)))) == (3l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)8l, (long)1l, (long)2l, (long)1l, (long)7l)))) == (7l));\n    assert(skjkasdkd((new\
  \ ArrayList<Long>(Arrays.asList((long)8191l)))) == (19l));\n    assert(skjkasdkd((new\
  \ ArrayList<Long>(Arrays.asList((long)8191l, (long)123456l, (long)127l, (long)7l))))\
  \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)127l,\
  \ (long)97l, (long)8192l)))) == (10l));\n    }\n\n}\n"
completions: ["        long max = 0;\n        for (long i : lst) {\n            if\
    \ (isPrime(i)) {\n                max = Math.max(max, i);\n            }\n   \
    \     }\n        return sumDigits(max);", "        long max = 0;\n        for\
    \ (long i : lst) {\n            if (isPrime(i)) {\n                max = Math.max(max,\
    \ i);\n            }\n        }\n        return sumDigits(max);", "        long\
    \ largestPrime = 0l;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumDigits(largestPrime);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = i;\n            }\n\
    \        }\n        return sumOfDigits(max);", "        long max = 0;\n      \
    \  for (long i : lst) {\n            if (isPrime(i)) {\n                max =\
    \ Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l,\
    \ (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l,\
    \ (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l,\
    \ (long)32l, (long)324l, (long)4l, (long)3l))))\n        // (10l)\n        //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l,\
    \ (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l,\
    \ (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n \
    \       // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l,", "        long max = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                if (i > max) {\n\
    \                    max = i;\n                }\n            }\n        }\n \
    \       return sumDigits(max);", "        long max = 0;\n        for (long i :\
    \ lst) {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        if (i > max) {\n                    max = i;\n                }\n   \
    \         }\n        }\n        return sumOfDigits(max);", "        long max =\
    \ 0;\n        for (Long i : lst) {\n            if (i > max) {\n             \
    \   max = i;\n            }\n        }\n        long sum = 0;\n        while (max\
    \ > 0) {\n            sum += max % 10;\n            max /= 10;\n        }\n  \
    \      return sum;", "        long max = 0;\n        for (long i : lst) {\n  \
    \          if (isPrime(i)) {\n                max = Math.max(max, i);\n      \
    \      }\n        }\n        return sumDigits(max);", "        long ret = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ ret = i;\n            }\n        }\n        return sumDigits(ret);", "     \
    \   long max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n\
    \                max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0;\n        for (long i : lst) {\n   \
    \         if (isPrime(i)) {\n                max = Math.max(max, i);\n       \
    \     }\n        }\n        return sumDigits(max);", "        long max = 0;\n\
    \        for (long l : lst) {\n            if (isPrime(l)) {\n               \
    \ max = Math.max(max, l);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = i;\n            }\n        }\n        return sumDigits(max);",
  "        long largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumDigits(largestPrime);", "        long max = 0;\n        for (Long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l,\
    \ (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l,\
    \ (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l,\
    \ (long)32l, (long)324l, (long)4l, (long)3l))))\n        // (10l)\n        //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l,\
    \ (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l,\
    \ (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n \
    \       // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l,", "        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l))))\n        // (10l)\n\
    \        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l,\
    \ (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l,\
    \ (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n\
    \        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l,", "        long largestPrime = 0;\n        for\
    \ (long i : lst) {\n            if (isPrime(i)) {\n                largestPrime\
    \ = i;\n            }\n        }\n        return sumDigits(largestPrime);", " \
    \       // Your code here\n        long max = 0;\n        for (long i : lst) {\n\
    \            if (isPrime(i)) {\n                max = Math.max(max, i);\n    \
    \        }\n        }\n        return sumDigits(max);", "        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        return 0;",
  "        // Your code here\n        return (long)0l;", "        long largestPrime\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        largestPrime = i;\n            }\n        }\n        return sumDigits(largestPrime);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long largestPrime = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                largestPrime = i;\n\
    \            }\n        }\n        return sumOfDigits(largestPrime);", "     \
    \   long max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n\
    \                if (i > max) {\n                    max = i;\n              \
    \  }\n            }\n        }\n        return sumDigits(max);", "        return\
    \ lst.stream().filter(x -> isPrime(x)).max(Comparator.naturalOrder()).get().toString().chars().map(x\
    \ -> x - '0').sum();", "        long max = 0;\n        for (long i : lst) {\n\
    \            if (isPrime(i)) {\n                max = Math.max(max, i);\n    \
    \        }\n        }\n        return sumDigits(max);", "        long max = 0;\n\
    \        for (long l : lst) {\n            if (isPrime(l)) {\n               \
    \ max = Math.max(max, l);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (Long l : lst) {\n            if (isPrime(l))\
    \ {\n                max = Math.max(max, l);\n            }\n        }\n     \
    \   return sumDigits(max);", "        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l))))\n        // (10l)\n\
    \        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l,\
    \ (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l,\
    \ (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n\
    \        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l,", "        long max = 0;\n        for (long\
    \ i : lst) {\n            if (i > max) {\n                max = i;\n         \
    \   }\n        }\n        long sum = 0;\n        while (max > 0) {\n         \
    \   sum += max % 10;\n            max /= 10;\n        }\n        return sum;",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumOfDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long largestPrime\
    \ = 0;\n        for (long l : lst) {\n            if (isPrime(l)) {\n        \
    \        largestPrime = Math.max(largestPrime, l);\n            }\n        }\n\
    \        return sumDigits(largestPrime);", "        long max = 0;\n        for\
    \ (long i : lst) {\n            if (isPrime(i)) {\n                max = Math.max(max,\
    \ i);\n            }\n        }\n        return sumDigits(max);", "        long\
    \ max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n    \
    \            max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l))))\n        // (10l)\n\
    \        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l,\
    \ (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l,\
    \ (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n\
    \        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l,", "        long max = 0;\n        for (long\
    \ i : lst) {\n            if (i > max) {\n                max = i;\n         \
    \   }\n        }\n        long sum = 0;\n        while (max > 0) {\n         \
    \   sum += max % 10;\n            max /= 10;\n        }\n        return sum;",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l))))\n        // (10l)\n\
    \        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l,\
    \ (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l,\
    \ (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n\
    \        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l,", "        // Write your code here\n       \
    \ // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        long max =\
    \ 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n          \
    \      max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumOfDigits(largestPrime);", "        long largestPrime = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                largestPrime = i;\n\
    \            }\n        }\n        return sumDigits(largestPrime);", "       \
    \ long largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumDigits(largestPrime);", "        long result = 0;\n        long largestPrime\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        largestPrime = i;\n            }\n        }\n        while (largestPrime\
    \ > 0) {\n            result += largestPrime % 10;\n            largestPrime /=\
    \ 10;\n        }\n        return result;", "        long largestPrime = 0;\n \
    \       for (Long i : lst) {\n            if (isPrime(i)) {\n                largestPrime\
    \ = i;\n            }\n        }\n        return sumDigits(largestPrime);", " \
    \       long largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumDigits(largestPrime);", "        return lst.stream().filter(x -> isPrime(x)).max(Long::compare).get().toString().chars().map(x\
    \ -> x - '0').sum();", "        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l))))\n        // (10l)\n\
    \        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l,\
    \ (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l,\
    \ (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n\
    \        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l,", "        long ret = 0l;\n        long max\
    \ = 0l;\n        for (long i : lst) {\n            if (isPrime(i)) {\n       \
    \         max = Math.max(max, i);\n            }\n        }\n        while (max\
    \ > 0) {\n            ret += max % 10;\n            max /= 10;\n        }\n  \
    \      return ret;", "        long largestPrime = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                largestPrime = i;\n      \
    \      }\n        }\n        return sumDigits(largestPrime);", "        long largestPrime\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        largestPrime = i;\n            }\n        }\n        return sumOfDigits(largestPrime);",
  "        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l,\
    \ (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l,\
    \ (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l,\
    \ (long)32l, (long)324l, (long)4l, (long)3l))))\n        // (10l)\n        //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l,\
    \ (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l,\
    \ (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n \
    \       // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l,", '        return 0l;', "        long max =\
    \ 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n          \
    \      max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = i;\n            }\n\
    \        }\n        return sumDigits(max);", "        long largestPrime = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ largestPrime = i;\n            }\n        }\n        return sumDigits(largestPrime);",
  "        long max = 0;\n        for (long i : lst) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        for (long i = max;\
    \ i > 1; i--) {\n            boolean isPrime = true;\n            for (long j\
    \ = 2; j < i; j++) {\n                if (i % j == 0) {\n                    isPrime\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if (isPrime) {\n                long sum = 0;\n                while\
    \ (i > 0) {\n                    sum += i % 10;\n                    i /= 10;\n\
    \                }\n                return sum;\n            }\n        }\n  \
    \      return 0;", "        long max = 0;\n        for (long i : lst) {\n    \
    \        if (isPrime(i)) {\n                max = Math.max(max, i);\n        \
    \    }\n        }\n        return sumDigits(max);", "        long largestPrime\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        largestPrime = i;\n            }\n        }\n        return sumDigits(largestPrime);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long largestPrime = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                largestPrime = i;\n\
    \            }\n        }\n        return sumOfDigits(largestPrime);", "     \
    \   // Your code here\n        return 0l;", "        long max = 0;\n        for\
    \ (long i : lst) {\n            if (isPrime(i)) {\n                max = Math.max(max,\
    \ i);\n            }\n        }\n        return sumDigits(max);", '        return
    0l;', "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = i;\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                if (i > max) {\n                    max = i;\n          \
    \      }\n            }\n        }\n        return sumDigits(max);", "       \
    \ long max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n\
    \                max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0;\n        for (long i : lst) {\n   \
    \         if (isPrime(i)) {\n                max = i;\n            }\n       \
    \ }\n        return sumDigits(max);", "        long max = 0;\n        for (long\
    \ i : lst) {\n            if (i > max) {\n                max = i;\n         \
    \   }\n        }\n        long sum = 0;\n        while (max > 0) {\n         \
    \   sum += max % 10;\n            max /= 10;\n        }\n        return sum;",
  "        long largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumDigits(largestPrime);", "        // Your code here\n        long max = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        for (long i = max;\
    \ i > 1; i--) {\n            boolean isPrime = true;\n            for (long j\
    \ = 2; j < i; j++) {\n                if (i % j == 0) {\n                    isPrime\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if (isPrime) {\n                return sumOfDigits(i);\n           \
    \ }\n        }\n        return 0;", "        long max = 0;\n        for (long\
    \ i : lst) {\n            if (i > max) {\n                max = i;\n         \
    \   }\n        }\n        long maxPrime = 0;\n        for (long i = 2; i <= max;\
    \ i++) {\n            boolean isPrime = true;\n            for (long j = 2; j\
    \ < i; j++) {\n                if (i % j == 0) {\n                    isPrime\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if (isPrime) {\n                maxPrime = i;\n            }\n     \
    \   }\n        long sum = 0;\n        while (maxPrime > 0) {\n            sum\
    \ += maxPrime % 10;\n            maxPrime /= 10;\n        }\n        return sum;",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = i;\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                if (i > max) {\n         \
    \           max = i;\n                }\n            }\n        }\n        return\
    \ sumDigits(max);", "        // >>> your code goes here <<<\n        return 0l;",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = i;\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = i;\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumOfDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        // Your code\
    \ here\n        return 0l;", "        long largestPrime = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                largestPrime = i;\n\
    \            }\n        }\n        return sumDigits(largestPrime);", "       \
    \ long max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n\
    \                max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0;\n        for (long i : lst) {\n   \
    \         if (i > max) {\n                max = i;\n            }\n        }\n\
    \        long maxPrime = 0;\n        for (long i = 2; i <= max; i++) {\n     \
    \       boolean isPrime = true;\n            for (long j = 2; j <= Math.sqrt(i);\
    \ j++) {\n                if (i % j == 0) {\n                    isPrime = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ (isPrime) {\n                maxPrime = i;\n            }\n        }\n     \
    \   long sum = 0;\n        while (maxPrime > 0) {\n            sum += maxPrime\
    \ % 10;\n            maxPrime /= 10;\n        }\n        return sum;", "     \
    \   long max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n\
    \                max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        // Write your code here\n        // To print results\
    \ to the standard output you can use System.out.println()\n        // Example:\
    \ System.out.println(\"Hello world!\");\n        long max = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                max = i;\n      \
    \      }\n        }\n        return sumDigits(max);", "        long max = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        // Your code here.\n        long max = 0;\n        for (long i : lst) {\n\
    \            if (isPrime(i)) {\n                if (i > max) {\n             \
    \       max = i;\n                }\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0;\n        for (long i : lst) {\n   \
    \         if (isPrime(i)) {\n                max = Math.max(max, i);\n       \
    \     }\n        }\n        return sumDigits(max);", "        long max = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (i > max) {\n                max = i;\n            }\n   \
    \     }\n        for (long i = max; i > 0; i--) {\n            if (isPrime(i))\
    \ {\n                return sumDigits(i);\n            }\n        }\n        return\
    \ 0;", "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long largestPrime = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                largestPrime = i;\n\
    \            }\n        }\n        return sumDigits(largestPrime);", "       \
    \ long max = 0;\n        for (Long l : lst) {\n            if (isPrime(l)) {\n\
    \                max = Math.max(max, l);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0;\n        for (long i : lst) {\n   \
    \         if (isPrime(i)) {\n                if (i > max) {\n                \
    \    max = i;\n                }\n            }\n        }\n        return sumDigits(max);",
  '        return lst.stream().filter(x -> isPrime(x)).mapToLong(x -> sumDigits(x)).max().getAsLong();',
  "        long largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumDigits(largestPrime);", "        // Write your code here\n        // To print\
    \ results to the standard output you can use System.out.println()\n        //\
    \ Example: System.out.println(\"Hello world!\");\n        long max = 0;\n    \
    \    for (long i : lst) {\n            if (isPrime(i)) {\n                max\
    \ = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumDigits(largestPrime);", "        long largestPrime = 0l;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                largestPrime = i;\n\
    \            }\n        }\n        return sumDigits(largestPrime);", "       \
    \ long max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n\
    \                max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0;\n        for (Long i : lst) {\n   \
    \         if (isPrime(i)) {\n                max = Math.max(max, i);\n       \
    \     }\n        }\n        return sumDigits(max);", "        long max = 0;\n\
    \        for (Long i : lst) {\n            if (isPrime(i)) {\n               \
    \ max = i;\n            }\n        }\n        return sumDigits(max);", "     \
    \   long max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n\
    \                max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long largestPrime = 0l;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                largestPrime = i;\n      \
    \      }\n        }\n        return sumDigits(largestPrime);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumDigits(largestPrime);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        // Your code here\n        long max = 0;\n        for (long i : lst) {\n\
    \            if (isPrime(i)) {\n                max = i;\n            }\n    \
    \    }\n        return sumDigits(max);", "        long max = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                if (i > max) {\n\
    \                    max = i;\n                }\n            }\n        }\n \
    \       return sumDigits(max);", "        long largestPrime = 0;\n        for\
    \ (long i : lst) {\n            if (isPrime(i)) {\n                largestPrime\
    \ = i;\n            }\n        }\n        return sumDigits(largestPrime);", " \
    \       long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                if (i > max) {\n         \
    \           max = i;\n                }\n            }\n        }\n        return\
    \ sumDigits(max);", "        long largestPrime = 0;\n        for (long l : lst)\
    \ {\n            if (isPrime(l)) {\n                largestPrime = Math.max(largestPrime,\
    \ l);\n            }\n        }\n        return sumDigits(largestPrime);", " \
    \       long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                if (i > max) {\n                    max = i;\n          \
    \      }\n            }\n        }\n        return sumOfDigits(max);", "     \
    \   // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n        // (10l)\n        // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n        // (25l)\n   \
    \     // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l,\
    \ (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n\
    \        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l,", "        long max = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                max = i;\n      \
    \      }\n        }\n        return sumDigits(max);", "        long max = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                if (i > max) {\n                    max = i;\n          \
    \      }\n            }\n        }\n        return sumDigits(max);", "       \
    \ long max = 0;\n        for (long l : lst) {\n            if (isPrime(l)) {\n\
    \                max = Math.max(max, l);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0;\n        for (long i : lst) {\n   \
    \         if (isPrime(i)) {\n                max = Math.max(max, i);\n       \
    \     }\n        }\n        return sumDigits(max);", "        long max = 0;\n\
    \        for (long i : lst) {\n            if (i > max) {\n                max\
    \ = i;\n            }\n        }\n        long largestPrime = 0;\n        for\
    \ (long i = max; i > 0; i--) {\n            if (isPrime(i)) {\n              \
    \  largestPrime = i;\n                break;\n            }\n        }\n     \
    \   long sum = 0;\n        while (largestPrime > 0) {\n            sum += largestPrime\
    \ % 10;\n            largestPrime /= 10;\n        }\n        return sum;", " \
    \       long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = i;\n            }\n\
    \        }\n        return sumDigits(max);", "        // Write your code here.\n\
    \        return 0l;", "        long largestPrime = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                largestPrime = i;\n      \
    \      }\n        }\n        return sumDigits(largestPrime);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        if (i > max) {\n                    max = i;\n                }\n   \
    \         }\n        }\n        return sumDigits(max);", "        long max = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (i > max) {\n                max = i;\n            }\n   \
    \     }\n        long sum = 0;\n        while (max > 0) {\n            sum +=\
    \ max % 10;\n            max /= 10;\n        }\n        return sum;", "      \
    \  // Write your code here.\n        return (long)0l;", "        // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l, (long)1l, (long)3l,\
    \ (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l, (long)2l, (long)181l,\
    \ (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l, (long)324l, (long)4l,\
    \ (long)3l))))\n        // (10l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)0l, (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l,\
    \ (long)40l, (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l,\
    \ (long)1l))))\n        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l,", "        return lst.stream().filter(x -> isPrime(x)).max(Comparator.naturalOrder()).get().toString().chars().map(x\
    \ -> x - '0').sum();", "        long max = 0;\n        for (long i : lst) {\n\
    \            if (isPrime(i)) {\n                max = Math.max(max, i);\n    \
    \        }\n        }\n        return sumDigits(max);", "        long max = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ max = i;\n            }\n        }\n        return sumDigits(max);", "     \
    \   long max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n\
    \                max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0;\n        for (long i : lst) {\n   \
    \         if (isPrime(i)) {\n                max = Math.max(max, i);\n       \
    \     }\n        }\n        return sumDigits(max);", "        long max = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ max = Math.max(max, i);\n            }\n        }\n        return sumOfDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (Long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = i;\n            }\n\
    \        }\n        return sumDigits(max);", "        long max = 0;\n        for\
    \ (long i : lst) {\n            if (isPrime(i)) {\n                if (i > max)\
    \ {\n                    max = i;\n                }\n            }\n        }\n\
    \        return sumDigits(max);", "        long max = 0;\n        for (long i\
    \ : lst) {\n            if (isPrime(i)) {\n                max = Math.max(max,\
    \ i);\n            }\n        }\n        return sumDigits(max);", "        //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n        // (10l)\n        // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n        // (25l)\n   \
    \     // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l,\
    \ (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n\
    \        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l,", "        long max = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                max = Math.max(max,\
    \ i);\n            }\n        }\n        return sumDigits(max);", "        long\
    \ max = 0;\n        for (long i : lst) {\n            if (i > max) {\n       \
    \         max = i;\n            }\n        }\n        long maxPrime = 0;\n   \
    \     for (long i = 0; i < max; i++) {\n            if (isPrime(i)) {\n      \
    \          maxPrime = i;\n            }\n        }\n        long sum = 0;\n  \
    \      while (maxPrime > 0) {\n            sum += maxPrime % 10;\n           \
    \ maxPrime /= 10;\n        }\n        return sum;", "        long largestPrime\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        largestPrime = i;\n            }\n        }\n        return sumDigits(largestPrime);",
  "        // Your code here\n        return 0l;", "        long maxPrime = 0;\n \
    \       for (long i : lst) {\n            if (isPrime(i)) {\n                maxPrime\
    \ = Math.max(maxPrime, i);\n            }\n        }\n        return sumDigits(maxPrime);",
  "        long largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumDigits(largestPrime);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        if (i > max) {\n                    max = i;\n                }\n   \
    \         }\n        }\n        return sumDigits(max);", "        // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l, (long)1l, (long)3l,\
    \ (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l, (long)2l, (long)181l,\
    \ (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l, (long)324l, (long)4l,\
    \ (long)3l))))\n        // (10l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)0l, (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l,\
    \ (long)40l, (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l,\
    \ (long)1l))))\n        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l,", "        long largestPrime = 0;\n        for\
    \ (long i : lst) {\n            if (isPrime(i)) {\n                largestPrime\
    \ = i;\n            }\n        }\n        return sumDigits(largestPrime);", " \
    \       // Write your code here.\n        return 0l;", "        long largestPrime\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        largestPrime = i;\n            }\n        }\n        return sumDigits(largestPrime);",
  "        long largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumDigits(largestPrime);", "        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l))))\n        // (10l)\n\
    \        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l,\
    \ (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l,\
    \ (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n\
    \        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l,", "        long max = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                max = Math.max(max,\
    \ i);\n            }\n        }\n        return sumDigits(max);", "        long\
    \ largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumDigits(largestPrime);", "        return lst.stream().filter(x -> isPrime(x)).max(Long::compare).get().toString().chars().map(x\
    \ -> x - '0').sum();", "        // Your code here.\n        return 0l;", "   \
    \     // Your code here.\n        return (long)0l;", "        long max = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        long max = 0;\n        for (long i : lst) {\n      \
    \      if (isPrime(i)) {\n                max = i;\n            }\n        }\n\
    \        return sumDigits(max);", "        long max = 0;\n        for (long i\
    \ : lst) {\n            if (i > max) {\n                max = i;\n           \
    \ }\n        }\n        long maxPrime = 0;\n        for (long i = max; i > 1;\
    \ i--) {\n            if (isPrime(i)) {\n                maxPrime = i;\n     \
    \           break;\n            }\n        }\n        long sum = 0;\n        while\
    \ (maxPrime > 0) {\n            sum += maxPrime % 10;\n            maxPrime /=\
    \ 10;\n        }\n        return sum;", "        long largestPrime = 0l;\n   \
    \     for (long i : lst) {\n            if (isPrime(i)) {\n                largestPrime\
    \ = i;\n            }\n        }\n        return sumDigits(largestPrime);", " \
    \       long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long largest = 0;\n        for (long i :\
    \ lst) {\n            if (isPrime(i)) {\n                if (i > largest) {\n\
    \                    largest = i;\n                }\n            }\n        }\n\
    \        return sumDigits(largest);", "        long max = 0;\n        for (long\
    \ i : lst) {\n            if (i > max) {\n                max = i;\n         \
    \   }\n        }\n        long maxPrime = 0;\n        for (long i = 2; i <= max;\
    \ i++) {\n            boolean isPrime = true;\n            for (long j = 2; j\
    \ <= Math.sqrt(i); j++) {\n                if (i % j == 0) {\n               \
    \     isPrime = false;\n                    break;\n                }\n      \
    \      }\n            if (isPrime) {\n                maxPrime = i;\n        \
    \    }\n        }\n        long sum = 0;\n        while (maxPrime > 0) {\n   \
    \         sum += maxPrime % 10;\n            maxPrime /= 10;\n        }\n    \
    \    return sum;", "        long max = 0;\n        for (long i : lst) {\n    \
    \        if (isPrime(i)) {\n                max = Math.max(max, i);\n        \
    \    }\n        }\n        return sumDigits(max);", "        long largestPrime\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        largestPrime = i;\n            }\n        }\n        return sumDigits(largestPrime);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long largestPrime = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                largestPrime = i;\n\
    \            }\n        }\n        return sumDigits(largestPrime);", "       \
    \ return lst.stream().filter(x -> isPrime(x)).max(Comparator.naturalOrder()).get().toString().chars().map(x\
    \ -> x - '0').sum();", "        long max = 0;\n        for (long i : lst) {\n\
    \            if (isPrime(i)) {\n                max = Math.max(max, i);\n    \
    \        }\n        }\n        return sumDigits(max);", "        // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l, (long)1l, (long)3l,\
    \ (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l, (long)2l, (long)181l,\
    \ (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l, (long)324l, (long)4l,\
    \ (long)3l))))\n        // (10l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)0l, (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l,\
    \ (long)40l, (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l,\
    \ (long)1l))))\n        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l,", "        long largestPrime = 0l;\n       \
    \ for (long i : lst) {\n            if (isPrime(i)) {\n                largestPrime\
    \ = i;\n            }\n        }\n        return sumDigits(largestPrime);", " \
    \       long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                if (i > max) {\n         \
    \           max = i;\n                }\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0;\n        for (long i : lst) {\n   \
    \         if (isPrime(i)) {\n                max = Math.max(max, i);\n       \
    \     }\n        }\n        return sumOfDigits(max);", "        long max = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumDigits(largestPrime);", "        long largestPrime = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                largestPrime = i;\n\
    \            }\n        }\n        return sumDigits(largestPrime);", "       \
    \ long max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n\
    \                if (i > max) {\n                    max = i;\n              \
    \  }\n            }\n        }\n        return sumDigits(max);", "        // Write\
    \ your code here.\n        return 0l;", "        long largestPrime = 0;\n    \
    \    for (long i : lst) {\n            if (isPrime(i)) {\n                largestPrime\
    \ = i;\n            }\n        }\n        return sumDigits(largestPrime);"]
stop_tokens:
- "\n    }\n"

name: HumanEval_118_get_closest_vowel
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given a word. Your task is to find the closest vowel\
  \ that stands between \n    // two consonants from the right side of the word (case\
  \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return empty\
  \ string if you didn't\n    // find any vowel met the above condition. \n    //\
  \ You may assume that the given string contains English letter only.\n    // Example:\n\
  \    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n    // >>> getClosestVowel((\"\
  FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"quick\"))\n    // (\"\"\
  )\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n    public static String\
  \ getClosestVowel(String word) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
  yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
  u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n\
  \    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
  most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n\
  \    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"i\"\
  )));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  Above\")).equals((\"o\")));\n    }\n\n}\n"
completions: ["        String vowels = \"aeiouAEIOU\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String result = \"\
    \";\n        for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                if (i + 1 < word.length() && consonants.contains(word.substring(i\
    \ + 1, i + 2))) {\n                    if (i - 1 >= 0 && consonants.contains(word.substring(i\
    \ - 1, i))) {\n                        result = word.substring(i, i + 1);\n  \
    \                      break;\n                    }\n                }\n    \
    \        }\n        }\n        return result;", "        String vowels = \"aeiouAEIOU\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;", "     \
    \   String vowels = \"aeiouAEIOU\";\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            char c =\
    \ word.charAt(i);\n            if (vowels.indexOf(c) != -1) {\n              \
    \  sb.append(c);\n            } else {\n                if (sb.length() > 0) {\n\
    \                    return sb.toString();\n                }\n            }\n\
    \        }\n        return \"\";", "        // Your code here\n        return\
    \ \"\";", "        String vowels = \"aeiouAEIOU\";\n        String result = \"\
    \";\n        for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                result = word.substring(i, i + 1);\n           \
    \     break;\n            }\n        }\n        return result;", "        // Write\
    \ your code here\n        return \"\";", "        String vowels = \"aeiou\";\n\
    \        int index = word.length() - 1;\n        while (index >= 0) {\n      \
    \      if (vowels.contains(word.substring(index, index + 1))) {\n            \
    \    if (index + 1 < word.length() && !vowels.contains(word.substring(index +\
    \ 1, index + 2))) {\n                    return word.substring(index, index +\
    \ 1);\n                }\n            }\n            index--;\n        }\n   \
    \     return \"\";", "        // TODO: Implement your solution here\n        return\
    \ \"\";", "        String vowels = \"aeiouAEIOU\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String result = \"\
    \";\n        int index = word.length() - 1;\n        while (index >= 0) {\n  \
    \          if (vowels.contains(word.substring(index, index + 1))) {\n        \
    \        if (index == word.length() - 1) {\n                    break;\n     \
    \           }\n                if (consonants.contains(word.substring(index +\
    \ 1, index + 2))) {\n                    result = word.substring(index, index\
    \ + 1);\n                    break;\n                }\n            }\n      \
    \      index--;\n        }\n        return result;", "        String vowels =\
    \ \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;", "     \
    \   String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            String letter = word.substring(index,\
    \ index + 1);\n            if (vowels.contains(letter)) {\n                result\
    \ = letter;\n                break;\n            }\n            index--;\n   \
    \     }\n        return result;", "        String vowels = \"aeiouAEIOU\";\n \
    \       String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n\
    \        String result = \"\";\n        for (int i = word.length() - 1; i >= 0;\
    \ i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n \
    \               for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;", "     \
    \   // TODO: Write your code here\n        return \"\";", "        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;", "        String vowels = \"aeiou\";\n        String result\
    \ = \"\";\n        int index = word.length() - 1;\n        while (index >= 0)\
    \ {\n            if (vowels.contains(word.substring(index, index + 1))) {\n  \
    \              result = word.substring(index, index + 1);\n                break;\n\
    \            }\n            index--;\n        }\n        return result;", "  \
    \      // TODO: Implement your solution here\n        return \"\";", "       \
    \ String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                if (i == word.length() - 1) {\n                    return \"\"\
    ;\n                }\n                for (int j = i + 1; j < word.length(); j++)\
    \ {\n                    if (vowels.contains(word.substring(j, j + 1))) {\n  \
    \                      return word.substring(j, j + 1);\n                    }\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   String vowels = \"aeiouAEIOU\";\n        String result = \"\";\n        int\
    \ index = -1;\n        for (int i = word.length() - 1; i >= 0; i--) {\n      \
    \      if (vowels.contains(word.substring(i, i + 1))) {\n                if (i\
    \ == word.length() - 1) {\n                    continue;\n                }\n\
    \                if (i == 0) {\n                    continue;\n              \
    \  }\n                if (vowels.contains(word.substring(i - 1, i))) {\n     \
    \               continue;\n                }\n                if (vowels.contains(word.substring(i\
    \ + 1, i + 2))) {\n                    continue;\n                }\n        \
    \        index = i;\n                break;\n            }\n        }\n      \
    \  if (index != -1) {\n            result = word.substring(index, index + 1);\n\
    \        }\n        return result;", "        String vowels = \"aeiouAEIOU\";\n\
    \        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n\
    \        int index = word.length() - 1;\n        while (index >= 0) {\n      \
    \      if (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index\
    \ > 0 && consonants.indexOf(word.charAt(index - 1)) != -1) {\n               \
    \     return word.substring(index, index + 1);\n                }\n          \
    \  }\n            index--;\n        }\n        return \"\";", "        // Your\
    \ code here\n        return \"\";", "        String vowels = \"aeiou\";\n    \
    \    String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\
    \";\n        for (int i = word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                for (int j = i + 1; j < word.length(); j++) {\n\
    \                    if (vowels.contains(word.substring(j, j + 1))) {\n      \
    \                  result = word.substring(j, j + 1);\n                      \
    \  break;\n                    }\n                }\n                break;\n\
    \            }\n        }\n        return result;", "        String vowels = \"\
    aeiou\";\n        int closest = -1;\n        for (int i = word.length() - 1; i\
    \ >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n    \
    \            closest = i;\n                break;\n            }\n        }\n\
    \        if (closest == -1) {\n            return \"\";\n        }\n        for\
    \ (int i = closest - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i))\
    \ == -1) {\n                return word.substring(closest, closest + 1);\n   \
    \         }\n        }\n        return \"\";", "        // TODO: Implement this\
    \ method\n        return \"\";", "        String vowels = \"aeiouAEIOU\";\n  \
    \      String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n \
    \       String result = \"\";\n        for (int i = word.length() - 1; i >= 0;\
    \ i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n \
    \               for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;", "     \
    \   String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int closestVowelIndex = -1;\n        int closestConsonantIndex = -1;\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                closestVowelIndex = i;\n            }\n          \
    \  if (consonants.indexOf(word.charAt(i)) != -1) {\n                closestConsonantIndex\
    \ = i;\n                break;\n            }\n        }\n        if (closestVowelIndex\
    \ == -1 || closestConsonantIndex == -1) {\n            return \"\";\n        }\n\
    \        return word.substring(closestVowelIndex, closestVowelIndex + 1);", " \
    \       String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index\
    \ > 0 && consonants.indexOf(word.charAt(index - 1)) != -1) {\n               \
    \     return word.substring(index, index + 1);\n                }\n          \
    \  }\n            index--;\n        }\n        return \"\";", "        String\
    \ vowels = \"aeiouAEIOU\";\n        String closestVowel = \"\";\n        int closestVowelIndex\
    \ = -1;\n        for (int i = word.length() - 1; i >= 0; i--) {\n            if\
    \ (vowels.contains(word.substring(i, i + 1))) {\n                closestVowel\
    \ = word.substring(i, i + 1);\n                closestVowelIndex = i;\n      \
    \          break;\n            }\n        }\n        if (closestVowelIndex ==\
    \ -1) {\n            return \"\";\n        }\n        for (int i = closestVowelIndex\
    \ - 1; i >= 0; i--) {\n            if (!vowels.contains(word.substring(i, i +\
    \ 1))) {\n                return closestVowel;\n            }\n        }\n   \
    \     return \"\";", "        String vowels = \"aeiou\";\n        String result\
    \ = \"\";\n        int index = -1;\n        for (int i = word.length() - 1; i\
    \ >= 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1))) {\n\
    \                if (i == word.length() - 1) {\n                    continue;\n\
    \                }\n                if (i == 0) {\n                    continue;\n\
    \                }\n                if (vowels.contains(word.substring(i - 1,\
    \ i))) {\n                    continue;\n                }\n                if\
    \ (vowels.contains(word.substring(i + 1, i + 2))) {\n                    continue;\n\
    \                }\n                index = i;\n                break;\n     \
    \       }\n        }\n        if (index == -1) {\n            return result;\n\
    \        }\n        return word.substring(index, index + 1);", "        String\
    \ vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                if (i == word.length() - 1) {\n                    return \"\"\
    ;\n                }\n                for (int j = i + 1; j < word.length(); j++)\
    \ {\n                    if (vowels.contains(word.substring(j, j + 1))) {\n  \
    \                      return word.substring(j, j + 1);\n                    }\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;", "     \
    \   String vowels = \"aeiou\";\n        int n = word.length();\n        int i\
    \ = n - 1;\n        while (i >= 0) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                if (i == n - 1) {\n                    return \"\"\
    ;\n                }\n                if (vowels.indexOf(word.charAt(i + 1)) ==\
    \ -1) {\n                    return word.substring(i, i + 1);\n              \
    \  }\n            }\n            i--;\n        }\n        return \"\";", "   \
    \     // Your code here\n        return \"\";", "        String vowels = \"aeiouAEIOU\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                if (i == word.length() - 1) {\n                    return \"\"\
    ;\n                }\n                for (int j = i + 1; j < word.length(); j++)\
    \ {\n                    if (vowels.contains(word.substring(j, j + 1))) {\n  \
    \                      return word.substring(j, j + 1);\n                    }\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   // Write your code here\n        return \"\";", "        String vowels = \"\
    aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index\
    \ == 0) {\n                    return \"\";\n                }\n             \
    \   if (consonants.indexOf(word.charAt(index - 1)) != -1) {\n                \
    \    return word.substring(index, index + 1);\n                }\n           \
    \ }\n            index--;\n        }\n        return \"\";", "        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;", "        String vowels = \"aeiouAEIOU\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String\
    \ result = \"\";\n        int index = word.length() - 1;\n        while (index\
    \ >= 0) {\n            if (vowels.contains(word.substring(index, index + 1)))\
    \ {\n                if (index + 1 < word.length() && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    if (index - 1 >= 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                        result = word.substring(index, index\
    \ + 1);\n                        break;\n                    }\n             \
    \   }\n            }\n            index--;\n        }\n        return result;",
  "        String vowels = \"aeiou\";\n        String result = \"\";\n        int\
    \ index = word.length() - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;", "        String vowels = \"aeiouAEIOU\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        int index\
    \ = word.length() - 1;\n        while (index >= 0) {\n            if (vowels.indexOf(word.charAt(index))\
    \ != -1) {\n                if (index == 0) {\n                    return \"\"\
    ;\n                }\n                if (consonants.indexOf(word.charAt(index\
    \ - 1)) != -1) {\n                    return word.substring(index, index + 1);\n\
    \                }\n            }\n            index--;\n        }\n        return\
    \ \"\";", "        String vowels = \"aeiouAEIOU\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String closestVowel\
    \ = \"\";\n        int closestVowelIndex = -1;\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            String letter = word.substring(i, i + 1);\n\
    \            if (vowels.contains(letter)) {\n                if (closestVowelIndex\
    \ == -1) {\n                    closestVowel = letter;\n                    closestVowelIndex\
    \ = i;\n                } else {\n                    if (i + 1 < closestVowelIndex)\
    \ {\n                        if (consonants.contains(word.substring(i + 1, i +\
    \ 2))) {\n                            closestVowel = letter;\n               \
    \             closestVowelIndex = i;\n                        }\n            \
    \        }\n                }\n            }\n        }\n        if (closestVowelIndex\
    \ == -1) {\n            return \"\";\n        } else {\n            if (closestVowelIndex\
    \ == 0) {\n                return \"\";\n            } else {\n              \
    \  if (consonants.contains(word.substring(closestVowelIndex - 1, closestVowelIndex)))\
    \ {\n                    return closestVowel;\n                } else {\n    \
    \                return \"\";\n                }\n            }\n        }", " \
    \       String vowels = \"aeiouAEIOU\";\n        String result = \"\";\n     \
    \   for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                result = word.substring(i, i + 1);\n           \
    \     if (i != 0 && i != word.length() - 1) {\n                    if (vowels.contains(word.substring(i\
    \ - 1, i)) || vowels.contains(word.substring(i + 1, i + 2))) {\n             \
    \           result = \"\";\n                    }\n                }\n       \
    \     }\n        }\n        return result;", "        String vowels = \"aeiou\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result\
    \ = \"\";\n        int index = word.length() - 1;\n        while (index >= 0)\
    \ {\n            if (vowels.contains(word.substring(index, index + 1))) {\n  \
    \              if (index > 0 && consonants.contains(word.substring(index - 1,\
    \ index))) {\n                    if (index < word.length() - 1 && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                        result = word.substring(index,\
    \ index + 1);\n                        break;\n                    }\n       \
    \         }\n            }\n            index--;\n        }\n        return result;",
  "        String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index > 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                    if (index < word.length() - 1 && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                        result = word.substring(index,\
    \ index + 1);\n                        break;\n                    }\n       \
    \         }\n            }\n            index--;\n        }\n        return result;",
  "        // TODO: Implement this method\n        return \"\";", "        String\
    \ vowels = \"aeiou\";\n        String closestVowel = \"\";\n        int closestVowelIndex\
    \ = -1;\n        for (int i = word.length() - 1; i >= 0; i--) {\n            String\
    \ letter = word.substring(i, i + 1);\n            if (vowels.contains(letter))\
    \ {\n                if (closestVowelIndex == -1) {\n                    closestVowelIndex\
    \ = i;\n                    closestVowel = letter;\n                } else {\n\
    \                    if (i < closestVowelIndex) {\n                        closestVowelIndex\
    \ = i;\n                        closestVowel = letter;\n                    }\n\
    \                }\n            }\n        }\n        return closestVowel;", " \
    \       String vowels = \"aeiou\";\n        int len = word.length();\n       \
    \ for (int i = len - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                if (i == len - 1) {\n                    return \"\
    \";\n                }\n                if (vowels.indexOf(word.charAt(i + 1))\
    \ == -1) {\n                    return word.substring(i, i + 1);\n           \
    \     }\n            }\n        }\n        return \"\";", "        String vowels\
    \ = \"aeiouAEIOU\";\n        for (int i = word.length() - 1; i >= 0; i--) {\n\
    \            if (vowels.contains(word.substring(i, i + 1))) {\n              \
    \  if (i == word.length() - 1) {\n                    return \"\";\n         \
    \       }\n                if (i == 0) {\n                    return \"\";\n \
    \               }\n                if (vowels.contains(word.substring(i - 1, i))\
    \ || vowels.contains(word.substring(i + 1, i + 2))) {\n                    continue;\n\
    \                }\n                return word.substring(i, i + 1);\n       \
    \     }\n        }\n        return \"\";", "        // TODO: Implement this method\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  '        return "";', "        // Your code here\n        return \"\";", "     \
    \   // Your code here\n        return \"\";", "        // your code here\n   \
    \     return \"\";", "        String vowels = \"aeiou\";\n        int index =\
    \ word.length() - 1;\n        while (index > 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (!vowels.contains(word.substring(index -\
    \ 1, index))) {\n                    return word.substring(index, index + 1);\n\
    \                }\n            }\n            index--;\n        }\n        return\
    \ \"\";", "        String vowels = \"aeiouAEIOU\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        int n = word.length();\n\
    \        int i = n - 1;\n        while (i >= 0) {\n            if (consonants.indexOf(word.charAt(i))\
    \ != -1) {\n                break;\n            }\n            i--;\n        }\n\
    \        if (i == 0) {\n            return \"\";\n        }\n        int j = i\
    \ - 1;\n        while (j >= 0) {\n            if (vowels.indexOf(word.charAt(j))\
    \ != -1) {\n                break;\n            }\n            j--;\n        }\n\
    \        if (j == 0) {\n            return \"\";\n        }\n        int k = j\
    \ - 1;\n        while (k >= 0) {\n            if (consonants.indexOf(word.charAt(k))\
    \ != -1) {\n                break;\n            }\n            k--;\n        }\n\
    \        if (k == 0) {\n            return \"\";\n        }\n        return word.substring(j,\
    \ j + 1);", "        String vowels = \"aeiouAEIOU\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String result = \"\
    \";\n        for (int i = word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                for (int j = i - 1; j >= 0; j--) {\n           \
    \         if (vowels.contains(word.substring(j, j + 1))) {\n                 \
    \       result = word.substring(j, j + 1);\n                        break;\n \
    \                   }\n                }\n                break;\n           \
    \ }\n        }\n        return result;", "        String vowels = \"aeiouAEIOU\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (consonants.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            index--;\n                    continue;\n                }\n    \
    \            if (vowels.contains(word.substring(index + 1, index + 2))) {\n  \
    \                  result = word.substring(index + 1, index + 2);\n          \
    \          break;\n                }\n            }\n            index--;\n  \
    \      }\n        return result;", "        String vowels = \"aeiou\";\n     \
    \   String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        StringBuilder sb =\
    \ new StringBuilder();\n        for (int i = word.length() - 1; i >= 0; i--) {\n\
    \            char c = word.charAt(i);\n            if (vowels.indexOf(c) != -1)\
    \ {\n                sb.append(c);\n            } else if (consonants.indexOf(c)\
    \ != -1) {\n                if (sb.length() > 0) {\n                    return\
    \ sb.toString();\n                }\n            }\n        }\n        return\
    \ \"\";", "        String vowels = \"aeiouAEIOU\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String result = \"\
    \";\n        for (int i = word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                for (int j = i + 1; j < word.length(); j++) {\n\
    \                    if (vowels.contains(word.substring(j, j + 1))) {\n      \
    \                  result = word.substring(j, j + 1);\n                      \
    \  break;\n                    }\n                }\n                break;\n\
    \            }\n        }\n        return result;", '        return "";', "  \
    \      String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int vowelIndex = -1;\n        int consonantIndex\
    \ = -1;\n        for (int i = word.length() - 1; i >= 0; i--) {\n            String\
    \ letter = word.substring(i, i + 1);\n            if (vowels.contains(letter))\
    \ {\n                vowelIndex = i;\n            } else if (consonants.contains(letter))\
    \ {\n                consonantIndex = i;\n            }\n            if (vowelIndex\
    \ != -1 && consonantIndex != -1) {\n                result = word.substring(vowelIndex,\
    \ vowelIndex + 1);\n                break;\n            }\n        }\n       \
    \ return result;", "        String vowels = \"aeiouAEIOU\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String result = \"\
    \";\n        int index = word.length() - 1;\n        while (index >= 0) {\n  \
    \          char c = word.charAt(index);\n            if (vowels.indexOf(c) !=\
    \ -1) {\n                result = String.valueOf(c);\n                break;\n\
    \            }\n            index--;\n        }\n        return result;", "  \
    \      // TODO: implement this method\n        return \"\";", "        String\
    \ vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
    \        String result = \"\";\n        int index = word.length() - 1;\n     \
    \   while (index >= 0) {\n            if (consonants.contains(word.substring(index,\
    \ index + 1))) {\n                if (index + 1 < word.length() && vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    result = word.substring(index + 1,\
    \ index + 2);\n                    break;\n                }\n            }\n\
    \            index--;\n        }\n        return result;", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        String vowels = \"aeiouAEIOU\";\n        int closest\
    \ = -1;\n        for (int i = word.length() - 1; i >= 0; i--) {\n            if\
    \ (vowels.indexOf(word.charAt(i)) != -1) {\n                closest = i;\n   \
    \             break;\n            }\n        }\n        if (closest == -1) {\n\
    \            return \"\";\n        }\n        for (int i = closest - 1; i >= 0;\
    \ i--) {\n            if (vowels.indexOf(word.charAt(i)) == -1) {\n          \
    \      return word.substring(closest, closest + 1);\n            }\n        }\n\
    \        return \"\";", "        String vowels = \"aeiou\";\n        int index\
    \ = word.length() - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index > 0 && !vowels.contains(word.substring(index\
    \ - 1, index))) {\n                    return word.substring(index, index + 1);\n\
    \                }\n            }\n            index--;\n        }\n        return\
    \ \"\";", "        String vowels = \"aeiou\";\n        String consonants = \"\
    bcdfghjklmnpqrstvwxyz\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            if (consonants.contains(word.substring(index, index\
    \ + 1))) {\n                break;\n            }\n            index--;\n    \
    \    }\n        if (index < 0) {\n            return \"\";\n        }\n      \
    \  int index2 = index - 1;\n        while (index2 >= 0) {\n            if (vowels.contains(word.substring(index2,\
    \ index2 + 1))) {\n                break;\n            }\n            index2--;\n\
    \        }\n        if (index2 < 0) {\n            return \"\";\n        }\n \
    \       int index3 = index2 - 1;\n        while (index3 >= 0) {\n            if\
    \ (consonants.contains(word.substring(index3, index3 + 1))) {\n              \
    \  break;\n            }\n            index3--;\n        }\n        if (index3\
    \ < 0) {\n            return \"\";\n        }\n        return word.substring(index2,\
    \ index2 + 1);", "        // Write your code here\n        return \"\";", "  \
    \      // write your code here\n        return \"\";", "        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            if (vowels.contains(word.substring(index, index\
    \ + 1))) {\n                if (index + 1 < word.length() && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    if (index - 1 >= 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                        result = word.substring(index, index\
    \ + 1);\n                        break;\n                    }\n             \
    \   }\n            }\n            index--;\n        }\n        return result;",
  "        // Write your code here\n        return \"\";", "        // Your code here\n\
    \        return \"\";", "        // Your code here\n        return \"\";", " \
    \       // Write your code here\n        return \"\";", "        String vowels\
    \ = \"aeiouAEIOU\";\n        int index = word.length() - 1;\n        while (index\
    \ >= 0) {\n            if (vowels.indexOf(word.charAt(index)) != -1) {\n     \
    \           return String.valueOf(word.charAt(index));\n            }\n      \
    \      index--;\n        }\n        return \"\";", "        String vowels = \"\
    aeiou\";\n        String result = \"\";\n        for (int i = word.length() -\
    \ 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1)))\
    \ {\n                result = word.substring(i, i + 1);\n                break;\n\
    \            }\n        }\n        return result;", "        String vowels = \"\
    aeiou\";\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = 0;\n                int j = i + 1;\n\
    \                for (; j < word.length(); j++) {\n                    if (vowels.indexOf(word.charAt(j))\
    \ != -1) {\n                        break;\n                    }\n          \
    \          distance++;\n                }\n                if (j == word.length())\
    \ {\n                    distance = Integer.MAX_VALUE;\n                }\n  \
    \              if (distance < minDistance) {\n                    minDistance\
    \ = distance;\n                    result = word.substring(i, i + 1);\n      \
    \          }\n            }\n        }\n        return result;", "        String\
    \ vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (consonants.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            index--;\n                    continue;\n                }\n    \
    \            if (vowels.contains(word.substring(index + 1, index + 2))) {\n  \
    \                  result = word.substring(index + 1, index + 2);\n          \
    \          break;\n                }\n            }\n            index--;\n  \
    \      }\n        return result;", '        return "";', "        int n = word.length();\n\
    \        if (n < 3) return \"\";\n        char[] vowels = {'a', 'e', 'i', 'o',\
    \ 'u'};\n        int[] vowelIndices = new int[5];\n        int[] consonantIndices\
    \ = new int[n];\n        int vowelCount = 0;\n        int consonantCount = 0;\n\
    \        for (int i = 0; i < n; i++) {\n            char c = word.charAt(i);\n\
    \            boolean isVowel = false;\n            for (int j = 0; j < 5; j++)\
    \ {\n                if (c == vowels[j]) {\n                    vowelIndices[vowelCount++]\
    \ = i;\n                    isVowel = true;\n                    break;\n    \
    \            }\n            }\n            if (!isVowel) consonantIndices[consonantCount++]\
    \ = i;\n        }\n        if (consonantCount < 2) return \"\";\n        int minDistance\
    \ = Integer.MAX_VALUE;\n        int minIndex = -1;\n        for (int i = 0; i\
    \ < vowelCount; i++) {\n            for (int j = 0; j < consonantCount - 1; j++)\
    \ {\n                int distance = consonantIndices[j + 1] - vowelIndices[i];\n\
    \                if (distance > 0 && distance < minDistance) {\n             \
    \       minDistance = distance;\n                    minIndex = vowelIndices[i];\n\
    \                }\n            }\n        }\n        if (minIndex == -1) return\
    \ \"\";\n        return word.substring(minIndex, minIndex + 1);", "        String\
    \ vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
    \        int index = -1;\n        for (int i = word.length() - 1; i >= 0; i--)\
    \ {\n            if (consonants.contains(word.substring(i, i + 1))) {\n      \
    \          for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        index = j;\n                        break;\n\
    \                    }\n                }\n                break;\n          \
    \  }\n        }\n        if (index == -1) {\n            return \"\";\n      \
    \  }\n        return word.substring(index, index + 1);", "        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int distance = 0;\n\
    \                for (int j = i + 1; j < word.length(); j++) {\n             \
    \       char c2 = word.charAt(j);\n                    if (vowels.indexOf(c2)\
    \ == -1) {\n                        distance++;\n                    } else {\n\
    \                        break;\n                    }\n                }\n  \
    \              if (distance < minDistance) {\n                    minDistance\
    \ = distance;\n                    result = String.valueOf(c);\n             \
    \   }\n            }\n        }\n        return result;", "        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) >= 0) {\n                int distance = 0;\n\
    \                for (int j = i + 1; j < word.length(); j++) {\n             \
    \       char d = word.charAt(j);\n                    if (vowels.indexOf(d) >=\
    \ 0) {\n                        break;\n                    }\n              \
    \      distance++;\n                }\n                if (distance < minDistance)\
    \ {\n                    minDistance = distance;\n                    result =\
    \ \"\" + c;\n                }\n            }\n        }\n        return result;",
  "        String vowels = \"aeiou\";\n        String vowelsUpper = \"AEIOU\";\n \
    \       String result = \"\";\n        int index = 0;\n        int min = word.length();\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1)) || vowelsUpper.contains(word.substring(i, i + 1))) {\n             \
    \   if (i + 1 < word.length() && !vowels.contains(word.substring(i + 1, i + 2))\
    \ && !vowelsUpper.contains(word.substring(i + 1, i + 2))) {\n                \
    \    if (i - 1 >= 0 && !vowels.contains(word.substring(i - 1, i)) && !vowelsUpper.contains(word.substring(i\
    \ - 1, i))) {\n                        if (i < min) {\n                      \
    \      min = i;\n                            index = i;\n                    \
    \    }\n                    }\n                }\n            }\n        }\n \
    \       if (index != 0) {\n            result = word.substring(index, index +\
    \ 1);\n        }\n        return result;", "        String vowels = \"aeiouAEIOU\"\
    ;\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n     \
    \   for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int j = i;\n    \
    \            while (j < word.length() && vowels.indexOf(word.charAt(j)) != -1)\
    \ {\n                    j++;\n                }\n                if (j < word.length())\
    \ {\n                    if (j - i < min) {\n                        min = j -\
    \ i;\n                        result = word.substring(i, j);\n               \
    \     }\n                }\n            }\n        }\n        return result;",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;", "     \
    \   String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        int lastVowelIndex = -1;\n        int lastConsonantIndex = -1;\n  \
    \      for (int i = word.length() - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                lastVowelIndex =\
    \ i;\n            } else if (consonants.indexOf(c) != -1) {\n                lastConsonantIndex\
    \ = i;\n                if (lastVowelIndex != -1) {\n                    return\
    \ word.substring(lastVowelIndex, lastVowelIndex + 1);\n                }\n   \
    \         }\n        }\n        return \"\";", "        String vowels = \"aeiouAEIOU\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int i = word.length() - 1;\n        while (i >= 0) {\n            if\
    \ (vowels.indexOf(word.charAt(i)) != -1) {\n                int j = i - 1;\n \
    \               while (j >= 0) {\n                    if (consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                        int k = j - 1;\n                        while\
    \ (k >= 0) {\n                            if (consonants.indexOf(word.charAt(k))\
    \ != -1) {\n                                return \"\";\n                   \
    \         } else if (vowels.indexOf(word.charAt(k)) != -1) {\n               \
    \                 return \"\";\n                            }\n              \
    \              k--;\n                        }\n                        return\
    \ word.substring(i, i + 1);\n                    }\n                    j--;\n\
    \                }\n            }\n            i--;\n        }\n        return\
    \ \"\";", "        String vowels = \"aeiou\";\n        String result = \"\";\n\
    \        int index = word.length() - 1;\n        while (index >= 0) {\n      \
    \      if (vowels.contains(word.substring(index, index + 1))) {\n            \
    \    result = word.substring(index, index + 1);\n                break;\n    \
    \        }\n            index--;\n        }\n        return result;", "      \
    \  String vowels = \"aeiou\";\n        String[] wordArray = word.split(\"\");\n\
    \        String[] reversedWordArray = new String[wordArray.length];\n        for\
    \ (int i = 0; i < wordArray.length; i++) {\n            reversedWordArray[i] =\
    \ wordArray[wordArray.length - 1 - i];\n        }\n        String closestVowel\
    \ = \"\";\n        for (int i = 0; i < reversedWordArray.length; i++) {\n    \
    \        if (vowels.contains(reversedWordArray[i])) {\n                closestVowel\
    \ = reversedWordArray[i];\n                break;\n            }\n        }\n\
    \        return closestVowel;", "        // Write your code here\n        return\
    \ \"\";", "        // Write your code here\n        return \"\";", "        String\
    \ vowels = \"aeiou\";\n        String closestVowel = \"\";\n        int closestVowelIndex\
    \ = -1;\n        for (int i = word.length() - 1; i >= 0; i--) {\n            char\
    \ c = word.charAt(i);\n            if (vowels.indexOf(c) != -1) {\n          \
    \      closestVowel = String.valueOf(c);\n                closestVowelIndex =\
    \ i;\n                break;\n            }\n        }\n        if (closestVowelIndex\
    \ == -1) {\n            return \"\";\n        }\n        for (int i = closestVowelIndex\
    \ - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c)\
    \ == -1) {\n                return closestVowel;\n            }\n        }\n \
    \       return \"\";", "        String vowels = \"aeiouAEIOU\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        int index\
    \ = word.length() - 1;\n        while (index >= 0) {\n            if (consonants.contains(word.substring(index,\
    \ index + 1))) {\n                break;\n            }\n            index--;\n\
    \        }\n        if (index == 0) {\n            return \"\";\n        }\n \
    \       int index2 = index - 1;\n        while (index2 >= 0) {\n            if\
    \ (consonants.contains(word.substring(index2, index2 + 1))) {\n              \
    \  break;\n            }\n            index2--;\n        }\n        if (index2\
    \ == -1) {\n            return \"\";\n        }\n        int index3 = index -\
    \ 1;\n        while (index3 >= index2) {\n            if (vowels.contains(word.substring(index3,\
    \ index3 + 1))) {\n                return word.substring(index3, index3 + 1);\n\
    \            }\n            index3--;\n        }\n        return \"\";", "   \
    \     String vowels = \"aeiouAEIOU\";\n        String result = \"\";\n       \
    \ for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                result = word.substring(i, i + 1);\n           \
    \     break;\n            }\n        }\n        return result;", "        // TODO:\
    \ implement this method\n        return \"\";", "        // Write your code here\n\
    \        return \"\";", "        String vowels = \"aeiou\";\n        String result\
    \ = \"\";\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length();\
    \ i++) {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c)\
    \ != -1) {\n                int left = i - 1;\n                int right = i +\
    \ 1;\n                boolean leftConsonant = false;\n                boolean\
    \ rightConsonant = false;\n                while (left >= 0) {\n             \
    \       if (vowels.indexOf(word.charAt(left)) == -1) {\n                     \
    \   leftConsonant = true;\n                        break;\n                  \
    \  }\n                    left--;\n                }\n                while (right\
    \ < word.length()) {\n                    if (vowels.indexOf(word.charAt(right))\
    \ == -1) {\n                        rightConsonant = true;\n                 \
    \       break;\n                    }\n                    right++;\n        \
    \        }\n                if (leftConsonant && rightConsonant) {\n         \
    \           if (min > i) {\n                        min = i;\n               \
    \         result = \"\" + c;\n                    }\n                }\n     \
    \       }\n        }\n        return result;", "        String vowels = \"aeiou\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result\
    \ = \"\";\n        int closest = word.length();\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i, i\
    \ + 1))) {\n                for (int j = i - 1; j >= 0; j--) {\n             \
    \       if (vowels.contains(word.substring(j, j + 1))) {\n                   \
    \     if (i - j < closest) {\n                            closest = i - j;\n \
    \                           result = word.substring(j, j + 1);\n             \
    \           }\n                    }\n                }\n            }\n     \
    \   }\n        return result;", "        String vowels = \"aeiou\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n   \
    \     for (int i = word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                for (int j = i - 1; j >= 0; j--) {\n           \
    \         if (vowels.contains(word.substring(j, j + 1))) {\n                 \
    \       result = word.substring(j, j + 1);\n                        break;\n \
    \                   }\n                }\n                break;\n           \
    \ }\n        }\n        return result;", "        // Write your code here\n  \
    \      return \"\";", "        String vowels = \"aeiouAEIOU\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String\
    \ closestVowel = \"\";\n        int closestIndex = word.length();\n        for\
    \ (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                if (i > 0 && consonants.indexOf(word.charAt(i - 1))\
    \ != -1) {\n                    if (i < word.length() - 1 && consonants.indexOf(word.charAt(i\
    \ + 1)) != -1) {\n                        if (i < closestIndex) {\n          \
    \                  closestIndex = i;\n                            closestVowel\
    \ = word.substring(i, i + 1);\n                        }\n                   \
    \ }\n                }\n            }\n        }\n        return closestVowel;",
  "        String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;", "     \
    \   String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index + 1 < word.length() && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    if (index - 1 >= 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                        result = word.substring(index, index\
    \ + 1);\n                        break;\n                    }\n             \
    \   }\n            }\n            index--;\n        }\n        return result;",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i + 1; j < word.length(); j++) {\n             \
    \       if (vowels.contains(word.substring(j, j + 1))) {\n                   \
    \     result = word.substring(j, j + 1);\n                        break;\n   \
    \                 }\n                }\n                break;\n            }\n\
    \        }\n        return result;", "        String vowels = \"aeiou\";\n   \
    \     String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result =\
    \ \"\";\n        int index = word.length() - 1;\n        while (index >= 0) {\n\
    \            if (vowels.contains(word.substring(index, index + 1))) {\n      \
    \          if (index == word.length() - 1) {\n                    index--;\n \
    \                   continue;\n                }\n                if (consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    result = word.substring(index, index\
    \ + 1);\n                    break;\n                }\n            }\n      \
    \      index--;\n        }\n        return result;", "        String vowels =\
    \ \"aeiou\";\n        String result = \"\";\n        int min = word.length();\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int j = i + 1;\n                while (j < word.length()\
    \ && vowels.indexOf(word.charAt(j)) != -1) {\n                    j++;\n     \
    \           }\n                if (j < word.length()) {\n                    int\
    \ k = j + 1;\n                    while (k < word.length() && vowels.indexOf(word.charAt(k))\
    \ != -1) {\n                        k++;\n                    }\n            \
    \        if (k < word.length()) {\n                        if (k - i < min) {\n\
    \                            min = k - i;\n                            result\
    \ = word.substring(i, i + 1);\n                        }\n                   \
    \ }\n                }\n            }\n        }\n        return result;", " \
    \       String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String closestVowel = \"\";\n        int closestVowelIndex = -1;\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                if (closestVowelIndex != -1) {\n               \
    \     if (i < closestVowelIndex) {\n                        closestVowel = word.substring(i,\
    \ i + 1);\n                        closestVowelIndex = i;\n                  \
    \  }\n                } else {\n                    closestVowel = word.substring(i,\
    \ i + 1);\n                    closestVowelIndex = i;\n                }\n   \
    \         } else if (consonants.contains(word.substring(i, i + 1))) {\n      \
    \          if (closestVowelIndex != -1) {\n                    if (i > closestVowelIndex)\
    \ {\n                        return closestVowel;\n                    }\n   \
    \             }\n            }\n        }\n        return \"\";", "        String\
    \ vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = 0;\n        for (int i =\
    \ word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                for (int j = i; j >= 0; j--) {\n               \
    \     if (vowels.contains(word.substring(j, j + 1))) {\n                     \
    \   result = word.substring(j, j + 1);\n                        index = j;\n \
    \                       break;\n                    }\n                }\n   \
    \             break;\n            }\n        }\n        for (int i = index - 1;\
    \ i >= 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1)))\
    \ {\n                return result;\n            }\n        }\n        return\
    \ \"\";", "        String vowels = \"aeiouAEIOU\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (consonants.contains(word.substring(index,\
    \ index + 1))) {\n                break;\n            }\n            index--;\n\
    \        }\n        if (index < 0) {\n            return \"\";\n        }\n  \
    \      index--;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                return word.substring(index, index + 1);\n \
    \           }\n            if (consonants.contains(word.substring(index, index\
    \ + 1))) {\n                break;\n            }\n            index--;\n    \
    \    }\n        return \"\";", "        String vowels = \"aeiouAEIOU\";\n    \
    \    String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n   \
    \     String result = \"\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            if (vowels.contains(word.substring(index, index\
    \ + 1))) {\n                if (index + 1 < word.length() && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    if (index - 1 >= 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                        result = word.substring(index, index\
    \ + 1);\n                        break;\n                    }\n             \
    \   }\n            }\n            index--;\n        }\n        return result;",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index > 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                    if (index < word.length() - 1 && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                        result = word.substring(index,\
    \ index + 1);\n                        break;\n                    }\n       \
    \         }\n            }\n            index--;\n        }\n        return result;",
  "        String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index\
    \ > 0 && consonants.indexOf(word.charAt(index - 1)) != -1) {\n               \
    \     return word.substring(index, index + 1);\n                }\n          \
    \  }\n            index--;\n        }\n        return \"\";", "        String\
    \ vowels = \"aeiou\";\n        String result = \"\";\n        int minDistance\
    \ = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length(); i++) {\n  \
    \          char c = word.charAt(i);\n            if (vowels.indexOf(c) != -1)\
    \ {\n                int distance = word.length() - i;\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = \"\" + c;\n                }\n            }\n        }\n   \
    \     return result;", "        String vowels = \"aeiouAEIOU\";\n        int index\
    \ = word.length() - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index > 0 && !vowels.contains(word.substring(index\
    \ - 1, index))) {\n                    return word.substring(index, index + 1);\n\
    \                }\n            }\n            index -= 1;\n        }\n      \
    \  return \"\";", "        String vowels = \"aeiouAEIOU\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String result = \"\
    \";\n        int index = 0;\n        for (int i = word.length() - 1; i >= 0; i--)\
    \ {\n            if (consonants.contains(word.substring(i, i + 1))) {\n      \
    \          index = i;\n                break;\n            }\n        }\n    \
    \    for (int i = index; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                result = word.substring(i, i + 1);\n           \
    \     break;\n            }\n        }\n        return result;", "        String\
    \ vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
    \        String result = \"\";\n        for (int i = word.length() - 1; i >= 0;\
    \ i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n \
    \               for (int j = i + 1; j < word.length(); j++) {\n              \
    \      if (vowels.contains(word.substring(j, j + 1))) {\n                    \
    \    result = word.substring(j, j + 1);\n                        break;\n    \
    \                }\n                }\n                break;\n            }\n\
    \        }\n        return result;", "        String vowels = \"aeiou\";\n   \
    \     String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result =\
    \ \"\";\n        int index = word.length() - 1;\n        while (index >= 0) {\n\
    \            if (vowels.contains(word.substring(index, index + 1))) {\n      \
    \          if (index > 0 && consonants.contains(word.substring(index - 1, index)))\
    \ {\n                    if (index < word.length() - 1 && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                        result = word.substring(index,\
    \ index + 1);\n                        break;\n                    }\n       \
    \         }\n            }\n            index--;\n        }\n        return result;",
  "        String vowels = \"aeiouAEIOU\";\n        String closestVowel = \"\";\n\
    \        int closestVowelIndex = -1;\n        for (int i = word.length() - 1;\
    \ i >= 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1))) {\n\
    \                if (closestVowelIndex == -1) {\n                    closestVowelIndex\
    \ = i;\n                    closestVowel = word.substring(i, i + 1);\n       \
    \         } else {\n                    if (i + 1 < closestVowelIndex) {\n   \
    \                     closestVowelIndex = i;\n                        closestVowel\
    \ = word.substring(i, i + 1);\n                    }\n                }\n    \
    \        }\n        }\n        return closestVowel;", "        // TODO: Implement\
    \ this method\n        return \"\";", '        return "";', "        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;", "        String vowels = \"aeiouAEIOU\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String\
    \ result = \"\";\n        for (int i = word.length() - 1; i >= 0; i--) {\n   \
    \         if (consonants.contains(word.substring(i, i + 1))) {\n             \
    \   for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;", "     \
    \   String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        boolean found = false;\n        for\
    \ (int i = word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                for (int j = i - 1; j >= 0; j--) {\n           \
    \         if (vowels.contains(word.substring(j, j + 1))) {\n                 \
    \       result = word.substring(j, j + 1);\n                        found = true;\n\
    \                        break;\n                    }\n                }\n  \
    \              if (found) {\n                    break;\n                }\n \
    \           }\n        }\n        return result;", "        String vowels = \"\
    aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            index--;\n                    continue;\n                }\n    \
    \            if (index == 0) {\n                    break;\n                }\n\
    \                if (consonants.contains(word.substring(index - 1, index)) &&\
    \ consonants.contains(word.substring(index + 1, index + 2))) {\n             \
    \       result = word.substring(index, index + 1);\n                    break;\n\
    \                }\n            }\n            index--;\n        }\n        return\
    \ result;", "        String vowels = \"aeiou\";\n        String result = \"\"\
    ;\n        int index = -1;\n        for (int i = word.length() - 1; i >= 0; i--)\
    \ {\n            if (vowels.contains(word.substring(i, i + 1))) {\n          \
    \      index = i;\n                break;\n            }\n        }\n        if\
    \ (index == -1) {\n            return result;\n        }\n        for (int i =\
    \ index - 1; i >= 0; i--) {\n            if (!vowels.contains(word.substring(i,\
    \ i + 1))) {\n                result = word.substring(index, index + 1);\n   \
    \             break;\n            }\n        }\n        return result;", '        return
    "";', "        String vowels = \"aeiouAEIOU\";\n        String consonants = \"\
    bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (consonants.contains(word.substring(index,\
    \ index + 1))) {\n                if (index != word.length() - 1 && vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    return word.substring(index + 1, index\
    \ + 2);\n                }\n                index--;\n            } else {\n \
    \               index--;\n            }\n        }\n        return \"\";", " \
    \       String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n     \
    \   for (int i = word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                for (int j = i - 1; j >= 0; j--) {\n           \
    \         if (vowels.contains(word.substring(j, j + 1))) {\n                 \
    \       if (i - j < min) {\n                            min = i - j;\n       \
    \                     result = word.substring(j, j + 1);\n                   \
    \     }\n                    }\n                }\n            }\n        }\n\
    \        return result;", "        String vowels = \"aeiou\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n   \
    \     int index = word.length() - 1;\n        while (index >= 0) {\n         \
    \   String letter = word.substring(index, index + 1);\n            if (vowels.contains(letter))\
    \ {\n                result = letter;\n                break;\n            }\n\
    \            if (consonants.contains(letter)) {\n                break;\n    \
    \        }\n            index--;\n        }\n        return result;", "      \
    \  String vowels = \"aeiou\";\n        int index = word.length() - 1;\n      \
    \  while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            return \"\";\n                }\n                if (index == 0)\
    \ {\n                    return \"\";\n                }\n                if (!vowels.contains(word.substring(index\
    \ - 1, index))) {\n                    if (!vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                        return word.substring(index, index\
    \ + 1);\n                    }\n                }\n            }\n           \
    \ index--;\n        }\n        return \"\";", "        String vowels = \"aeiou\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        int index =\
    \ word.length() - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index + 1 < word.length() && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    if (index - 1 >= 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                        return word.substring(index, index\
    \ + 1);\n                    }\n                }\n            }\n           \
    \ index--;\n        }\n        return \"\";", "        String vowels = \"aeiou\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result\
    \ = \"\";\n        for (int i = word.length() - 1; i >= 0; i--) {\n          \
    \  if (consonants.contains(word.substring(i, i + 1))) {\n                for (int\
    \ j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;", "     \
    \   // TODO: Implement this method\n        return \"\";", "        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int j = i + 1;\n                while (j < word.length()\
    \ && vowels.indexOf(word.charAt(j)) != -1) {\n                    j++;\n     \
    \           }\n                if (j < word.length()) {\n                    if\
    \ (j - i < min) {\n                        min = j - i;\n                    \
    \    result = word.substring(i, i + 1);\n                    }\n             \
    \   }\n            }\n        }\n        return result;", "        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            index--;\n                    continue;\n                }\n    \
    \            if (consonants.contains(word.substring(index + 1, index + 2))) {\n\
    \                    result = word.substring(index, index + 1);\n            \
    \        break;\n                }\n            }\n            index--;\n    \
    \    }\n        return result;", "        // your code here\n        return \"\
    \";", "        String vowels = \"aeiouAEIOU\";\n        String consonants = \"\
    bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.indexOf(word.charAt(index))\
    \ != -1) {\n                if (index + 1 < word.length() && consonants.indexOf(word.charAt(index\
    \ + 1)) != -1) {\n                    if (index - 1 >= 0 && consonants.indexOf(word.charAt(index\
    \ - 1)) != -1) {\n                        return word.substring(index, index +\
    \ 1);\n                    }\n                }\n            }\n            index--;\n\
    \        }\n        return \"\";", "        String vowels = \"aeiou\";\n     \
    \   String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i, i\
    \ + 1))) {\n                for (int j = i - 1; j >= 0; j--) {\n             \
    \       if (vowels.contains(word.substring(j, j + 1))) {\n                   \
    \     return word.substring(j, j + 1);\n                    }\n              \
    \  }\n            }\n        }\n        return \"\";", '        return "";', " \
    \       String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;", "     \
    \   String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = 0;\n                for (int j = i\
    \ + 1; j < word.length(); j++) {\n                    if (consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ != 0 && distance < minDistance) {\n                    minDistance = distance;\n\
    \                    result = word.substring(i, i + 1);\n                }\n \
    \           }\n        }\n        return result;", "        String vowels = \"\
    aeiou\";\n        String[] letters = word.split(\"\");\n        String closestVowel\
    \ = \"\";\n        int closestVowelIndex = -1;\n        for (int i = letters.length\
    \ - 1; i >= 0; i--) {\n            if (vowels.contains(letters[i])) {\n      \
    \          if (closestVowelIndex == -1) {\n                    closestVowelIndex\
    \ = i;\n                    closestVowel = letters[i];\n                } else\
    \ {\n                    if (i < closestVowelIndex) {\n                      \
    \  closestVowelIndex = i;\n                        closestVowel = letters[i];\n\
    \                    }\n                }\n            } else {\n            \
    \    if (closestVowelIndex != -1) {\n                    return closestVowel;\n\
    \                }\n            }\n        }\n        return \"\";", "       \
    \ String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;", "     \
    \   // Write your code here\n        return \"\";", "        String vowels = \"\
    aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;", "     \
    \   String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c)\
    \ != -1) {\n                result = String.valueOf(c);\n                break;\n\
    \            }\n            if (consonants.indexOf(c) != -1) {\n             \
    \   break;\n            }\n        }\n        return result;", "        String\
    \ vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;", '        return
    "";', "        String vowels = \"aeiouAEIOU\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            return \"\";\n                }\n                if (index == 0)\
    \ {\n                    return \"\";\n                }\n                if (!vowels.contains(word.substring(index\
    \ - 1, index))) {\n                    if (!vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                        return word.substring(index, index\
    \ + 1);\n                    }\n                }\n            }\n           \
    \ index--;\n        }\n        return \"\";", "        String vowels = \"aeiouAEIOU\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (consonants.contains(word.substring(index, index + 1))) {\n      \
    \          index--;\n                break;\n            }\n            index--;\n\
    \        }\n        if (index < 0) {\n            return \"\";\n        }\n  \
    \      while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                return word.substring(index, index + 1);\n \
    \           }\n            index--;\n        }\n        return \"\";", "     \
    \   String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = 0;\n        for (int i =\
    \ word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                index = i;\n                break;\n           \
    \ }\n        }\n        if (index == 0) {\n            return result;\n      \
    \  }\n        for (int i = index - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                result = word.substring(index, index + 1);\n   \
    \             break;\n            }\n        }\n        return result;", "   \
    \     String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) >= 0) {\n                if (index\
    \ > 0 && consonants.indexOf(word.charAt(index - 1)) >= 0) {\n                \
    \    return word.substring(index, index + 1);\n                }\n           \
    \ }\n            index--;\n        }\n        return \"\";", "        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String closestVowel = \"\";\n        int closestVowelIndex = 0;\n \
    \       int closestConsonantIndex = 0;\n        for (int i = word.length() - 1;\
    \ i >= 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1))) {\n\
    \                closestVowel = word.substring(i, i + 1);\n                closestVowelIndex\
    \ = i;\n                break;\n            }\n        }\n        for (int i =\
    \ closestVowelIndex - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                closestConsonantIndex = i;\n                break;\n\
    \            }\n        }\n        if (closestConsonantIndex == 0) {\n       \
    \     return \"\";\n        }\n        return closestVowel;", "        String\
    \ vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
    \        String result = \"\";\n        int index = word.length() - 1;\n     \
    \   while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            return \"\";\n                }\n                if (consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    return word.substring(index, index\
    \ + 1);\n                }\n            }\n            index--;\n        }\n \
    \       return result;", "        // Your code here\n        return \"\";", " \
    \       String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index > 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                    if (index < word.length() - 1 && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                        result = word.substring(index,\
    \ index + 1);\n                        break;\n                    }\n       \
    \         }\n            }\n            index--;\n        }\n        return result;",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int index = 0;\n        for (int i =\
    \ word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                index = i;\n                break;\n           \
    \ }\n        }\n        for (int i = index; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                result = word.substring(i, i + 1);\n           \
    \     break;\n            }\n        }\n        return result;", "        // TODO:\
    \ Implement this function\n        return \"\";", "        // Your code here\n\
    \        return \"\";", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        int index\
    \ = word.length() - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index + 1 < word.length() && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    if (index - 1 >= 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                        result = word.substring(index, index\
    \ + 1);\n                        break;\n                    }\n             \
    \   }\n            }\n            index--;\n        }\n        return result;",
  "        String[] vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"};\n        String[]\
    \ consonants = {\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"};\n        String[] wordArray = word.split(\"\");\n        String closestVowel\
    \ = \"\";\n        int vowelIndex = 0;\n        int consonantIndex = 0;\n    \
    \    for (int i = wordArray.length - 1; i > 0; i--) {\n            for (int j\
    \ = 0; j < vowels.length; j++) {\n                if (wordArray[i].equals(vowels[j]))\
    \ {\n                    vowelIndex = i;\n                    break;\n       \
    \         }\n            }\n            for (int j = 0; j < consonants.length;\
    \ j++) {\n                if (wordArray[i].equals(consonants[j])) {\n        \
    \            consonantIndex = i;\n                    break;\n               \
    \ }\n            }\n            if (vowelIndex != 0 && consonantIndex != 0) {\n\
    \                closestVowel = wordArray[vowelIndex];\n                break;\n\
    \            }\n        }\n        return closestVowel;", "        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index -= 1;\n        }\n \
    \       return result;", "        // Write your code here\n        return \"\"\
    ;", "        // TODO: Implement this function\n        return \"\";", "      \
    \  String[] vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"};\n        String[] consonants\
    \ = {\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"};\n\
    \        String[] wordArray = word.split(\"\");\n        String closestVowel =\
    \ \"\";\n        int closestVowelIndex = 0;\n        int closestConsonantIndex\
    \ = 0;\n        for (int i = 0; i < wordArray.length; i++) {\n            for\
    \ (int j = 0; j < vowels.length; j++) {\n                if (wordArray[i].equals(vowels[j]))\
    \ {\n                    for (int k = i; k < wordArray.length; k++) {\n      \
    \                  for (int l = 0; l < consonants.length; l++) {\n           \
    \                 if (wordArray[k].equals(consonants[l])) {\n                \
    \                if (k - i > closestConsonantIndex - closestVowelIndex) {\n  \
    \                                  closestVowel = wordArray[i];\n            \
    \                        closestVowelIndex = i;\n                            \
    \        closestConsonantIndex = k;\n                                }\n     \
    \                       }\n                        }\n                    }\n\
    \                }\n            }\n        }\n        return closestVowel;", " \
    \       // Write your code here\n        return \"\";", "        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int index = -1;\n        for (int i = word.length() - 1; i >= 0; i--)\
    \ {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n               \
    \ index = i;\n                break;\n            }\n        }\n        if (index\
    \ == -1) {\n            return \"\";\n        }\n        for (int i = index -\
    \ 1; i >= 0; i--) {\n            if (consonants.indexOf(word.charAt(i)) != -1)\
    \ {\n                for (int j = index + 1; j < word.length(); j++) {\n     \
    \               if (consonants.indexOf(word.charAt(j)) != -1) {\n            \
    \            return word.substring(index, index + 1);\n                    }\n\
    \                }\n            }\n        }\n        return \"\";", "       \
    \ String vowels = \"aeiou\";\n        String result = \"\";\n        int index\
    \ = word.length() - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;", "        String vowels = \"aeiou\";\n        String result\
    \ = \"\";\n        for (int i = word.length() - 1; i >= 0; i--) {\n          \
    \  if (vowels.contains(word.substring(i, i + 1))) {\n                result =\
    \ word.substring(i, i + 1);\n                break;\n            }\n        }\n\
    \        return result;", "        String vowels = \"aeiouAEIOU\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String\
    \ result = \"\";\n        int index = word.length() - 1;\n        while (index\
    \ >= 0) {\n            if (vowels.contains(word.substring(index, index + 1)))\
    \ {\n                if (index == word.length() - 1) {\n                    index--;\n\
    \                    continue;\n                }\n                if (consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    result = word.substring(index, index\
    \ + 1);\n                    break;\n                }\n            }\n      \
    \      index--;\n        }\n        return result;", "        String vowels =\
    \ \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            index--;\n                    continue;\n                }\n    \
    \            if (consonants.contains(word.substring(index + 1, index + 2))) {\n\
    \                    if (index == 0) {\n                        result = word.substring(index,\
    \ index + 1);\n                        break;\n                    }\n       \
    \             if (consonants.contains(word.substring(index - 1, index))) {\n \
    \                       result = word.substring(index, index + 1);\n         \
    \               break;\n                    }\n                }\n           \
    \ }\n            index--;\n        }\n        return result;", "        // Your\
    \ code here\n        return \"\";", "        // your code here\n        return\
    \ \"\";", "        String vowels = \"aeiou\";\n        String consonants = \"\
    bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index > 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                    if (index < word.length() - 1 && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                        result = word.substring(index,\
    \ index + 1);\n                        break;\n                    }\n       \
    \         }\n            }\n            index--;\n        }\n        return result;",
  "        // Write your code here\n        return \"\";", "        String vowels\
    \ = \"aeiouAEIOU\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        for (int\
    \ i = word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                for (int j = i + 1; j < word.length(); j++) {\n\
    \                    if (vowels.contains(word.substring(j, j + 1))) {\n      \
    \                  result = word.substring(j, j + 1);\n                      \
    \  break;\n                    }\n                }\n                break;\n\
    \            }\n        }\n        return result;", "        // Your code here\n\
    \        return \"\";", "        String vowels = \"aeiou\";\n        String result\
    \ = \"\";\n        int minDistance = Integer.MAX_VALUE;\n        for (int i =\
    \ 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n       \
    \     if (vowels.indexOf(c) != -1) {\n                int distance = word.length()\
    \ - i;\n                if (distance < minDistance) {\n                    result\
    \ = String.valueOf(c);\n                    minDistance = distance;\n        \
    \        }\n            }\n        }\n        return result;", "        String\
    \ vowels = \"aeiouAEIOU\";\n        String result = \"\";\n        int index =\
    \ word.length() - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        int minDistance\
    \ = word.length();\n        for (int i = 0; i < word.length(); i++) {\n      \
    \      char c = word.charAt(i);\n            if (vowels.indexOf(c) != -1) {\n\
    \                int distance = word.length() - i;\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = \"\" + c;\n                }\n            }\n        }\n   \
    \     return result;", "        // Write your code here\n        return \"\";",
  "        String[] vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"};\n        String[]\
    \ consonants = {\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"};\n        String[] wordArray = word.split(\"\");\n        String closestVowel\
    \ = \"\";\n        int vowelIndex = 0;\n        int consonantIndex = 0;\n    \
    \    int closestVowelIndex = 0;\n        int closestConsonantIndex = 0;\n    \
    \    for (int i = wordArray.length - 1; i >= 0; i--) {\n            for (int j\
    \ = 0; j < vowels.length; j++) {\n                if (wordArray[i].equals(vowels[j]))\
    \ {\n                    vowelIndex = i;\n                    closestVowel = wordArray[i];\n\
    \                    break;\n                }\n            }\n            for\
    \ (int k = 0; k < consonants.length; k++) {\n                if (wordArray[i].equals(consonants[k]))\
    \ {\n                    consonantIndex = i;\n                    break;\n   \
    \             }\n            }\n            if (vowelIndex > consonantIndex) {\n\
    \                closestVowelIndex = vowelIndex;\n                closestConsonantIndex\
    \ = consonantIndex;\n                break;\n            }\n        }\n      \
    \  if (closestVowelIndex == 0 && closestConsonantIndex == 0) {\n            return\
    \ \"\";\n        }\n        return closestVowel;", "        // Your code here\n\
    \        // return \"\";\n        String vowels = \"aeiou\";\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = word.length() - 1; i >= 0; i--)\
    \ {\n            if (vowels.contains(word.substring(i, i + 1))) {\n          \
    \      sb.append(word.substring(i, i + 1));\n            } else {\n          \
    \      if (sb.length() > 0) {\n                    break;\n                }\n\
    \            }\n        }\n        return sb.reverse().toString();", "       \
    \ String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;", "     \
    \   String vowels = \"aeiou\";\n        int index = word.length() - 1;\n     \
    \   while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            return \"\";\n                }\n                if (index == 0)\
    \ {\n                    return \"\";\n                }\n                if (!vowels.contains(word.substring(index\
    \ - 1, index))) {\n                    if (!vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                        return word.substring(index, index\
    \ + 1);\n                    }\n                }\n            }\n           \
    \ index--;\n        }\n        return \"\";", "        String vowels = \"aeiou\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result\
    \ = \"\";\n        int index = word.length() - 1;\n        while (index >= 0)\
    \ {\n            if (vowels.contains(word.substring(index, index + 1))) {\n  \
    \              if (index + 1 < word.length() && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    if (index - 1 >= 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                        result = word.substring(index, index\
    \ + 1);\n                        break;\n                    }\n             \
    \   }\n            }\n            index--;\n        }\n        return result;",
  "        // Your code here\n        return \"\";", "        String vowels = \"aeiouAEIOU\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index\
    \ - 1 >= 0 && consonants.indexOf(word.charAt(index - 1)) != -1) {\n          \
    \          if (index + 1 < word.length() && consonants.indexOf(word.charAt(index\
    \ + 1)) != -1) {\n                        return word.substring(index, index +\
    \ 1);\n                    }\n                }\n            }\n            index--;\n\
    \        }\n        return \"\";", "        String vowels = \"aeiou\";\n     \
    \   String result = \"\";\n        int min = Integer.MAX_VALUE;\n        for (int\
    \ i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int j = i + 1;\n                while (j < word.length()\
    \ && vowels.indexOf(word.charAt(j)) != -1) {\n                    j++;\n     \
    \           }\n                if (j < word.length()) {\n                    if\
    \ (j - i < min) {\n                        min = j - i;\n                    \
    \    result = word.substring(i, i + 1);\n                    }\n             \
    \   }\n            }\n        }\n        return result;", "        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = word.length() - i;\n              \
    \  if (distance < minDistance) {\n                    minDistance = distance;\n\
    \                    result = word.substring(i, i + 1);\n                }\n \
    \           }\n        }\n        return result;", "        String vowels = \"\
    aeiou\";\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                if (i + 1 < word.length() && !vowels.contains(word.substring(i\
    \ + 1, i + 2))) {\n                    if (min > i) {\n                      \
    \  min = i;\n                        result = word.substring(i, i + 1);\n    \
    \                }\n                }\n            }\n        }\n        return\
    \ result;", "        String vowels = \"aeiou\";\n        String result = \"\"\
    ;\n        int min = Integer.MAX_VALUE;\n        for (int i = word.length() -\
    \ 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1)))\
    \ {\n                int j = i - 1;\n                while (j >= 0 && !vowels.contains(word.substring(j,\
    \ j + 1))) {\n                    j--;\n                }\n                if\
    \ (j >= 0) {\n                    int k = i + 1;\n                    while (k\
    \ < word.length() && !vowels.contains(word.substring(k, k + 1))) {\n         \
    \               k++;\n                    }\n                    if (k < word.length())\
    \ {\n                        if (k - i < min) {\n                            min\
    \ = k - i;\n                            result = word.substring(i, i + 1);\n \
    \                       }\n                    }\n                }\n        \
    \    }\n        }\n        return result;", "        String vowels = \"aeiou\"\
    ;\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = word.length() - i;\n              \
    \  if (distance < minDistance) {\n                    minDistance = distance;\n\
    \                    result = word.substring(i, i + 1);\n                }\n \
    \           }\n        }\n        return result;", '        return "";', "   \
    \     String vowels = \"aeiouAEIOU\";\n        String[] letters = word.split(\"\
    \");\n        String[] consonants = Arrays.stream(letters).filter(x -> !vowels.contains(x)).toArray(String[]::new);\n\
    \        String[] vowelsArray = Arrays.stream(letters).filter(x -> vowels.contains(x)).toArray(String[]::new);\n\
    \        if (consonants.length < 2) {\n            return \"\";\n        }\n \
    \       String[] reversedConsonants = Arrays.copyOfRange(consonants, 0, consonants.length);\n\
    \        Collections.reverse(Arrays.asList(reversedConsonants));\n        String[]\
    \ reversedVowels = Arrays.copyOfRange(vowelsArray, 0, vowelsArray.length);\n \
    \       Collections.reverse(Arrays.asList(reversedVowels));\n        int index\
    \ = 0;\n        for (int i = 0; i < reversedConsonants.length; i++) {\n      \
    \      if (i == reversedConsonants.length - 1) {\n                return \"\"\
    ;\n            }\n            if (i == 0) {\n                index = Arrays.asList(reversedVowels).indexOf(reversedConsonants[i]);\n\
    \            } else {\n                index = Arrays.asList(reversedVowels).indexOf(reversedConsonants[i],\
    \ index + 1);\n            }\n            if (index == -1) {\n               \
    \ return \"\";\n            }\n        }\n        return reversedVowels[index];",
  "        String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) >= 0) {\n                if (index\
    \ == word.length() - 1) {\n                    return \"\";\n                }\n\
    \                if (consonants.indexOf(word.charAt(index + 1)) >= 0) {\n    \
    \                return word.substring(index, index + 1);\n                }\n\
    \            }\n            index--;\n        }\n        return \"\";"]
stop_tokens:
- "\n    }\n"

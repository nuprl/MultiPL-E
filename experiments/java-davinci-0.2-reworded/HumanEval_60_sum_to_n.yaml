name: HumanEval_60_sum_to_n
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // sum_to_n is a function that sums numbers from 1 to n.\n\
  \    // >>> sumToN((30l))\n    // (465l)\n    // >>> sumToN((100l))\n    // (5050l)\n\
  \    // >>> sumToN((5l))\n    // (15l)\n    // >>> sumToN((10l))\n    // (55l)\n\
  \    // >>> sumToN((1l))\n    // (1l)\n    public static long sumToN(long n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(sumToN((1l))\
  \ == (1l));\n    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n\
  \    assert(sumToN((30l)) == (465l));\n    assert(sumToN((100l)) == (5050l));\n\
  \    }\n\n}\n"
completions: ['        return (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;',
  '        return (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return
    (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return n *
    (n + 1) / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n +
    1)) / 2;', '        return (n * (n + 1)) / 2;', "        long sum = 0;\n     \
    \   for (long i = 1; i <= n; i++) {\n            sum += i;\n        }\n      \
    \  return sum;", '        return (n * (n + 1)) / 2;', '        return (n * (n
    + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n + 1))
    / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;',
  '        return (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return
    (n * (n + 1)) / 2;', "        long sum = 0;\n        for (long i = 1; i <= n;\
    \ i++) {\n            sum += i;\n        }\n        return sum;", '        return
    (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return (n * (n
    + 1)) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) /
    2;', '        return n * (n + 1) / 2;', "        long sum = 0;\n        for (long\
    \ i = 1; i <= n; i++) {\n            sum += i;\n        }\n        return sum;",
  '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return
    (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return (n *
    (n + 1)) / 2;', "        long sum = 0;\n        for (long i = 1; i <= n; i++)\
    \ {\n            sum += i;\n        }\n        return sum;", '        return (n
    * (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return (n * (n +
    1)) / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n + 1))
    / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;',
  '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return
    n * (n + 1) / 2;', '        return (n * (n + 1)) / 2;', '        return ((n *
    (n + 1l)) / 2l);', '        return (n * (n + 1)) / 2;', '        return (n * (n
    + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n + 1))
    / 2;', '        return n * (n + 1) / 2;', '        return (n * (n + 1)) / 2;',
  '        return n * (n + 1) / 2;', '        return (n * (n + 1)) / 2;', '        return
    (long) ((n * (n + 1)) / 2);', '        return n * (n + 1) / 2;', '        return
    (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return n *
    (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return (n * (n + 1))
    / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;',
  '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return
    n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return (n * (n
    + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n + 1))
    / 2;', '        return (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;',
  '        return n * (n + 1) / 2;', '        return (n * (n + 1)) / 2;', '        return
    (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', "        long sum =\
    \ 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n       \
    \ }\n        return sum;", '        return (n * (n + 1)) / 2;', '        return
    (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return (n *
    (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return (n * (n + 1))
    / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;',
  "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum\
    \ += i;\n        }\n        return sum;", '        return (n * (n + 1)) / 2;',
  '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return n * (n
    + 1) / 2;', '        return (n * (n + 1)) / 2;', '        return n * (n + 1) /
    2;', '        return n * (n + 1) / 2;', '        return (n * (n + 1)) / 2;', '        return
    (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return (n *
    (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n +
    1)) / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n + 1))
    / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;',
  '        return (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return
    (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', "        long sum =\
    \ 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n       \
    \ }\n        return sum;", '        return (n * (n + 1)) / 2;', '        return
    (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return n *
    (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return (n * (n + 1))
    / 2;', '        return n * (n + 1) / 2;', '        return (n * (n + 1)) / 2;',
  '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return
    n * (n + 1) / 2;', '        return (n * (n + 1)) / 2;', '        return n * (n
    + 1) / 2;', '        return (n * (n + 1)) / 2;', '        return n * (n + 1) /
    2;', '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;',
  '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return
    n * (n + 1) / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n
    + 1)) / 2;', '        return n * (n + 1) / 2;', '        return (n * (n + 1))
    / 2;', '        return (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;',
  '        return (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return
    (n * (n + 1)) / 2;', '        return ((n * (n + 1)) / 2);', '        return (n
    * (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return n * (n +
    1) / 2;', '        return (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;',
  '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return
    (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return (n *
    (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n +
    1)) / 2;', '        return (n * (n + 1)) / 2;', '        return n * (n + 1) /
    2;', '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;',
  '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return
    n * (n + 1) / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n
    + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n + 1))
    / 2;', '        return n * (n + 1) / 2;', '        return (n * (n + 1)) / 2;',
  '        return (n * (n + 1)) / 2;', "        long sum = 0;\n        for (long i\
    \ = 1; i <= n; i++) {\n            sum += i;\n        }\n        return sum;",
  '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return
    (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return (n *
    (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n +
    1)) / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n + 1))
    / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) / 2;', '        return
    (n * (n + 1)) / 2;', '        return n * (n + 1) / 2;', '        return (n * (n
    + 1)) / 2;', '        return n * (n + 1) / 2;', '        return n * (n + 1) /
    2;', "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n       \
    \     sum += i;\n        }\n        return sum;", '        return n * (n + 1)
    / 2;', '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;',
  '        return (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return
    (n * (n + 1)) / 2;', '        return (n * (n + 1)) / 2;', '        return n *
    (n + 1) / 2;', '        return (n * (n + 1)) / 2;']
stop_tokens:
- "\n    }\n"

name: HumanEval_11_string_xor
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Input are two strings a and b consisting only of 1s and\
  \ 0s.\n    // Perform binary XOR on these inputs and return result also as a string.\n\
  \    // >>> stringXor((\"010\"), (\"110\"))\n    // (\"100\")\n    public static\
  \ String stringXor(String a, String b) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(stringXor((\"\
  111000\"), (\"101010\")).equals((\"010010\")));\n    assert(stringXor((\"1\"), (\"\
  1\")).equals((\"0\")));\n    assert(stringXor((\"0101\"), (\"0000\")).equals((\"\
  0101\")));\n    }\n\n}\n"
completions: ["        StringBuilder sb = new StringBuilder();\n        for (int i\
    \ = 0; i < a.length(); i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n\
    \                sb.append(\"0\");\n            } else {\n                sb.append(\"\
    1\");\n            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n \
    \       return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? \"0\" : \"1\");\n        }\n        return sb.toString();",
  "        // Your code here.\n        return null;", "        // Your code here\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n    \
    \    }\n        return sb.toString();", "        // TODO: Implement this function\n\
    \        return \"\";", "        StringBuilder sb = new StringBuilder();\n   \
    \     for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) == b.charAt(i))\
    \ {\n                sb.append(\"0\");\n            } else {\n               \
    \ sb.append(\"1\");\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"\
    0\");\n            } else {\n                sb.append(\"1\");\n            }\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"\
    0\");\n            } else {\n                sb.append(\"1\");\n            }\n\
    \        }\n        return sb.toString();", "        // Fill in code here\n  \
    \      StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"\
    0\");\n            } else {\n                sb.append(\"1\");\n            }\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();", " \
    \       String result = \"\";\n        for (int i = 0; i < a.length(); i++) {\n\
    \            if (a.charAt(i) == b.charAt(i)) {\n                result += \"0\"\
    ;\n            } else {\n                result += \"1\";\n            }\n   \
    \     }\n        return result;", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? \"0\" : \"1\");\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? \"0\" : \"1\");\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                sb.append(\"0\");\n            } else {\n  \
    \              sb.append(\"1\");\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"\
    0\");\n            } else {\n                sb.append(\"1\");\n            }\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? \"0\" : \"1\");\n        }\n        return sb.toString();"]
stop_tokens:
- "\n    }\n"

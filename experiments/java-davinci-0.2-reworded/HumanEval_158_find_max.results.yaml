language: java
name: HumanEval_158_find_max
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(Problem::uniqueChars)).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppo5uvn42.java:20: error: invalid method reference\n        return\
    \ words.stream().max(Comparator.comparing(Problem::uniqueChars)).get();\n    \
    \                                                   ^\n  cannot find symbol\n\
    \    symbol:   method uniqueChars()\n    location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        int max = 0;\n   \
    \     String maxWord = \"\";\n        for (String word : words) {\n          \
    \  int unique = 0;\n            for (int i = 0; i < word.length(); i++) {\n  \
    \              if (word.indexOf(word.charAt(i)) == i) {\n                    unique++;\n\
    \                }\n            }\n            if (unique > max) {\n         \
    \       max = unique;\n                maxWord = word;\n            }\n      \
    \  }\n        return maxWord;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1nmqsl5.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = words.get(0);\n\
    \        for (String word : words) {\n            if (word.length() > max.length())\
    \ {\n                max = word;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph7ih0gp9.java:30)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return null;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp5htq0c7r.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int maxCount = 0;\n        for (String word : words) {\n          \
    \  int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n   \
    \             if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > maxCount) {\n     \
    \           maxCount = count;\n                max = word;\n            }\n  \
    \      }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpair_bjr3.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here.\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcz5yw7yq.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int max_count = 0;\n        for (String word : words) {\n         \
    \   int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n  \
    \              if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max_count) {\n    \
    \            max = word;\n                max_count = count;\n            }\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp578lakwi.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int max_count = 0;\n        for (String word : words) {\n         \
    \   Set<Character> set = new HashSet<Character>();\n            for (char c :\
    \ word.toCharArray()) {\n                set.add(c);\n            }\n        \
    \    if (set.size() > max_count) {\n                max = word;\n            \
    \    max_count = set.size();\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpydjjr5.java:36)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(Problem::countUniqueChars)).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvb5pst5y.java:20: error: invalid method reference\n        return\
    \ words.stream().max(Comparator.comparing(Problem::countUniqueChars)).get();\n\
    \                                                       ^\n  cannot find symbol\n\
    \    symbol:   method countUniqueChars()\n    location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparingInt(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkb89asfr.java:20: error: incompatible types: cannot infer type-variable(s)\
    \ T\n        return words.stream().max(Comparator.comparingInt(s -> s.chars().distinct().count())).get();\n\
    \                                                         ^\n    (argument mismatch;\
    \ bad return type in lambda expression\n      possible lossy conversion from long\
    \ to int)\n  where T is a type-variable:\n    T extends Object declared in method\
    \ <T>comparingInt(ToIntFunction<? super T>)\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String maxWord = \"\
    \";\n        int maxUnique = 0;\n        for (String word : words) {\n       \
    \     int unique = 0;\n            for (int i = 0; i < word.length(); i++) {\n\
    \                if (word.indexOf(word.charAt(i)) == i) {\n                  \
    \  unique++;\n                }\n            }\n            if (unique > maxUnique)\
    \ {\n                maxUnique = unique;\n                maxWord = word;\n  \
    \          }\n        }\n        return maxWord;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm3acuci7.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int max_len = 0;\n        for (String word : words) {\n           \
    \ int len = word.length();\n            Set<Character> set = new HashSet<Character>();\n\
    \            for (int i = 0; i < len; i++) {\n                set.add(word.charAt(i));\n\
    \            }\n            if (set.size() > max_len) {\n                max_len\
    \ = set.size();\n                max = word;\n            }\n        }\n     \
    \   return max;\n    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpid5cbx_5.java:37)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int maxCount = 0;\n        for (String word : words) {\n          \
    \  int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n   \
    \             if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > maxCount) {\n     \
    \           maxCount = count;\n                max = word;\n            }\n  \
    \      }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpair_bjr3.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(Problem::uniqueChars)).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppo5uvn42.java:20: error: invalid method reference\n        return\
    \ words.stream().max(Comparator.comparing(Problem::uniqueChars)).get();\n    \
    \                                                   ^\n  cannot find symbol\n\
    \    symbol:   method uniqueChars()\n    location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Your code here\n\
    \        return \"\";\n    }\n    public static void main(String[] args) {\n \
    \   assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozq421bx.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        int max = 0;\n   \
    \     String maxWord = \"\";\n        for (String word : words) {\n          \
    \  int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n   \
    \             if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max) {\n          \
    \      max = count;\n                maxWord = word;\n            }\n        }\n\
    \        return maxWord;\n    }\n    public static void main(String[] args) {\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptidqhwkq.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here.\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcz5yw7yq.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Your code here\n\
    \        return \"\";\n    }\n    public static void main(String[] args) {\n \
    \   assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozq421bx.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // YOUR CODE HERE\n\
    \        return \"\";\n    }\n    public static void main(String[] args) {\n \
    \   assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgc_eey0a.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int maxUnique = 0;\n        for (String word : words) {\n         \
    \   int unique = 0;\n            for (char c : word.toCharArray()) {\n       \
    \         if (word.indexOf(c) == word.lastIndexOf(c)) {\n                    unique++;\n\
    \                }\n            }\n            if (unique > maxUnique) {\n   \
    \             maxUnique = unique;\n                max = word;\n            }\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3nwg5_b6.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(Problem::numUniqueChars)).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyzxwk_eo.java:20: error: invalid method reference\n        return\
    \ words.stream().max(Comparator.comparing(Problem::numUniqueChars)).get();\n \
    \                                                      ^\n  cannot find symbol\n\
    \    symbol:   method numUniqueChars()\n    location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(Problem::numUniqueChars)).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyzxwk_eo.java:20: error: invalid method reference\n        return\
    \ words.stream().max(Comparator.comparing(Problem::numUniqueChars)).get();\n \
    \                                                      ^\n  cannot find symbol\n\
    \    symbol:   method numUniqueChars()\n    location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        int max = 0;\n   \
    \     String maxWord = \"\";\n        for (String word : words) {\n          \
    \  int unique = 0;\n            for (int i = 0; i < word.length(); i++) {\n  \
    \              if (word.indexOf(word.charAt(i)) == i) {\n                    unique++;\n\
    \                }\n            }\n            if (unique > max) {\n         \
    \       max = unique;\n                maxWord = word;\n            }\n      \
    \  }\n        return maxWord;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1nmqsl5.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Your code here\n\
    \        return \"\";\n    }\n    public static void main(String[] args) {\n \
    \   assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozq421bx.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = words.get(0);\n\
    \        for (String word : words) {\n            if (word.length() > max.length())\
    \ {\n                max = word;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph7ih0gp9.java:30)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        throw new RuntimeException(\"\
    Not implemented\");\n    }\n    public static void main(String[] args) {\n   \
    \ assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented\n\
    \tat Problem.findMax(tmpnq13u61w.java:20)\n\tat Problem.main(tmpnq13u61w.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int max_unique = 0;\n        for (String word : words) {\n        \
    \    int unique = 0;\n            for (int i = 0; i < word.length(); i++) {\n\
    \                if (word.indexOf(word.charAt(i)) == i) {\n                  \
    \  unique++;\n                }\n            }\n            if (unique > max_unique)\
    \ {\n                max = word;\n                max_unique = unique;\n     \
    \       }\n        }\n        return max;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpluq0f1w9.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        int max = 0;\n   \
    \     String maxString = \"\";\n        for (String word : words) {\n        \
    \    int len = word.length();\n            if (len > max) {\n                max\
    \ = len;\n                maxString = word;\n            }\n        }\n      \
    \  return maxString;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8_et3bk5.java:33)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int maxCount = 0;\n        for (String word : words) {\n          \
    \  int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n   \
    \             if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > maxCount) {\n     \
    \           maxCount = count;\n                max = word;\n            }\n  \
    \      }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpair_bjr3.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        int max = 0;\n   \
    \     String result = \"\";\n        for (String word : words) {\n           \
    \ int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n    \
    \            if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max) {\n          \
    \      max = count;\n                result = word;\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvzz_le_9.java:38)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        int max = 0;\n   \
    \     String maxWord = \"\";\n        for (String word : words) {\n          \
    \  int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n   \
    \             if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max) {\n          \
    \      max = count;\n                maxWord = word;\n            }\n        }\n\
    \        return maxWord;\n    }\n    public static void main(String[] args) {\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptidqhwkq.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here.\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcz5yw7yq.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = words.get(0);\n\
    \        for (String word : words) {\n            if (word.length() > max.length())\
    \ {\n                max = word;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph7ih0gp9.java:30)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here.\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcz5yw7yq.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = words.get(0);\n\
    \        for (String word : words) {\n            if (word.length() > max.length())\
    \ {\n                max = word;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph7ih0gp9.java:30)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(new\
    \ Comparator<String>() {\n            public int compare(String a, String b) {\n\
    \                int a_count = (int)a.chars().distinct().count();\n          \
    \      int b_count = (int)b.chars().distinct().count();\n                if (a_count\
    \ == b_count) {\n                    return a.compareTo(b);\n                }\n\
    \                return b_count - a_count;\n            }\n        }).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4kbcbzm_.java:32)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        int max = 0;\n   \
    \     String maxWord = \"\";\n        for (String word : words) {\n          \
    \  if (word.length() > max) {\n                max = word.length();\n        \
    \        maxWord = word;\n            }\n        }\n        return maxWord;\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkcxapjfh.java:32)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int max_count = 0;\n        for (String word : words) {\n         \
    \   int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n  \
    \              if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max_count) {\n    \
    \            max = word;\n                max_count = count;\n            }\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp578lakwi.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int max_count = 0;\n        for (String word : words) {\n         \
    \   int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n  \
    \              if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max_count) {\n    \
    \            max = word;\n                max_count = count;\n            }\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp578lakwi.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int max_count = 0;\n        for (String word : words) {\n         \
    \   int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n  \
    \              if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max_count) {\n    \
    \            max = word;\n                max_count = count;\n            }\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp578lakwi.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        int max = 0;\n   \
    \     String maxWord = \"\";\n        for (String word : words) {\n          \
    \  int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n   \
    \             if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max) {\n          \
    \      max = count;\n                maxWord = word;\n            }\n        }\n\
    \        return maxWord;\n    }\n    public static void main(String[] args) {\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptidqhwkq.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(Problem::countUniqueChars)).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvb5pst5y.java:20: error: invalid method reference\n        return\
    \ words.stream().max(Comparator.comparing(Problem::countUniqueChars)).get();\n\
    \                                                       ^\n  cannot find symbol\n\
    \    symbol:   method countUniqueChars()\n    location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = words.get(0);\n\
    \        for (String word : words) {\n            if (word.length() > max.length())\
    \ {\n                max = word;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph7ih0gp9.java:30)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // your code here\n\
    \        return \"\";\n    }\n    public static void main(String[] args) {\n \
    \   assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpllirq948.java:24)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(Problem::uniqueChars)).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppo5uvn42.java:20: error: invalid method reference\n        return\
    \ words.stream().max(Comparator.comparing(Problem::uniqueChars)).get();\n    \
    \                                                   ^\n  cannot find symbol\n\
    \    symbol:   method uniqueChars()\n    location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int max_unique = 0;\n        for (String word : words) {\n        \
    \    int unique = 0;\n            for (int i = 0; i < word.length(); i++) {\n\
    \                if (word.indexOf(word.charAt(i)) == i) {\n                  \
    \  unique++;\n                }\n            }\n            if (unique > max_unique)\
    \ {\n                max = word;\n                max_unique = unique;\n     \
    \       }\n        }\n        return max;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpluq0f1w9.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int maxCount = 0;\n        for (String word : words) {\n          \
    \  int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n   \
    \             if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > maxCount) {\n     \
    \           maxCount = count;\n                max = word;\n            }\n  \
    \      }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpair_bjr3.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        int max = 0;\n   \
    \     String maxWord = \"\";\n        for (String word : words) {\n          \
    \  int unique = 0;\n            for (int i = 0; i < word.length(); i++) {\n  \
    \              if (word.indexOf(word.charAt(i)) == i) {\n                    unique++;\n\
    \                }\n            }\n            if (unique > max) {\n         \
    \       max = unique;\n                maxWord = word;\n            }\n      \
    \  }\n        return maxWord;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1nmqsl5.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        throw new UnsupportedOperationException(\"\
    Not implemented\");\n    }\n    public static void main(String[] args) {\n   \
    \ assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented\n\tat Problem.findMax(tmp38j85fw5.java:20)\n\tat Problem.main(tmp38j85fw5.java:23)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = words.get(0);\n\
    \        for (String word : words) {\n            if (word.length() > max.length())\
    \ {\n                max = word;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph7ih0gp9.java:30)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int maxCount = 0;\n        for (String word : words) {\n          \
    \  int count = 0;\n            for (char c : word.toCharArray()) {\n         \
    \       if (word.indexOf(c) == word.lastIndexOf(c)) {\n                    count++;\n\
    \                }\n            }\n            if (count > maxCount) {\n     \
    \           maxCount = count;\n                max = word;\n            }\n  \
    \      }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp00de3o27.java:38)\n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int max_count = 0;\n        for (String word : words) {\n         \
    \   int count = 0;\n            for (char c : word.toCharArray()) {\n        \
    \        if (word.indexOf(c) == word.lastIndexOf(c)) {\n                    count++;\n\
    \                }\n            }\n            if (count > max_count) {\n    \
    \            max = word;\n                max_count = count;\n            }\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoept305v.java:38)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int max_len = 0;\n        for (String word : words) {\n           \
    \ int len = word.length();\n            if (len > max_len) {\n               \
    \ max = word;\n                max_len = len;\n            }\n        }\n    \
    \    return max;\n    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcd6g29sj.java:33)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = words.get(0);\n\
    \        for (String word : words) {\n            if (word.length() > max.length())\
    \ {\n                max = word;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph7ih0gp9.java:30)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Your code here\n\
    \        return \"\";\n    }\n    public static void main(String[] args) {\n \
    \   assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozq421bx.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmyuc0y2x.java:24)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        int max = 0;\n   \
    \     String maxWord = \"\";\n        for (String word : words) {\n          \
    \  int unique = 0;\n            for (int i = 0; i < word.length(); i++) {\n  \
    \              if (word.indexOf(word.charAt(i)) == i) {\n                    unique++;\n\
    \                }\n            }\n            if (unique > max) {\n         \
    \       max = unique;\n                maxWord = word;\n            }\n      \
    \  }\n        return maxWord;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1nmqsl5.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int max_count = 0;\n        for (String word : words) {\n         \
    \   int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n  \
    \              if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max_count) {\n    \
    \            max = word;\n                max_count = count;\n            }\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp578lakwi.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        int max = 0;\n   \
    \     String maxWord = \"\";\n        for (String word : words) {\n          \
    \  int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n   \
    \             if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max) {\n          \
    \      max = count;\n                maxWord = word;\n            }\n        }\n\
    \        return maxWord;\n    }\n    public static void main(String[] args) {\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptidqhwkq.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Your code here.\n\
    \        return \"\";\n    }\n    public static void main(String[] args) {\n \
    \   assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkklazeli.java:24)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = words.get(0);\n\
    \        int maxUnique = 0;\n        for (String word : words) {\n           \
    \ int unique = 0;\n            for (int i = 0; i < word.length(); i++) {\n   \
    \             if (word.indexOf(word.charAt(i)) == i) {\n                    unique++;\n\
    \                }\n            }\n            if (unique > maxUnique) {\n   \
    \             maxUnique = unique;\n                max = word;\n            }\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppyr1yet9.java:38)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparingInt(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkb89asfr.java:20: error: incompatible types: cannot infer type-variable(s)\
    \ T\n        return words.stream().max(Comparator.comparingInt(s -> s.chars().distinct().count())).get();\n\
    \                                                         ^\n    (argument mismatch;\
    \ bad return type in lambda expression\n      possible lossy conversion from long\
    \ to int)\n  where T is a type-variable:\n    T extends Object declared in method\
    \ <T>comparingInt(ToIntFunction<? super T>)\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // your code here\n\
    \        return \"\";\n    }\n    public static void main(String[] args) {\n \
    \   assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpllirq948.java:24)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String maxWord = \"\
    \";\n        int maxUnique = 0;\n        for (String word : words) {\n       \
    \     int unique = 0;\n            for (int i = 0; i < word.length(); i++) {\n\
    \                if (word.indexOf(word.charAt(i)) == i) {\n                  \
    \  unique++;\n                }\n            }\n            if (unique > maxUnique)\
    \ {\n                maxUnique = unique;\n                maxWord = word;\n  \
    \          }\n        }\n        return maxWord;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm3acuci7.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Your code here\n\
    \        return \"\";\n    }\n    public static void main(String[] args) {\n \
    \   assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozq421bx.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        for (String word : words) {\n            if (word.length() > max.length())\
    \ {\n                max = word;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm08os5j6.java:30)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparingInt(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkb89asfr.java:20: error: incompatible types: cannot infer type-variable(s)\
    \ T\n        return words.stream().max(Comparator.comparingInt(s -> s.chars().distinct().count())).get();\n\
    \                                                         ^\n    (argument mismatch;\
    \ bad return type in lambda expression\n      possible lossy conversion from long\
    \ to int)\n  where T is a type-variable:\n    T extends Object declared in method\
    \ <T>comparingInt(ToIntFunction<? super T>)\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int max_count = 0;\n        for (String word : words) {\n         \
    \   int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n  \
    \              if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max_count) {\n    \
    \            max = word;\n                max_count = count;\n            }\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp578lakwi.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        int max = 0;\n   \
    \     String maxWord = \"\";\n        for (String word : words) {\n          \
    \  int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n   \
    \             if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max) {\n          \
    \      max = count;\n                maxWord = word;\n            }\n        }\n\
    \        return maxWord;\n    }\n    public static void main(String[] args) {\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptidqhwkq.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparingInt(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkb89asfr.java:20: error: incompatible types: cannot infer type-variable(s)\
    \ T\n        return words.stream().max(Comparator.comparingInt(s -> s.chars().distinct().count())).get();\n\
    \                                                         ^\n    (argument mismatch;\
    \ bad return type in lambda expression\n      possible lossy conversion from long\
    \ to int)\n  where T is a type-variable:\n    T extends Object declared in method\
    \ <T>comparingInt(ToIntFunction<? super T>)\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = words.get(0);\n\
    \        int max_count = 0;\n        for (String word : words) {\n           \
    \ int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n    \
    \            if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max_count) {\n    \
    \            max = word;\n                max_count = count;\n            }\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph_tg47py.java:38)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(Problem::uniqueChars)).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppo5uvn42.java:20: error: invalid method reference\n        return\
    \ words.stream().max(Comparator.comparing(Problem::uniqueChars)).get();\n    \
    \                                                   ^\n  cannot find symbol\n\
    \    symbol:   method uniqueChars()\n    location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Your code here\n\
    \        return \"\";\n    }\n    public static void main(String[] args) {\n \
    \   assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozq421bx.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return null;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp5htq0c7r.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return null;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp5htq0c7r.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppezbxyyf.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Your code here\n\
    \        return \"\";\n    }\n    public static void main(String[] args) {\n \
    \   assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozq421bx.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        if (words.size() ==\
    \ 0) {\n            return \"\";\n        }\n        String max = words.get(0);\n\
    \        for (int i = 1; i < words.size(); i++) {\n            String word = words.get(i);\n\
    \            if (word.length() > max.length()) {\n                max = word;\n\
    \            } else if (word.length() == max.length()) {\n                if (word.compareTo(max)\
    \ < 0) {\n                    max = word;\n                }\n            }\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2z9i12jj.java:44)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        int max = 0;\n   \
    \     String maxString = \"\";\n        for (String word : words) {\n        \
    \    int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n \
    \               if (word.indexOf(word.charAt(i)) == i) {\n                   \
    \ count++;\n                }\n            }\n            if (count > max) {\n\
    \                max = count;\n                maxString = word;\n           \
    \ }\n        }\n        return maxString;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt83yblwo.java:38)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        int max = 0;\n   \
    \     String maxWord = \"\";\n        for (String word : words) {\n          \
    \  int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n   \
    \             if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max) {\n          \
    \      max = count;\n                maxWord = word;\n            }\n        }\n\
    \        return maxWord;\n    }\n    public static void main(String[] args) {\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptidqhwkq.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparingInt(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkb89asfr.java:20: error: incompatible types: cannot infer type-variable(s)\
    \ T\n        return words.stream().max(Comparator.comparingInt(s -> s.chars().distinct().count())).get();\n\
    \                                                         ^\n    (argument mismatch;\
    \ bad return type in lambda expression\n      possible lossy conversion from long\
    \ to int)\n  where T is a type-variable:\n    T extends Object declared in method\
    \ <T>comparingInt(ToIntFunction<? super T>)\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = words.get(0);\n\
    \        for (String word : words) {\n            if (word.length() > max.length())\
    \ {\n                max = word;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph7ih0gp9.java:30)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // >>> YOUR CODE HERE\
    \ <<<\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw116g8z7.java:24)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        int max = 0;\n   \
    \     String maxWord = \"\";\n        for (String word : words) {\n          \
    \  int unique = 0;\n            for (int i = 0; i < word.length(); i++) {\n  \
    \              if (word.indexOf(word.charAt(i)) == i) {\n                    unique++;\n\
    \                }\n            }\n            if (unique > max) {\n         \
    \       max = unique;\n                maxWord = word;\n            }\n      \
    \  }\n        return maxWord;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1nmqsl5.java:38)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here.\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcz5yw7yq.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        for (String word : words) {\n            if (word.length() > max.length())\
    \ {\n                max = word;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm08os5j6.java:30)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        int max = 0;\n   \
    \     String maxString = \"\";\n        for (String word : words) {\n        \
    \    int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n \
    \               if (word.indexOf(word.charAt(i)) == i) {\n                   \
    \ count++;\n                }\n            }\n            if (count > max) {\n\
    \                max = count;\n                maxString = word;\n           \
    \ }\n        }\n        return maxString;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt83yblwo.java:38)\n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8e204sw.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvhz26fql.java:23)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        // Write your code\
    \ here\n        return null;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp5htq0c7r.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        return words.stream().max(Comparator.comparing(s\
    \ -> s.chars().distinct().count())).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx0jwb6z.java:24)\n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts an array array list of strings.\n\
    \    // The array list contains different words. Return the word with maximum\
    \ number\n    // of unique characters. If multiple strings have maximum number\
    \ of unique\n    // characters, return the one which comes first in lexicographical\
    \ order.\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\"))))\n    // (\"enam\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public\
    \ static String findMax(ArrayList<String> words) {\n        String max = \"\"\
    ;\n        int maxCount = 0;\n        for (String word : words) {\n          \
    \  int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n   \
    \             if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > maxCount) {\n     \
    \           maxCount = count;\n                max = word;\n            }\n  \
    \      }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpair_bjr3.java:38)\n"
  stdout: ''
  timestamp: 1659798276

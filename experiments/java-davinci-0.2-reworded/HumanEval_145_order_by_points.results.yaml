language: java
name: HumanEval_145_order_by_points
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (Long num : nums)\
    \ {\n            pairs.add(new Pair<Long, Long>(num, sumOfDigits(num)));\n   \
    \     }\n        Collections.sort(pairs, new Comparator<Pair<Long, Long>>() {\n\
    \            @Override\n            public int compare(Pair<Long, Long> p1, Pair<Long,\
    \ Long> p2) {\n                if (p1.getValue1().equals(p2.getValue1())) {\n\
    \                    return p1.getValue0().compareTo(p2.getValue0());\n      \
    \          }\n                return p1.getValue1().compareTo(p2.getValue1());\n\
    \            }\n        });\n        for (Pair<Long, Long> pair : pairs) {\n \
    \           result.add(pair.getValue0());\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp29gr4218.java:22: error: cannot find symbol\n            pairs.add(new\
    \ Pair<Long, Long>(num, sumOfDigits(num)));\n                                \
    \                ^\n  symbol:   method sumOfDigits(Long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659797612
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            Long num = nums.get(i);\n            Long\
    \ sum = 0l;\n            while (num != 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            pairs.add(new Pair<Long,\
    \ Long>(sum, (long)i));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> p1, Pair<Long, Long> p2) {\n                if (p1.getValue0().equals(p2.getValue0()))\
    \ {\n                    return p1.getValue1().compareTo(p2.getValue1());\n  \
    \              }\n                return p1.getValue0().compareTo(p2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(nums.get(pairs.get(i).getValue1().intValue()));\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpe6fd0bbs.java:28)\n\tat Problem.main(tmpe6fd0bbs.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Your code here\n        return nums;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6erhguw0.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        for (Long num :\
    \ nums) {\n            result.add(num);\n        }\n        Collections.sort(result,\
    \ new Comparator<Long>() {\n            public int compare(Long a, Long b) {\n\
    \                long sumA = 0;\n                long sumB = 0;\n            \
    \    while (a != 0) {\n                    sumA += a % 10;\n                 \
    \   a /= 10;\n                }\n                while (b != 0) {\n          \
    \          sumB += b % 10;\n                    b /= 10;\n                }\n\
    \                if (sumA < sumB) {\n                    return -1;\n        \
    \        } else if (sumA > sumB) {\n                    return 1;\n          \
    \      } else {\n                    return 0;\n                }\n          \
    \  }\n        });\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkuy20wy9.java:47)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            pairs.add(new Pair<Long, Long>(nums.get(i),\
    \ sumDigits(nums.get(i))));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> o1, Pair<Long, Long> o2) {\n                if (o1.getValue1().equals(o2.getValue1()))\
    \ {\n                    return o1.getValue0().compareTo(o2.getValue0());\n  \
    \              }\n                return o1.getValue1().compareTo(o2.getValue1());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue0());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplu3miuks.java:22: error: cannot find symbol\n            pairs.add(new\
    \ Pair<Long, Long>(nums.get(i), sumDigits(nums.get(i))));\n                  \
    \                                      ^\n  symbol:   method sumDigits(Long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> p1, Pair<Long, Long> p2) {\n                if (p1.getValue0().equals(p2.getValue0()))\
    \ {\n                    return p1.getValue1().compareTo(p2.getValue1());\n  \
    \              }\n                return p1.getValue0().compareTo(p2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpwd_0ln9w.java:28)\n\tat Problem.main(tmpwd_0ln9w.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // TODO: implement this function\n        return null;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpcviibq5q.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long n = nums.get(i);\n\
    \            while (n != 0) {\n                sum += n % 10;\n              \
    \  n /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum, (long)i));\n\
    \        }\n        Collections.sort(pairs, new Comparator<Pair<Long, Long>>()\
    \ {\n            @Override\n            public int compare(Pair<Long, Long> o1,\
    \ Pair<Long, Long> o2) {\n                if (o1.getValue0().equals(o2.getValue0()))\
    \ {\n                    return o1.getValue1().compareTo(o2.getValue1());\n  \
    \              }\n                return o1.getValue0().compareTo(o2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(nums.get(pairs.get(i).getValue1().intValue()));\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmp0z5fqqq0.java:28)\n\tat Problem.main(tmp0z5fqqq0.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> o1, Pair<Long, Long> o2) {\n                if (o1.getValue0().equals(o2.getValue0()))\
    \ {\n                    return o1.getValue1().compareTo(o2.getValue1());\n  \
    \              }\n                return o1.getValue0().compareTo(o2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpwvm7m776.java:28)\n\tat Problem.main(tmpwvm7m776.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> o1, Pair<Long, Long> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmphihcf_a1.java:28)\n\tat Problem.main(tmphihcf_a1.java:42)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            long sum = 0;\n            long num = nums.get(i);\n        \
    \    while (num != 0) {\n                sum += num % 10;\n                num\
    \ /= 10;\n            }\n            temp.add(sum);\n        }\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            long min = Long.MAX_VALUE;\n   \
    \         int index = 0;\n            for (int j = 0; j < temp.size(); j++) {\n\
    \                if (temp.get(j) < min) {\n                    min = temp.get(j);\n\
    \                    index = j;\n                }\n            }\n          \
    \  result.add(nums.get(index));\n            temp.set(index, Long.MAX_VALUE);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphxih96zn.java:45)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> p1, Pair<Long, Long> p2) {\n                if (p1.getValue0().equals(p2.getValue0()))\
    \ {\n                    return p1.getValue1().compareTo(p2.getValue1());\n  \
    \              }\n                return p1.getValue0().compareTo(p2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpwd_0ln9w.java:28)\n\tat Problem.main(tmpwd_0ln9w.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> o1, Pair<Long, Long> o2) {\n                if (o1.getValue0().equals(o2.getValue0()))\
    \ {\n                    return o1.getValue1().compareTo(o2.getValue1());\n  \
    \              }\n                return o1.getValue0().compareTo(o2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpwvm7m776.java:28)\n\tat Problem.main(tmpwvm7m776.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp = new ArrayList<Long>();\n        ArrayList<Long> temp2 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp3 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp4 = new ArrayList<Long>();\n        ArrayList<Long> temp5 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp6 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp7 = new ArrayList<Long>();\n        ArrayList<Long> temp8 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp9 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp10 = new ArrayList<Long>();\n        ArrayList<Long> temp11 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp12 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp13 = new ArrayList<Long>();\n        ArrayList<Long> temp14 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp15 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp16 = new ArrayList<Long>();\n        ArrayList<Long> temp17 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp18 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp19 = new ArrayList<Long>();\n        ArrayList<Long> temp20 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp21 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp22 = new ArrayList<Long>();\n        ArrayList<Long> temp23 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp24 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp25 = new ArrayList<Long>();\n        ArrayList<Long> temp26 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp27 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp28 = new ArrayList<Long>();\n        ArrayList<Long> temp29 = new ArrayList<Long>();\n\
    \        ArrayList\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw4mdoz4g.java:49: error: not a statement\n        ArrayList\n \
    \       ^\n/tmp/tmpw4mdoz4g.java:49: error: ';' expected\n        ArrayList\n\
    \                 ^\n2 errors\n"
  stdout: ''
  timestamp: 1659797611
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ (long)i));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> o1, Pair<Long, Long> o2) {\n                if (o1.getValue0().equals(o2.getValue0()))\
    \ {\n                    return o1.getValue1().compareTo(o2.getValue1());\n  \
    \              }\n                return o1.getValue0().compareTo(o2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(nums.get(pairs.get(i).getValue1().intValue()));\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpi_hdsz6y.java:28)\n\tat Problem.main(tmpi_hdsz6y.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            Long num = nums.get(i);\n            Long\
    \ sum = 0l;\n            while (num != 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            pairs.add(new Pair<Long,\
    \ Long>(sum, (long)i));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> a, Pair<Long, Long> b) {\n                if (a.getValue0().equals(b.getValue0()))\
    \ {\n                    return a.getValue1().compareTo(b.getValue1());\n    \
    \            }\n                return a.getValue0().compareTo(b.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(nums.get(pairs.get(i).getValue1().intValue()));\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpcmufpvw2.java:28)\n\tat Problem.main(tmpcmufpvw2.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            temp.add(sum);\n        }\n    \
    \    for (int i = 0; i < nums.size(); i++) {\n            long min = Long.MAX_VALUE;\n\
    \            int index = 0;\n            for (int j = 0; j < temp.size(); j++)\
    \ {\n                if (temp.get(j) < min) {\n                    min = temp.get(j);\n\
    \                    index = j;\n                }\n            }\n          \
    \  result.add(nums.get(index));\n            temp.set(index, Long.MAX_VALUE);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0vdbbt2.java:46)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> list = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            list.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(list, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> o1, Pair<Long, Long> o2) {\n                if (o1.getValue0().equals(o2.getValue0()))\
    \ {\n                    return o1.getValue1().compareTo(o2.getValue1());\n  \
    \              }\n                return o1.getValue0().compareTo(o2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < list.size(); i++) {\n\
    \            result.add(list.get(i).getValue1());\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpu9pl58wc.java:28)\n\tat Problem.main(tmpu9pl58wc.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        // Write your code\
    \ here\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpziywezma.java:24)\n"
  stdout: ''
  timestamp: 1659797612
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            Long num = nums.get(i);\n            Long\
    \ sum = 0l;\n            while (num != 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            pairs.add(new Pair<Long,\
    \ Long>(sum, (long)i));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> p1, Pair<Long, Long> p2) {\n                if (p1.getValue0().equals(p2.getValue0()))\
    \ {\n                    return p1.getValue1().compareTo(p2.getValue1());\n  \
    \              }\n                return p1.getValue0().compareTo(p2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(nums.get(pairs.get(i).getValue1().intValue()));\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpe6fd0bbs.java:28)\n\tat Problem.main(tmpe6fd0bbs.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp19npxux6.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> p1, Pair<Long, Long> p2) {\n                if (p1.getValue0().equals(p2.getValue0()))\
    \ {\n                    return p1.getValue1().compareTo(p2.getValue1());\n  \
    \              }\n                return p1.getValue0().compareTo(p2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpwd_0ln9w.java:28)\n\tat Problem.main(tmpwd_0ln9w.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long num = nums.get(i);\n            long\
    \ sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            pairs.add(new Pair<Long,\
    \ Long>(sum, (long)i));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> a, Pair<Long, Long> b) {\n                if (a.getValue0().equals(b.getValue0()))\
    \ {\n                    return a.getValue1().compareTo(b.getValue1());\n    \
    \            }\n                return a.getValue0().compareTo(b.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(nums.get(pairs.get(i).getValue1().intValue()));\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmppqhl7hc0.java:28)\n\tat Problem.main(tmppqhl7hc0.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            Long num = nums.get(i);\n            Long\
    \ sum = 0l;\n            while (num != 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            pairs.add(new Pair<Long,\
    \ Long>(sum, (long)i));\n        }\n        pairs.sort((p1, p2) -> {\n       \
    \     if (p1.getValue0().equals(p2.getValue0())) {\n                return p1.getValue1().compareTo(p2.getValue1());\n\
    \            }\n            return p1.getValue0().compareTo(p2.getValue0());\n\
    \        });\n        for (int i = 0; i < pairs.size(); i++) {\n            result.add(nums.get(pairs.get(i).getValue1().intValue()));\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmplrd4bqh2.java:28)\n\tat Problem.main(tmplrd4bqh2.java:42)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> o1, Pair<Long, Long> o2) {\n                if (o1.getValue0().equals(o2.getValue0()))\
    \ {\n                    return o1.getValue1().compareTo(o2.getValue1());\n  \
    \              }\n                return o1.getValue0().compareTo(o2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpwvm7m776.java:28)\n\tat Problem.main(tmpwvm7m776.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // TODO: Implement this function\n        return null;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpc5ri0y3j.java:23)\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ (long)i));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> o1, Pair<Long, Long> o2) {\n                if (o1.getValue0().equals(o2.getValue0()))\
    \ {\n                    return o1.getValue1().compareTo(o2.getValue1());\n  \
    \              }\n                return o1.getValue0().compareTo(o2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(nums.get(pairs.get(i).getValue1().intValue()));\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpi_hdsz6y.java:28)\n\tat Problem.main(tmpi_hdsz6y.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> p1, Pair<Long, Long> p2) {\n                if (p1.getValue0().equals(p2.getValue0()))\
    \ {\n                    return p1.getValue1().compareTo(p2.getValue1());\n  \
    \              }\n                return p1.getValue0().compareTo(p2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpwd_0ln9w.java:28)\n\tat Problem.main(tmpwd_0ln9w.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> p1, Pair<Long, Long> p2) {\n                if (p1.getValue0().equals(p2.getValue0()))\
    \ {\n                    return p1.getValue1().compareTo(p2.getValue1());\n  \
    \              }\n                return p1.getValue0().compareTo(p2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpwd_0ln9w.java:28)\n\tat Problem.main(tmpwd_0ln9w.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp = new ArrayList<Long>();\n        ArrayList<Long> temp2 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp3 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp4 = new ArrayList<Long>();\n        ArrayList<Long> temp5 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp6 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp7 = new ArrayList<Long>();\n        ArrayList<Long> temp8 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp9 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp10 = new ArrayList<Long>();\n        ArrayList<Long> temp11 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp12 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp13 = new ArrayList<Long>();\n        ArrayList<Long> temp14 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp15 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp16 = new ArrayList<Long>();\n        ArrayList<Long> temp17 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp18 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp19 = new ArrayList<Long>();\n        ArrayList<Long> temp20 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp21 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp22 = new ArrayList<Long>();\n        ArrayList<Long> temp23 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp24 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp25 = new ArrayList<Long>();\n        ArrayList<Long> temp26 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp27 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp28 = new ArrayList<Long>();\n        ArrayList<Long> temp29 = new ArrayList<Long>();\n\
    \        ArrayList\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw4mdoz4g.java:49: error: not a statement\n        ArrayList\n \
    \       ^\n/tmp/tmpw4mdoz4g.java:49: error: ';' expected\n        ArrayList\n\
    \                 ^\n2 errors\n"
  stdout: ''
  timestamp: 1659797611
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ (long)i));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> o1, Pair<Long, Long> o2) {\n                if (o1.getValue0().equals(o2.getValue0()))\
    \ {\n                    return o1.getValue1().compareTo(o2.getValue1());\n  \
    \              }\n                return o1.getValue0().compareTo(o2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(nums.get(pairs.get(i).getValue1().intValue()));\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpi_hdsz6y.java:28)\n\tat Problem.main(tmpi_hdsz6y.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> a, Pair<Long, Long> b) {\n                if (a.getValue0().equals(b.getValue0()))\
    \ {\n                    return a.getValue1().compareTo(b.getValue1());\n    \
    \            }\n                return a.getValue0().compareTo(b.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmp1n3f9bt2.java:28)\n\tat Problem.main(tmp1n3f9bt2.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ (long)i));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> a, Pair<Long, Long> b) {\n                if (a.getValue0().equals(b.getValue0()))\
    \ {\n                    return a.getValue1().compareTo(b.getValue1());\n    \
    \            }\n                return a.getValue0().compareTo(b.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(nums.get(pairs.get(i).getValue1().intValue()));\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpa1cqw9wa.java:28)\n\tat Problem.main(tmpa1cqw9wa.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < nums.size(); i++) {\n            long num = nums.get(i);\n            long\
    \ sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            result.add(sum);\n   \
    \     }\n        for (int i = 0; i < result.size(); i++) {\n            for (int\
    \ j = i + 1; j < result.size(); j++) {\n                if (result.get(i) > result.get(j))\
    \ {\n                    long temp = result.get(i);\n                    result.set(i,\
    \ result.get(j));\n                    result.set(j, temp);\n                \
    \    temp = nums.get(i);\n                    nums.set(i, nums.get(j));\n    \
    \                nums.set(j, temp);\n                }\n            }\n      \
    \  }\n        return nums;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9eqztevu.java:44)\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ (long)i));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> o1, Pair<Long, Long> o2) {\n                if (o1.getValue0().equals(o2.getValue0()))\
    \ {\n                    return o1.getValue1().compareTo(o2.getValue1());\n  \
    \              }\n                return o1.getValue0().compareTo(o2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(nums.get(pairs.get(i).getValue1().intValue()));\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpi_hdsz6y.java:28)\n\tat Problem.main(tmpi_hdsz6y.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sum = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            long temp = nums.get(i);\n            long sumTemp = 0;\n   \
    \         while (temp != 0) {\n                sumTemp += temp % 10;\n       \
    \         temp /= 10;\n            }\n            sum.add(sumTemp);\n        }\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            long min = Long.MAX_VALUE;\n\
    \            int index = 0;\n            for (int j = 0; j < sum.size(); j++)\
    \ {\n                if (sum.get(j) < min) {\n                    min = sum.get(j);\n\
    \                    index = j;\n                }\n            }\n          \
    \  result.add(nums.get(index));\n            sum.remove(index);\n            nums.remove(index);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg64p4elk.java:46)\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Your code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp3dtteej7.java:23)\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long n = nums.get(i);\n\
    \            while (n != 0) {\n                sum += n % 10;\n              \
    \  n /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum, nums.get(i)));\n\
    \        }\n        Collections.sort(pairs, new Comparator<Pair<Long, Long>>()\
    \ {\n            @Override\n            public int compare(Pair<Long, Long> p1,\
    \ Pair<Long, Long> p2) {\n                if (p1.getValue0().equals(p2.getValue0()))\
    \ {\n                    return p1.getValue1().compareTo(p2.getValue1());\n  \
    \              }\n                return p1.getValue0().compareTo(p2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmp31tz79i3.java:28)\n\tat Problem.main(tmp31tz79i3.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> o1, Pair<Long, Long> o2) {\n                if (o1.getValue0().equals(o2.getValue0()))\
    \ {\n                    return o1.getValue1().compareTo(o2.getValue1());\n  \
    \              }\n                return o1.getValue0().compareTo(o2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpwvm7m776.java:28)\n\tat Problem.main(tmpwvm7m776.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // your code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmphbypyws1.java:23)\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long num = nums.get(i);\n            long\
    \ sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            pairs.add(new Pair<Long,\
    \ Long>(sum, (long)i));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> p1, Pair<Long, Long> p2) {\n                if (p1.getValue0().equals(p2.getValue0()))\
    \ {\n                    return p1.getValue1().compareTo(p2.getValue1());\n  \
    \              }\n                return p1.getValue0().compareTo(p2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(nums.get(pairs.get(i).getValue1().intValue()));\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmp18tz8ue_.java:28)\n\tat Problem.main(tmp18tz8ue_.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> p1, Pair<Long, Long> p2) {\n                if (p1.getValue0().equals(p2.getValue0()))\
    \ {\n                    return p1.getValue1().compareTo(p2.getValue1());\n  \
    \              }\n                return p1.getValue0().compareTo(p2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpwd_0ln9w.java:28)\n\tat Problem.main(tmpwd_0ln9w.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long num = nums.get(i);\n            long\
    \ sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            pairs.add(new Pair<Long,\
    \ Long>(sum, (long)i));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> p1, Pair<Long, Long> p2) {\n                if (p1.getValue0().equals(p2.getValue0()))\
    \ {\n                    return p1.getValue1().compareTo(p2.getValue1());\n  \
    \              }\n                return p1.getValue0().compareTo(p2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(nums.get(pairs.get(i).getValue1().intValue()));\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmp18tz8ue_.java:28)\n\tat Problem.main(tmp18tz8ue_.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> p1, Pair<Long, Long> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpg2xtxen7.java:28)\n\tat Problem.main(tmpg2xtxen7.java:42)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> p1, Pair<Long, Long> p2) {\n                if (p1.getValue0().equals(p2.getValue0()))\
    \ {\n                    return p1.getValue1().compareTo(p2.getValue1());\n  \
    \              }\n                return p1.getValue0().compareTo(p2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpwd_0ln9w.java:28)\n\tat Problem.main(tmpwd_0ln9w.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            pairs.add(new Pair<Long, Long>(nums.get(i),\
    \ sumDigits(nums.get(i))));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> a, Pair<Long, Long> b) {\n                if (a.getValue1().equals(b.getValue1()))\
    \ {\n                    return a.getValue0().compareTo(b.getValue0());\n    \
    \            }\n                return a.getValue1().compareTo(b.getValue1());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue0());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcasmi__6.java:22: error: cannot find symbol\n            pairs.add(new\
    \ Pair<Long, Long>(nums.get(i), sumDigits(nums.get(i))));\n                  \
    \                                      ^\n  symbol:   method sumDigits(Long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> p1, Pair<Long, Long> p2) {\n                if (p1.getValue0().equals(p2.getValue0()))\
    \ {\n                    return p1.getValue1().compareTo(p2.getValue1());\n  \
    \              }\n                return p1.getValue0().compareTo(p2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpwd_0ln9w.java:28)\n\tat Problem.main(tmpwd_0ln9w.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < nums.size(); i++) {\n            result.add(nums.get(i));\n        }\n \
    \       for (int i = 0; i < result.size(); i++) {\n            for (int j = i\
    \ + 1; j < result.size(); j++) {\n                if (sumDigits(result.get(i))\
    \ > sumDigits(result.get(j))) {\n                    long temp = result.get(i);\n\
    \                    result.set(i, result.get(j));\n                    result.set(j,\
    \ temp);\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpasdfx2v0.java:25: error: cannot find symbol\n                if\
    \ (sumDigits(result.get(i)) > sumDigits(result.get(j))) {\n                  \
    \  ^\n  symbol:   method sumDigits(Long)\n  location: class Problem\n/tmp/tmpasdfx2v0.java:25:\
    \ error: cannot find symbol\n                if (sumDigits(result.get(i)) > sumDigits(result.get(j)))\
    \ {\n                                               ^\n  symbol:   method sumDigits(Long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Your code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp3dtteej7.java:23)\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long num = nums.get(i);\n            long\
    \ sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            pairs.add(new Pair<Long,\
    \ Long>(sum, (long)i));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> a, Pair<Long, Long> b) {\n                if (a.getValue0().equals(b.getValue0()))\
    \ {\n                    return a.getValue1().compareTo(b.getValue1());\n    \
    \            }\n                return a.getValue0().compareTo(b.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(nums.get(pairs.get(i).getValue1().intValue()));\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmppqhl7hc0.java:28)\n\tat Problem.main(tmppqhl7hc0.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // your code here\n        return nums;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1eoj74r2.java:23)\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> p1, Pair<Long, Long> p2) {\n                if (p1.getValue0().equals(p2.getValue0()))\
    \ {\n                    return p1.getValue1().compareTo(p2.getValue1());\n  \
    \              }\n                return p1.getValue0().compareTo(p2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpwd_0ln9w.java:28)\n\tat Problem.main(tmpwd_0ln9w.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        int[] sums = new\
    \ int[nums.size()];\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     long num = nums.get(i);\n            int sum = 0;\n            while (num\
    \ != 0) {\n                sum += num % 10;\n                num /= 10;\n    \
    \        }\n            sums[i] = sum;\n        }\n        int[] indices = new\
    \ int[nums.size()];\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     indices[i] = i;\n        }\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            for (int j = i + 1; j < nums.size(); j++) {\n               \
    \ if (sums[i] > sums[j]) {\n                    int temp = sums[i];\n        \
    \            sums[i] = sums[j];\n                    sums[j] = temp;\n       \
    \             temp = indices[i];\n                    indices[i] = indices[j];\n\
    \                    indices[j] = temp;\n                }\n            }\n  \
    \      }\n        for (int i = 0; i < nums.size(); i++) {\n            result.add(nums.get(indices[i]));\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpesi4o9pu.java:52)\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            pairs.add(new Pair<Long, Long>(nums.get(i),\
    \ sumOfDigits(nums.get(i))));\n        }\n        Collections.sort(pairs, new\
    \ Comparator<Pair<Long, Long>>() {\n            @Override\n            public\
    \ int compare(Pair<Long, Long> o1, Pair<Long, Long> o2) {\n                if\
    \ (o1.getValue1().equals(o2.getValue1())) {\n                    return o1.getValue0().compareTo(o2.getValue0());\n\
    \                }\n                return o1.getValue1().compareTo(o2.getValue1());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue0());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplzn486hb.java:22: error: cannot find symbol\n            pairs.add(new\
    \ Pair<Long, Long>(nums.get(i), sumOfDigits(nums.get(i))));\n                \
    \                                        ^\n  symbol:   method sumOfDigits(Long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> p1, Pair<Long, Long> p2) {\n                if (p1.getValue0().equals(p2.getValue0()))\
    \ {\n                    return p1.getValue1().compareTo(p2.getValue1());\n  \
    \              }\n                return p1.getValue0().compareTo(p2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpwd_0ln9w.java:28)\n\tat Problem.main(tmpwd_0ln9w.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Integer>\
    \ sums = new ArrayList<Integer>();\n        for (Long num : nums) {\n        \
    \    sums.add(sumDigits(num));\n        }\n        ArrayList<Integer> sortedSums\
    \ = new ArrayList<Integer>(sums);\n        Collections.sort(sortedSums);\n   \
    \     for (Integer sum : sortedSums) {\n            int index = sums.indexOf(sum);\n\
    \            result.add(nums.get(index));\n            sums.set(index, -1);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj1z66saf.java:22: error: cannot find symbol\n            sums.add(sumDigits(num));\n\
    \                     ^\n  symbol:   method sumDigits(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> pairs = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            long sum = 0;\n            long num = nums.get(i);\n\
    \            while (num != 0) {\n                sum += num % 10;\n          \
    \      num /= 10;\n            }\n            pairs.add(new Pair<Long, Long>(sum,\
    \ nums.get(i)));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long,\
    \ Long>>() {\n            @Override\n            public int compare(Pair<Long,\
    \ Long> o1, Pair<Long, Long> o2) {\n                if (o1.getValue0().equals(o2.getValue0()))\
    \ {\n                    return o1.getValue1().compareTo(o2.getValue1());\n  \
    \              }\n                return o1.getValue0().compareTo(o2.getValue0());\n\
    \            }\n        });\n        for (int i = 0; i < pairs.size(); i++) {\n\
    \            result.add(pairs.get(i).getValue1());\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmpwvm7m776.java:28)\n\tat Problem.main(tmpwvm7m776.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result2 = new ArrayList<Long>();\n        ArrayList<Long> result3 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result4 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result5 = new ArrayList<Long>();\n        ArrayList<Long> result6 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result7 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result8 = new ArrayList<Long>();\n        ArrayList<Long> result9 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result10 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result11 = new ArrayList<Long>();\n        ArrayList<Long> result12 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result13 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result14 = new ArrayList<Long>();\n        ArrayList<Long> result15 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result16 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result17 = new ArrayList<Long>();\n        ArrayList<Long> result18 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result19 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result20 = new ArrayList<Long>();\n        ArrayList<Long> result21 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result22 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result23 = new ArrayList<Long>();\n        ArrayList<Long> result24 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result25 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result26 = new ArrayList<Long>();\n        ArrayList<Long> result27 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result28 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result29 = new ArrayList<Long>();\n        ArrayList<Long> result30 = new ArrayList<Long>();\n\
    \        Array\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3disadh8.java:49: error: not a statement\n        Array\n     \
    \   ^\n/tmp/tmp3disadh8.java:49: error: ';' expected\n        Array\n        \
    \     ^\n2 errors\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return null;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpm6xoqiy9.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // your code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmphbypyws1.java:23)\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> unsorted = new ArrayList<Long>();\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(nums.get(i));\n\
    \            unsorted.add(nums.get(i));\n        }\n        Collections.sort(sorted);\n\
    \        for (int i = 0; i < sorted.size(); i++) {\n            for (int j = 0;\
    \ j < unsorted.size(); j++) {\n                if (sorted.get(i) == unsorted.get(j))\
    \ {\n                    result.add(unsorted.get(j));\n                    unsorted.remove(j);\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjqkhm6tl.java:39)\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Pair<Long,\
    \ Long>> numsWithPoints = new ArrayList<Pair<Long, Long>>();\n        for (Long\
    \ num : nums) {\n            Long points = 0l;\n            for (char c : num.toString().toCharArray())\
    \ {\n                points += Character.getNumericValue(c);\n            }\n\
    \            numsWithPoints.add(new Pair<Long, Long>(num, points));\n        }\n\
    \        Collections.sort(numsWithPoints, new Comparator<Pair<Long, Long>>() {\n\
    \            @Override\n            public int compare(Pair<Long, Long> o1, Pair<Long,\
    \ Long> o2) {\n                if (o1.getValue1().equals(o2.getValue1())) {\n\
    \                    return o1.getValue0().compareTo(o2.getValue0());\n      \
    \          }\n                return o1.getValue1().compareTo(o2.getValue1());\n\
    \            }\n        });\n        for (Pair<Long, Long> pair : numsWithPoints)\
    \ {\n            result.add(pair.getValue0());\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.orderByPoints(tmp7f4s1wd9.java:26)\n\tat Problem.main(tmp7f4s1wd9.java:43)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     return nums;\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsan8an5k.java:22)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     ArrayList<Long> res = new ArrayList<Long>();\n        ArrayList<Long> res2\
    \ = new ArrayList<Long>();\n        ArrayList<Long> res3 = new ArrayList<Long>();\n\
    \        ArrayList<Long> res4 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ res5 = new ArrayList<Long>();\n        ArrayList<Long> res6 = new ArrayList<Long>();\n\
    \        ArrayList<Long> res7 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ res8 = new ArrayList<Long>();\n        ArrayList<Long> res9 = new ArrayList<Long>();\n\
    \        ArrayList<Long> res10 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ res11 = new ArrayList<Long>();\n        ArrayList<Long> res12 = new ArrayList<Long>();\n\
    \        ArrayList<Long> res13 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ res14 = new ArrayList<Long>();\n        ArrayList<Long> res15 = new ArrayList<Long>();\n\
    \        ArrayList<Long> res16 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ res17 = new ArrayList<Long>();\n        ArrayList<Long> res18 = new ArrayList<Long>();\n\
    \        ArrayList<Long> res19 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ res20 = new ArrayList<Long>();\n        ArrayList<Long> res21 = new ArrayList<Long>();\n\
    \        ArrayList<Long> res22 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ res23 = new ArrayList<Long>();\n        ArrayList<Long> res24 = new ArrayList<Long>();\n\
    \        ArrayList<Long> res25 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ res26 = new ArrayList<Long>();\n        ArrayList<Long> res27 = new ArrayList<Long>();\n\
    \        ArrayList<Long> res28 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ res29 = new ArrayList<Long>();\n        ArrayList<Long> res30 = new ArrayList<Long>();\n\
    \        Array\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaarihohe.java:49: error: not a statement\n        Array\n     \
    \   ^\n/tmp/tmpaarihohe.java:49: error: ';' expected\n        Array\n        \
    \     ^\n2 errors\n"
  stdout: ''
  timestamp: 1659797614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswf5jccx.java:23)\n"
  stdout: ''
  timestamp: 1659797613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given array list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original array list.\n    // For example:\n    // >>>\
    \ orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l,\
    \ (long)-11l, (long)-12l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))\n    // >>> orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n   \
    \     // Write your code here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.orderByPoints(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjjxkprzn.java:23)\n"
  stdout: ''
  timestamp: 1659797613

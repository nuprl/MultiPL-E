language: java
name: HumanEval_147_get_max_triples
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (int i = 1; i < n; i++) {\n         \
    \   for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <\
    \ n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5jdzozf_.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqnh8_13k.java:26)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long result = 0;\n        for (int i = 1; i < n; i++) {\n        \
    \    for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k\
    \ < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k\
    \ - k + 1) % 3 == 0) {\n                        result++;\n                  \
    \  }\n                }\n            }\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyj7czejz.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9906deco.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (int i = 1; i < n - 1; i++) {\n     \
    \       for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1;\
    \ k <= n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k *\
    \ k - k + 1) % 3 == 0) {\n                        count++;\n                 \
    \   }\n                }\n            }\n        }\n        return count;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcvrv14tf.java:23)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = (long)i * i - i + 1;\n        }\n        long count = 0;\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if ((a[i] +\
    \ a[j] + a[k]) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfmihms28.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ ans = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j =\
    \ i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n \
    \                   if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        ans++;\n                    }\n              \
    \  }\n            }\n        }\n        return ans;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfimdeob4.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here.\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx3igwo4e.java:24)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ res = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j =\
    \ i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n \
    \                   if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        res++;\n                    }\n              \
    \  }\n            }\n        }\n        return res;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj55dpuxm.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (int i = 1; i < n; i++) {\n         \
    \   for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <\
    \ n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5jdzozf_.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ res = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j =\
    \ i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n \
    \                   if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        res++;\n                    }\n              \
    \  }\n            }\n        }\n        return res;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj55dpuxm.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    long sum = i * i - i + 1 + j * j - j + 1 + k * k - k + 1;\n\
    \                    if (sum % 3 == 0) {\n                        count++;\n \
    \                   }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_u4z1urt.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (int i = 1; i < n; i++) {\n         \
    \   for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <\
    \ n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5jdzozf_.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ result = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        result++;\n                    }\n           \
    \     }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8oxd40sd.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ result = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        result++;\n                    }\n           \
    \     }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_u4z1urt.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcvrv14tf.java:23)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long res = 0;\n        for (int i = 1; i < n; i++) {\n           \
    \ for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n;\
    \ k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k +\
    \ 1) % 3 == 0) {\n                        res++;\n                    }\n    \
    \            }\n            }\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4p8gksxk.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ result = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        result++;\n                    }\n           \
    \     }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8oxd40sd.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (int i = 1; i < n - 1; i++) {\n     \
    \       for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1;\
    \ k <= n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k *\
    \ k - k + 1) % 3 == 0) {\n                        count++;\n                 \
    \   }\n                }\n            }\n        }\n        return count;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long result = 0;\n        for (int i = 1; i < n; i++) {\n        \
    \    for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k\
    \ < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k\
    \ - k + 1) % 3 == 0) {\n                        result++;\n                  \
    \  }\n                }\n            }\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyj7czejz.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ ans = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j =\
    \ i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n \
    \                   if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        ans++;\n                    }\n              \
    \  }\n            }\n        }\n        return ans;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfimdeob4.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_u4z1urt.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcdatjer2.java:24)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (int i = 1; i < n - 1; i++) {\n     \
    \       for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1;\
    \ k <= n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k *\
    \ k - k + 1) % 3 == 0) {\n                        count++;\n                 \
    \   }\n                }\n            }\n        }\n        return count;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_u4z1urt.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = (long)i * i - i + 1;\n        }\n        long count = 0;\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if ((a[i] +\
    \ a[j] + a[k]) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfmihms28.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        long[] a = new long[(int)n];\n        for (int i = 0; i\
    \ < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if ((a[i] +\
    \ a[j] + a[k]) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkq2g956a.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ res = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j =\
    \ i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n \
    \                   if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        res++;\n                    }\n              \
    \  }\n            }\n        }\n        return res;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj55dpuxm.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ result = 0;\n        long[] a = new long[(int)n];\n        for (int i = 0; i\
    \ < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if ((a[i] +\
    \ a[j] + a[k]) % 3 == 0) {\n                        result++;\n              \
    \      }\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj2a3r3r9.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9906deco.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqnh8_13k.java:26)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long sum = 0;\n        for (int i = 1; i < n; i++) {\n           \
    \ for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n;\
    \ k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k +\
    \ 1) % 3 == 0) {\n                        sum++;\n                    }\n    \
    \            }\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvxxuczju.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ result = 0;\n        ArrayList<Long> a = new ArrayList<Long>();\n        for\
    \ (long i = 1; i <= n; i++) {\n            a.add(i * i - i + 1);\n        }\n\
    \        for (int i = 0; i < a.size(); i++) {\n            for (int j = i + 1;\
    \ j < a.size(); j++) {\n                for (int k = j + 1; k < a.size(); k++)\
    \ {\n                    if ((a.get(i) + a.get(j) + a.get(k)) % 3 == 0) {\n  \
    \                      result++;\n                    }\n                }\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (int i = 1; i < n; i++) {\n         \
    \   for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <\
    \ n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5jdzozf_.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_u4z1urt.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9906deco.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (int i = 1; i < n - 1; i++) {\n     \
    \       for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1;\
    \ k <= n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k *\
    \ k - k + 1) % 3 == 0) {\n                        count++;\n                 \
    \   }\n                }\n            }\n        }\n        return count;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqnh8_13k.java:26)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ ans = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j =\
    \ i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n \
    \                   if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        ans++;\n                    }\n              \
    \  }\n            }\n        }\n        return ans;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfimdeob4.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9906deco.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9906deco.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = (long)i * i - i + 1;\n        }\n        long count = 0;\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if ((a[i] +\
    \ a[j] + a[k]) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfmihms28.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here.\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx3igwo4e.java:24)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9906deco.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9906deco.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9906deco.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_u4z1urt.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9906deco.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_u4z1urt.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long cnt = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        cnt++;\n                    }\n \
    \               }\n            }\n        }\n        return cnt;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj49u93in.java:37)\n"
  stdout: ''
  timestamp: 1659797915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long result = 0;\n        for (int i = 1; i < n; i++) {\n        \
    \    for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k\
    \ < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k\
    \ - k + 1) % 3 == 0) {\n                        result++;\n                  \
    \  }\n                }\n            }\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyj7czejz.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9906deco.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9906deco.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ result = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        result++;\n                    }\n           \
    \     }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8oxd40sd.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long result = 0;\n        for (int i = 1; i < n - 1; i++) {\n    \
    \        for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1;\
    \ k <= n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k *\
    \ k - k + 1) % 3 == 0) {\n                        result++;\n                \
    \    }\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = (long)i * i - i + 1;\n        }\n        long count = 0;\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if ((a[i] +\
    \ a[j] + a[k]) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfmihms28.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9906deco.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (int i = 1; i < n; i++) {\n         \
    \   for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <\
    \ n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5jdzozf_.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ ans = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j =\
    \ i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n \
    \                   if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        ans++;\n                    }\n              \
    \  }\n            }\n        }\n        return ans;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfimdeob4.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9906deco.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here.\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx3igwo4e.java:24)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ res = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j =\
    \ i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n \
    \                   if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        res++;\n                    }\n              \
    \  }\n            }\n        }\n        return res;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj55dpuxm.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long res = 0;\n        for (int i = 1; i < n; i++) {\n           \
    \ for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n;\
    \ k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k +\
    \ 1) % 3 == 0) {\n                        res++;\n                    }\n    \
    \            }\n            }\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4p8gksxk.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ result = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        result++;\n                    }\n           \
    \     }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8oxd40sd.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ res = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j =\
    \ i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n \
    \                   if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        res++;\n                    }\n              \
    \  }\n            }\n        }\n        return res;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj55dpuxm.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9906deco.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ result = 0;\n        long[] a = new long[(int)n];\n        for (int i = 0; i\
    \ < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if ((a[i] +\
    \ a[j] + a[k]) % 3 == 0) {\n                        result++;\n              \
    \      }\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj2a3r3r9.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcvrv14tf.java:23)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ ans = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j =\
    \ i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n \
    \                   if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        ans++;\n                    }\n              \
    \  }\n            }\n        }\n        return ans;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfimdeob4.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  long a = i * i - i + 1;\n                    long b = j * j\
    \ - j + 1;\n                    long c = k * k - k + 1;\n                    if\
    \ ((a + b + c) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpifmvzk89.java:37)\n"
  stdout: ''
  timestamp: 1659797915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ result = 0;\n        // Write your code here\n        // To print results to\
    \ the standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprvw4so98.java:27)\n"
  stdout: ''
  timestamp: 1659797915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqnh8_13k.java:26)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = (long)i * i - i + 1;\n        }\n        long count =\
    \ 0;\n        for (int i = 0; i < n - 2; i++) {\n            for (int j = i +\
    \ 1; j < n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                    \
    \    count++;\n                    }\n                }\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpguq4viyb.java:40)\n"
  stdout: ''
  timestamp: 1659797915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ ans = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j =\
    \ i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n \
    \                   if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        ans++;\n                    }\n              \
    \  }\n            }\n        }\n        return ans;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfimdeob4.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ ans = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j =\
    \ i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n \
    \                   long a = i * i - i + 1;\n                    long b = j *\
    \ j - j + 1;\n                    long c = k * k - k + 1;\n                  \
    \  if ((a + b + c) % 3 == 0) {\n                        ans++;\n             \
    \       }\n                }\n            }\n        }\n        return ans;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ptv49nu.java:37)\n"
  stdout: ''
  timestamp: 1659797915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9906deco.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = (long)i * i - i + 1;\n        }\n        long count = 0;\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    if ((a[i] +\
    \ a[j] + a[k]) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfmihms28.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j <\
    \ n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_u4z1urt.java:40)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n - 1; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <= n; k++) {\n\
    \                    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ ans = 0;\n        for (long i = 1; i < n; i++) {\n            for (long j =\
    \ i + 1; j < n; j++) {\n                for (long k = j + 1; k < n; k++) {\n \
    \                   if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        ans++;\n                    }\n              \
    \  }\n            }\n        }\n        return ans;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfimdeob4.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long result = 0;\n        for (int i = 1; i < n; i++) {\n        \
    \    for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k\
    \ < n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k\
    \ - k + 1) % 3 == 0) {\n                        result++;\n                  \
    \  }\n                }\n            }\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyj7czejz.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long\
    \ count = 0;\n        for (int i = 1; i < n; i++) {\n            for (int j =\
    \ i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n  \
    \                  if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0) {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fp_65vk.java:34)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcvrv14tf.java:23)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (int i = 1; i < n; i++) {\n         \
    \   for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <\
    \ n; k++) {\n                    if ((i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5jdzozf_.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        long[]\
    \ a = new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i]\
    \ = i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if ((a[i] + a[j] +\
    \ a[k]) % 3 == 0) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblf86kbb.java:37)\n"
  stdout: ''
  timestamp: 1659797914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a positive integer n. You have to create\
    \ an integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
    \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is\
    \ a multiple of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n\
    \    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple\
    \ is (1, 7, 13).\n    public static long getMaxTriples(long n) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long[] a = new long[(int)n];\n        for (int i = 0; i < n; i++)\
    \ {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9906deco.java:40)\n"
  stdout: ''
  timestamp: 1659797914

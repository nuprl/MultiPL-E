name: HumanEval_142_sum_squares
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // \"\n    // This function will take an array array list of\
  \ integers. For all entries in the array list, the function shall square the integer\
  \ entry if its index is a \n    // multiple of 3 and will cube the integer entry\
  \ if its index is a multiple of 4 and not a multiple of 3. The function will not\
  \ \n    // change the entries in the array list whose indexes are not a multiple\
  \ of 3 or 4. The function shall then return the sum of all entries. \n    // Examples:\n\
  \    // >>> lst\n    // (long)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
  \ (long)3l))\n    // >>> lst\n    // (long)new ArrayList<Long>(Arrays.asList())\n\
  \    // >>> lst\n    // (long)new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l,\
  \ (long)2l, (long)-1l, (long)-5l))\n    public static long sumSquares(ArrayList<Long>\
  \ lst) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(sumSquares((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (6l));\n   \
  \ assert(sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)9l))))\
  \ == (14l));\n    assert(sumSquares((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
  \    assert(sumSquares((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l,\
  \ (long)1l, (long)1l, (long)1l, (long)1l, (long)1l, (long)1l)))) == (9l));\n   \
  \ assert(sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-1l, (long)-1l,\
  \ (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l, (long)-1l)))) == (-3l));\n\
  \    assert(sumSquares((new ArrayList<Long>(Arrays.asList((long)0l)))) == (0l));\n\
  \    assert(sumSquares((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-5l,\
  \ (long)2l, (long)-1l, (long)-5l)))) == (-126l));\n    assert(sumSquares((new ArrayList<Long>(Arrays.asList((long)-56l,\
  \ (long)-99l, (long)1l, (long)0l, (long)-2l)))) == (3030l));\n    assert(sumSquares((new\
  \ ArrayList<Long>(Arrays.asList((long)-1l, (long)0l, (long)0l, (long)0l, (long)0l,\
  \ (long)0l, (long)0l, (long)0l, (long)-1l)))) == (0l));\n    assert(sumSquares((new\
  \ ArrayList<Long>(Arrays.asList((long)-16l, (long)-9l, (long)-2l, (long)36l, (long)36l,\
  \ (long)26l, (long)-20l, (long)25l, (long)-40l, (long)20l, (long)-4l, (long)12l,\
  \ (long)-26l, (long)35l, (long)37l)))) == (-14196l));\n    assert(sumSquares((new\
  \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)17l, (long)-1l, (long)-15l,\
  \ (long)13l, (long)-1l, (long)14l, (long)-14l, (long)-12l, (long)-5l, (long)14l,\
  \ (long)-14l, (long)6l, (long)13l, (long)11l, (long)16l, (long)16l, (long)4l, (long)10l))))\
  \ == (-1448l));\n    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"

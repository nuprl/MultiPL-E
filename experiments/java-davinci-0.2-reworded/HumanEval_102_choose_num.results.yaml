language: java
name: HumanEval_102_choose_num
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        if(x%2 == 0)\n            return\
    \ x;\n        else if(x+1 == y)\n            return -1;\n        else\n      \
    \      return x+1;\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp3fwbh4r.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here.\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4l9zcdkp.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        if (x > y) {\n            return\
    \ -1;\n        }\n        if (x % 2 == 0) {\n            return x;\n        }\n\
    \        return chooseNum(x + 1, y);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn6k7dplf.java:28)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long z = x;\n        while (z <= y) {\n            if\
    \ (z % 2 == 0) {\n                return z;\n            }\n            z++;\n\
    \        }\n        return -1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe1fwpe7x.java:28)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz24btqtn.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code goes here.\n        return -1;\n    }\n \
    \   public static void main(String[] args) {\n    assert(chooseNum((12l), (15l))\
    \ == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph87li4yg.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm7qb2kgr.java:21)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        } else if\
    \ (x % 2 == 0) {\n            return x;\n        } else {\n            return\
    \ x + 1;\n        }\n    }\n    public static void main(String[] args) {\n   \
    \ assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp690jj54y.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long max = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0 && i > max) {\n                max = i;\n    \
    \        }\n        }\n        return max;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        if (y % 2 ==\
    \ 0) {\n            return y;\n        }\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp53xk2bq3.java:30)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm7qb2kgr.java:21)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 == y) {\n            return -1;\n        } else {\n            return\
    \ x + 1;\n        }\n    }\n    public static void main(String[] args) {\n   \
    \ assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppgym5vcu.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 == y) {\n            return -1;\n        } else {\n            return\
    \ x + 1;\n        }\n    }\n    public static void main(String[] args) {\n   \
    \ assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppgym5vcu.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long res = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                res = i;\n            }\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3hut_3d8.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm7qb2kgr.java:21)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long res = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                res = i;\n            }\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 <= y) {\n            return x + 1;\n        } else {\n           \
    \ return -1;\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd02ath1o.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        if(x%2==0)\n            return\
    \ x;\n        else if(x+1==y)\n            return -1;\n        else\n        \
    \    return x+1;\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprn8r6xgt.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // TODO: Implement this function\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwzndfc_7.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm7qb2kgr.java:21)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return x + 1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx9_bmfi7.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 <= y) {\n            return x + 1;\n        } else {\n           \
    \ return -1;\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd02ath1o.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm7qb2kgr.java:21)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // TODO: Implement this function.\n        return 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1anj0cyp.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 == y) {\n            return -1;\n        } else {\n            return\
    \ x + 1;\n        }\n    }\n    public static void main(String[] args) {\n   \
    \ assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppgym5vcu.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return x + 1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx9_bmfi7.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz24btqtn.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Write your code here\n        return -1;\n    }\n \
    \   public static void main(String[] args) {\n    assert(chooseNum((12l), (15l))\
    \ == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbs3ry7cw.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long z = x;\n        while (z <= y) {\n            if\
    \ (z % 2 == 0) {\n                return z;\n            }\n            z++;\n\
    \        }\n        return -1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe1fwpe7x.java:28)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        if (y % 2 ==\
    \ 0) {\n            return y;\n        }\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp53xk2bq3.java:30)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // TODO: implement this function\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpazwvn9dq.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz24btqtn.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // TODO: Implement this function.\n        long maxEven\
    \ = -1;\n        for (long i = x; i <= y; i++) {\n            if (i % 2 == 0)\
    \ {\n                maxEven = i;\n            }\n        }\n        return maxEven;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793722
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // TODO: implement this function\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpazwvn9dq.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 <= y) {\n            return x + 1;\n        } else {\n           \
    \ return -1;\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd02ath1o.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        if (x > y) {\n            return\
    \ -1;\n        }\n        if (x % 2 == 0) {\n            return x;\n        }\n\
    \        return chooseNum(x + 1, y);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn6k7dplf.java:28)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        if (y % 2 ==\
    \ 0) {\n            return y;\n        }\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp53xk2bq3.java:30)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // TODO: Implement this function.\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8nplnmw1.java:22)\n"
  stdout: ''
  timestamp: 1659793722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code goes here.\n        return -1;\n    }\n \
    \   public static void main(String[] args) {\n    assert(chooseNum((12l), (15l))\
    \ == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph87li4yg.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz24btqtn.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long max = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0 && i > max) {\n                max = i;\n    \
    \        }\n        }\n        return max;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code goes here.\n        if(x > y) return -1;\n\
    \        if(x % 2 == 0) return x;\n        return chooseNum(x + 1, y);\n    }\n\
    \    public static void main(String[] args) {\n    assert(chooseNum((12l), (15l))\
    \ == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj2svgwyo.java:24)\n"
  stdout: ''
  timestamp: 1659793722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 <= y) {\n            return x + 1;\n        } else {\n           \
    \ return -1;\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd02ath1o.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        long max = -1;\n        for\
    \ (long i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n               \
    \ max = i;\n            }\n        }\n        return max;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        long res = -1;\n        for\
    \ (long i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n               \
    \ res = i;\n            }\n        }\n        return res;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 <= y) {\n            return x + 1;\n        } else {\n           \
    \ return -1;\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd02ath1o.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm7qb2kgr.java:21)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 == y) {\n            return -1;\n        } else {\n            return\
    \ x + 1;\n        }\n    }\n    public static void main(String[] args) {\n   \
    \ assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppgym5vcu.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code goes here\n        return -1;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(chooseNum((12l), (15l))\
    \ == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8vb4s3ma.java:22)\n"
  stdout: ''
  timestamp: 1659793722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz24btqtn.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // TODO: Implement this function.\n        if (x % 2 ==\
    \ 0) {\n            return x;\n        } else if (x + 1 == y) {\n            return\
    \ -1;\n        } else {\n            return chooseNum(x + 1, y);\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpta0xd2pj.java:28)\n"
  stdout: ''
  timestamp: 1659793723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 <= y) {\n            return x + 1;\n        } else {\n           \
    \ return -1;\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd02ath1o.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // TODO: Implement this function\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwzndfc_7.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 <= y) {\n            return x + 1;\n        } else {\n           \
    \ return -1;\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd02ath1o.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // TODO: Implement this function\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwzndfc_7.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // TODO: implement this function\n        return 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6a_dugf7.java:22)\n"
  stdout: ''
  timestamp: 1659793722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Write your code here\n        return -1;\n    }\n \
    \   public static void main(String[] args) {\n    assert(chooseNum((12l), (15l))\
    \ == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbs3ry7cw.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // TODO: Implement this function.\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8nplnmw1.java:22)\n"
  stdout: ''
  timestamp: 1659793722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 <= y) {\n            return x + 1;\n        } else {\n           \
    \ return -1;\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd02ath1o.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm7qb2kgr.java:21)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 == y) {\n            return -1;\n        } else {\n            return\
    \ x + 1;\n        }\n    }\n    public static void main(String[] args) {\n   \
    \ assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppgym5vcu.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 <= y) {\n            return x + 1;\n        } else {\n           \
    \ return -1;\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd02ath1o.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long z = -1;\n        for (long i = x; i <= y; i++) {\n\
    \            if (i % 2 == 0) {\n                z = i;\n            }\n      \
    \  }\n        return z;\n    }\n    public static void main(String[] args) {\n\
    \    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793723
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long ans = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                ans = i;\n            }\n\
    \        }\n        return ans;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793722
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 <= y) {\n            return x + 1;\n        } else {\n           \
    \ return -1;\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd02ath1o.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm7qb2kgr.java:21)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 == y) {\n            return -1;\n        } else {\n            return\
    \ x + 1;\n        }\n    }\n    public static void main(String[] args) {\n   \
    \ assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppgym5vcu.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm7qb2kgr.java:21)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // TODO: implement this function\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpazwvn9dq.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // TODO: Implement this function\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwzndfc_7.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm7qb2kgr.java:21)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long r = -1;\n        for (long i = x; i <= y; i++) {\n\
    \            if (i % 2 == 0) {\n                r = i;\n            }\n      \
    \  }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm7qb2kgr.java:21)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz24btqtn.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz24btqtn.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        long max = -1;\n        for\
    \ (long i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n               \
    \ max = i;\n            }\n        }\n        return max;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x % 2 == 0) {\n            return x;\n        } else\
    \ if (x + 1 == y) {\n            return -1;\n        } else {\n            return\
    \ x + 1;\n        }\n    }\n    public static void main(String[] args) {\n   \
    \ assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l), (12l))\
    \ == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n    assert(chooseNum((5234l),\
    \ (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l),\
    \ (10l)) == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppgym5vcu.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        if (x > y) {\n            return\
    \ -1;\n        }\n        if (x % 2 == 0) {\n            return x;\n        }\n\
    \        return chooseNum(x + 1, y);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn6k7dplf.java:28)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        if (y % 2 ==\
    \ 0) {\n            return y;\n        }\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp53xk2bq3.java:30)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // TODO: Implement this function.\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8nplnmw1.java:22)\n"
  stdout: ''
  timestamp: 1659793722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Write your code here.\n        return -1l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(chooseNum((12l), (15l))\
    \ == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkzzph59w.java:22)\n"
  stdout: ''
  timestamp: 1659793722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // TODO: Implement this function.\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8nplnmw1.java:22)\n"
  stdout: ''
  timestamp: 1659793722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code goes here.\n        return -1;\n    }\n \
    \   public static void main(String[] args) {\n    assert(chooseNum((12l), (15l))\
    \ == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph87li4yg.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        if (x % 2 == 0) {\n       \
    \     return x;\n        } else if (x + 1 <= y) {\n            return x + 1;\n\
    \        } else {\n            return -1;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptrk6_yp3.java:28)\n"
  stdout: ''
  timestamp: 1659793723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // TODO: Implement this function.\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8nplnmw1.java:22)\n"
  stdout: ''
  timestamp: 1659793722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz24btqtn.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n\
    \    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l))\
    \ == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l),\
    \ (29l)) == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxarqbn_.java:22)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        // Your code here\n        if (x > y) {\n            return\
    \ -1;\n        }\n        if (x % 2 == 0) {\n            return x;\n        }\n\
    \        return chooseNum(x + 1, y);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn6k7dplf.java:28)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        if (x > y) {\n            return -1;\n        }\n    \
    \    if (x % 2 == 0) {\n            return x;\n        }\n        return chooseNum(x\
    \ + 1, y);\n    }\n    public static void main(String[] args) {\n    assert(chooseNum((12l),\
    \ (15l)) == (14l));\n    assert(chooseNum((13l), (12l)) == (-1l));\n    assert(chooseNum((33l),\
    \ (12354l)) == (12354l));\n    assert(chooseNum((5234l), (5233l)) == (-1l));\n\
    \    assert(chooseNum((6l), (29l)) == (28l));\n    assert(chooseNum((27l), (10l))\
    \ == (-1l));\n    assert(chooseNum((7l), (7l)) == (-1l));\n    assert(chooseNum((546l),\
    \ (546l)) == (546l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhpo_fu0.java:27)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // This function takes two positive numbers x and y and returns\
    \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    // there's no such number, then the function should return -1.\n  \
    \  // For example:\n    // >>> chooseNum((12l), (15l))\n    // (14l)\n    // >>>\
    \ chooseNum((13l), (12l))\n    // (-1l)\n    public static long chooseNum(long\
    \ x, long y) {\n        long result = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0) {\n                result = i;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(chooseNum((12l), (15l)) == (14l));\n    assert(chooseNum((13l),\
    \ (12l)) == (-1l));\n    assert(chooseNum((33l), (12354l)) == (12354l));\n   \
    \ assert(chooseNum((5234l), (5233l)) == (-1l));\n    assert(chooseNum((6l), (29l))\
    \ == (28l));\n    assert(chooseNum((27l), (10l)) == (-1l));\n    assert(chooseNum((7l),\
    \ (7l)) == (-1l));\n    assert(chooseNum((546l), (546l)) == (546l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793721

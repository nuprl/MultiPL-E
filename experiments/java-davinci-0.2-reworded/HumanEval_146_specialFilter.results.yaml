language: java
name: HumanEval_146_specialFilter
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (Long num : nums) {\n            if (num\
    \ > 10 && num % 2 != 0 && num / 10 % 2 != 0) {\n                count++;\n   \
    \         }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zjhhnv3.java:32)\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && isFirstDigitOdd(num)\
    \ && isLastDigitOdd(num)) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxdcu93ev.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && isFirstDigitOdd(num) && isLastDigitOdd(num)) {\n                   \
    \         ^\n  symbol:   method isFirstDigitOdd(long)\n  location: class Problem\n\
    /tmp/tmpxdcu93ev.java:20: error: cannot find symbol\n            if (num > 10\
    \ && isFirstDigitOdd(num) && isLastDigitOdd(num)) {\n                        \
    \                            ^\n  symbol:   method isLastDigitOdd(long)\n  location:\
    \ class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num > 10 && num % 2 == 1 && num / 10 % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9r2mm3hf.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num > 10 && num % 2 == 1 && num / 10 % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9r2mm3hf.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && isOdd(n) && isOdd(n % 10)).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr8i74t.java:18: error: cannot find symbol\n        return nums.stream().filter(n\
    \ -> n > 10 && isOdd(n) && isOdd(n % 10)).count();\n                         \
    \                          ^\n  symbol:   method isOdd(Long)\n  location: class\
    \ Problem\n/tmp/tmp9pr8i74t.java:18: error: cannot find symbol\n        return\
    \ nums.stream().filter(n -> n > 10 && isOdd(n) && isOdd(n % 10)).count();\n  \
    \                                                             ^\n  symbol:   method\
    \ isOdd(long)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (long num : nums) {\n            if (num\
    \ > 10 && isFirstAndLastDigitOdd(num)) {\n                count++;\n         \
    \   }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpytts6ktf.java:23: error: cannot find symbol\n            if (num\
    \ > 10 && isFirstAndLastDigitOdd(num)) {\n                            ^\n  symbol:\
    \   method isFirstAndLastDigitOdd(long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && (x / 10) % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpehhlfatn.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n / 10 % 2 == 1 && n % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkj981z6u.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && (n % 10) % 2 == 1 && (n / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zkv2sjo.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0gndgpsl.java:25)\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && isOdd(num)\
    \ && isOdd(num % 10)) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbhxysmwp.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                            ^\n  symbol:\
    \   method isOdd(Long)\n  location: class Problem\n/tmp/tmpbhxysmwp.java:20: error:\
    \ cannot find symbol\n            if (num > 10 && isOdd(num) && isOdd(num % 10))\
    \ {\n                                          ^\n  symbol:   method isOdd(long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && (x / 10) % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpehhlfatn.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && isOdd(n) && isOdd(n % 10)).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr8i74t.java:18: error: cannot find symbol\n        return nums.stream().filter(n\
    \ -> n > 10 && isOdd(n) && isOdd(n % 10)).count();\n                         \
    \                          ^\n  symbol:   method isOdd(Long)\n  location: class\
    \ Problem\n/tmp/tmp9pr8i74t.java:18: error: cannot find symbol\n        return\
    \ nums.stream().filter(n -> n > 10 && isOdd(n) && isOdd(n % 10)).count();\n  \
    \                                                             ^\n  symbol:   method\
    \ isOdd(long)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n / 10 % 2 == 1 && n % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkj981z6u.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (long num : nums) {\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                count++;\n       \
    \     }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgy5w0ngw.java:23: error: cannot find symbol\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                            ^\n  symbol:\
    \   method isOdd(long)\n  location: class Problem\n/tmp/tmpgy5w0ngw.java:23: error:\
    \ cannot find symbol\n            if (num > 10 && isOdd(num) && isOdd(num % 10))\
    \ {\n                                          ^\n  symbol:   method isOdd(long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n / 10 % 2 == 1 && n % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkj981z6u.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n / 10 % 2 == 1 && n % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkj981z6u.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Your code\
    \ here\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp25ygbh8j.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && isFirstDigitOdd(num)\
    \ && isLastDigitOdd(num)) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaws3qq8n.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && isFirstDigitOdd(num) && isLastDigitOdd(num)) {\n                   \
    \         ^\n  symbol:   method isFirstDigitOdd(Long)\n  location: class Problem\n\
    /tmp/tmpaws3qq8n.java:20: error: cannot find symbol\n            if (num > 10\
    \ && isFirstDigitOdd(num) && isLastDigitOdd(num)) {\n                        \
    \                            ^\n  symbol:   method isLastDigitOdd(Long)\n  location:\
    \ class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        return 0l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe20viqyr.java:23)\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && (x / 10) % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpehhlfatn.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x % 10 ==\
    \ 1).count();\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb8_1pny8.java:25)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && (n % 10) % 2 == 1 && (n / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zkv2sjo.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && isOdd(num)\
    \ && isOdd(num % 10)) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt4bbni_g.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                            ^\n  symbol:\
    \   method isOdd(long)\n  location: class Problem\n/tmp/tmpt4bbni_g.java:20: error:\
    \ cannot find symbol\n            if (num > 10 && isOdd(num) && isOdd(num % 10))\
    \ {\n                                          ^\n  symbol:   method isOdd(long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (long num : nums) {\n            if (num\
    \ > 10 && num % 2 != 0 && num % 10 != 0) {\n                count++;\n       \
    \     }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpapa5oy6j.java:32)\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n / 10 % 2 == 1 && n % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkj981z6u.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0gndgpsl.java:25)\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10).filter(x -> x % 2 == 1).filter(x -> x / 10 % 2 == 1).count();\n \
    \   }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpycryoo3p.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0ckte3s.java:28)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (Long num : nums) {\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                count++;\n       \
    \     }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa5o7ndd5.java:23: error: cannot find symbol\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                            ^\n  symbol:\
    \   method isOdd(Long)\n  location: class Problem\n/tmp/tmpa5o7ndd5.java:23: error:\
    \ cannot find symbol\n            if (num > 10 && isOdd(num) && isOdd(num % 10))\
    \ {\n                                          ^\n  symbol:   method isOdd(long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && isFirstDigitOdd(num)\
    \ && isLastDigitOdd(num)) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxdcu93ev.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && isFirstDigitOdd(num) && isLastDigitOdd(num)) {\n                   \
    \         ^\n  symbol:   method isFirstDigitOdd(long)\n  location: class Problem\n\
    /tmp/tmpxdcu93ev.java:20: error: cannot find symbol\n            if (num > 10\
    \ && isFirstDigitOdd(num) && isLastDigitOdd(num)) {\n                        \
    \                            ^\n  symbol:   method isLastDigitOdd(long)\n  location:\
    \ class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Your code\
    \ goes here\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcl7m34p8.java:23)\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num / 10 % 2 == 1) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ygsqnri.java:29)\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num > 10 && num % 2 == 1 && num % 10 == 1).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpigybemdo.java:22)\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2p85arz0.java:23)\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && isOdd(num)\
    \ && isOdd(num % 10)) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt4bbni_g.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                            ^\n  symbol:\
    \   method isOdd(long)\n  location: class Problem\n/tmp/tmpt4bbni_g.java:20: error:\
    \ cannot find symbol\n            if (num > 10 && isOdd(num) && isOdd(num % 10))\
    \ {\n                                          ^\n  symbol:   method isOdd(long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (long num : nums) {\n            if (num\
    \ > 10 && isFirstAndLastDigitOdd(num)) {\n                count++;\n         \
    \   }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpytts6ktf.java:23: error: cannot find symbol\n            if (num\
    \ > 10 && isFirstAndLastDigitOdd(num)) {\n                            ^\n  symbol:\
    \   method isFirstAndLastDigitOdd(long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0gndgpsl.java:25)\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0ckte3s.java:28)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0gndgpsl.java:25)\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num > 10 && num % 2 == 1 && num % 10 == 1).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpigybemdo.java:22)\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10).filter(n -> n % 2 == 1).filter(n -> {\n            long n_ = n;\n\
    \            while (n_ > 10) {\n                n_ /= 10;\n            }\n   \
    \         return n_ % 2 == 1;\n        }).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr8uv1930.java:29)\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && isOdd(n) && isOdd(n % 10)).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pr8i74t.java:18: error: cannot find symbol\n        return nums.stream().filter(n\
    \ -> n > 10 && isOdd(n) && isOdd(n % 10)).count();\n                         \
    \                          ^\n  symbol:   method isOdd(Long)\n  location: class\
    \ Problem\n/tmp/tmp9pr8i74t.java:18: error: cannot find symbol\n        return\
    \ nums.stream().filter(n -> n > 10 && isOdd(n) && isOdd(n % 10)).count();\n  \
    \                                                             ^\n  symbol:   method\
    \ isOdd(long)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && (n % 10) % 2 == 1 && (n / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zkv2sjo.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (long num : nums) {\n            if (num\
    \ > 10 && isFirstAndLastDigitOdd(num)) {\n                count++;\n         \
    \   }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpytts6ktf.java:23: error: cannot find symbol\n            if (num\
    \ > 10 && isFirstAndLastDigitOdd(num)) {\n                            ^\n  symbol:\
    \   method isFirstAndLastDigitOdd(long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n / 10 % 2 == 1 && n % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkj981z6u.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (long num : nums) {\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                count++;\n       \
    \     }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgy5w0ngw.java:23: error: cannot find symbol\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                            ^\n  symbol:\
    \   method isOdd(long)\n  location: class Problem\n/tmp/tmpgy5w0ngw.java:23: error:\
    \ cannot find symbol\n            if (num > 10 && isOdd(num) && isOdd(num % 10))\
    \ {\n                                          ^\n  symbol:   method isOdd(long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && (n % 10) % 2 == 1 && (n / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zkv2sjo.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (long num : nums) {\n            if (num\
    \ > 10 && isFirstDigitOdd(num) && isLastDigitOdd(num)) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppfayoayh.java:23: error: cannot find symbol\n            if (num\
    \ > 10 && isFirstDigitOdd(num) && isLastDigitOdd(num)) {\n                   \
    \         ^\n  symbol:   method isFirstDigitOdd(long)\n  location: class Problem\n\
    /tmp/tmppfayoayh.java:23: error: cannot find symbol\n            if (num > 10\
    \ && isFirstDigitOdd(num) && isLastDigitOdd(num)) {\n                        \
    \                            ^\n  symbol:   method isLastDigitOdd(long)\n  location:\
    \ class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n / 10 % 2 == 1 && n % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkj981z6u.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2p85arz0.java:23)\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n / 10 % 2 == 1 && n % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkj981z6u.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n / 10 % 2 == 1 && n % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkj981z6u.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        long count = 0;\n        for (Long num : nums) {\n \
    \           if (num > 10 && num % 2 != 0 && num / 10 % 2 != 0) {\n           \
    \     count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvj8e89_2.java:30)\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10).filter(x -> x % 2 == 1).filter(x -> x / 10 % 2 == 1).count();\n \
    \   }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpycryoo3p.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0gndgpsl.java:25)\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && (n % 10) % 2 == 1 && n / 10 % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxebo96f8.java:23)\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2p85arz0.java:23)\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (long num : nums) {\n            if (num\
    \ > 10 && (num % 2 != 0) && (num / 10 % 2 != 0)) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp04lprc6s.java:32)\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0gndgpsl.java:25)\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && (n % 10) % 2 == 1 && (n / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zkv2sjo.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && (n % 10) % 2 == 1 && (n / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zkv2sjo.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzkudezr.java:28)\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10).filter(x -> x % 2 == 1).filter(x -> {\n            long lastDigit\
    \ = x % 10;\n            while (x > 0) {\n                if (x < 10) {\n    \
    \                return lastDigit % 2 == 1;\n                }\n             \
    \   x /= 10;\n            }\n            return false;\n        }).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx5jzeizc.java:32)\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && isFirstAndLastDigitOdd(num))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps3ewox_0.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && isFirstAndLastDigitOdd(num)) {\n                            ^\n  symbol:\
    \   method isFirstAndLastDigitOdd(long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10).filter(x -> x % 2 == 1).filter(x -> x % 10 == 1 || x % 10 == 3 ||\
    \ x % 10 == 5 || x % 10 == 7 || x % 10 == 9).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4n5_7ma3.java:23)\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && isFirstAndLastDigitOdd(num))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps3ewox_0.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && isFirstAndLastDigitOdd(num)) {\n                            ^\n  symbol:\
    \   method isFirstAndLastDigitOdd(long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (long num : nums) {\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                count++;\n       \
    \     }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgy5w0ngw.java:23: error: cannot find symbol\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                            ^\n  symbol:\
    \   method isOdd(long)\n  location: class Problem\n/tmp/tmpgy5w0ngw.java:23: error:\
    \ cannot find symbol\n            if (num > 10 && isOdd(num) && isOdd(num % 10))\
    \ {\n                                          ^\n  symbol:   method isOdd(long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n / 10 % 2 == 1 && n % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkj981z6u.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num > 10 && isOdd(num)).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpihcleqf4.java:18: error: cannot find symbol\n        return nums.stream().filter(num\
    \ -> num > 10 && isOdd(num)).count();\n                                      \
    \                 ^\n  symbol:   method isOdd(Long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && (n % 10) % 2 == 1 && (n / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zkv2sjo.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (long num : nums) {\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                count++;\n       \
    \     }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgy5w0ngw.java:23: error: cannot find symbol\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                            ^\n  symbol:\
    \   method isOdd(long)\n  location: class Problem\n/tmp/tmpgy5w0ngw.java:23: error:\
    \ cannot find symbol\n            if (num > 10 && isOdd(num) && isOdd(num % 10))\
    \ {\n                                          ^\n  symbol:   method isOdd(long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (long num : nums) {\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                count++;\n       \
    \     }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgy5w0ngw.java:23: error: cannot find symbol\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                            ^\n  symbol:\
    \   method isOdd(long)\n  location: class Problem\n/tmp/tmpgy5w0ngw.java:23: error:\
    \ cannot find symbol\n            if (num > 10 && isOdd(num) && isOdd(num % 10))\
    \ {\n                                          ^\n  symbol:   method isOdd(long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num > 10 && (num % 10) % 2 == 1 && (num / 10) % 2 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsmdp3nsh.java:23)\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num > 10 && num % 2 == 1 && num % 10 == 1).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpigybemdo.java:22)\n"
  stdout: ''
  timestamp: 1659799787
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && (n % 10) % 2 == 1 && (n / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zkv2sjo.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n / 10 % 2 == 1 && n % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkj981z6u.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n / 10 % 2 == 1 && n % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkj981z6u.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && isOdd(num)\
    \ && isOdd(num % 10)) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt4bbni_g.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                            ^\n  symbol:\
    \   method isOdd(long)\n  location: class Problem\n/tmp/tmpt4bbni_g.java:20: error:\
    \ cannot find symbol\n            if (num > 10 && isOdd(num) && isOdd(num % 10))\
    \ {\n                                          ^\n  symbol:   method isOdd(long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x % 10) % 2 == 1 && (x / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry2j94y9.java:23)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0fu91yi.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzws0q2_.java:22)\n"
  stdout: ''
  timestamp: 1659799786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y159itc.java:22)\n"
  stdout: ''
  timestamp: 1659799786

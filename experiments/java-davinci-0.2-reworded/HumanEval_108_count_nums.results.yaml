language: java
name: HumanEval_108_count_nums
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ (char)y).map(y -> y - '0').sum() > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcar9qh3.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ Character.getNumericValue(y)).sum() > 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcn1int0r.java:24)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0 ? x % 9 > 0 : x % 9 <\
    \ 0).count();\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpifjjur4a.java:24)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x < 0 ? x.toString().chars().map(c\
    \ -> c - '0').sum() < 0 : x.toString().chars().map(c -> c - '0').sum() > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgvpfyyi.java:24)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx49u8g1u.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x != 0).map(x -> x < 0 ? -x\
    \ : x).mapToLong(x -> {\n            long sum = 0;\n            while (x > 0)\
    \ {\n                sum += x % 10;\n                x /= 10;\n            }\n\
    \            return sum;\n        }).filter(x -> x > 0).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyq4h3wvx.java:31)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> {\n            long sum = 0;\n\
    \            while (x != 0) {\n                sum += x % 10;\n              \
    \  x /= 10;\n            }\n            return sum > 0;\n        }).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9a4fv_4r.java:35)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ Character.getNumericValue(y)).sum() > 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcn1int0r.java:24)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x != 0).map(x -> x < 0 ? -x\
    \ : x).mapToLong(x -> x).map(x -> x.toString().chars().map(c -> c - '0').sum()).filter(x\
    \ -> x > 0).count();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt1lnmm_w.java:20: error: long cannot be dereferenced\n        return\
    \ arr.stream().filter(x -> x != 0).map(x -> x < 0 ? -x : x).mapToLong(x -> x).map(x\
    \ -> x.toString().chars().map(c -> c - '0').sum()).filter(x -> x > 0).count();\n\
    \                                                                            \
    \                         ^\n1 error\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ Character.getNumericValue(y)).sum() > 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcn1int0r.java:24)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long i : arr) {\n            long\
    \ sum = 0;\n            long n = i;\n            if (n < 0) {\n              \
    \  n = -n;\n            }\n            while (n > 0) {\n                sum +=\
    \ n % 10;\n                n /= 10;\n            }\n            if (sum > 0) {\n\
    \                count++;\n            }\n        }\n        return count;\n \
    \   }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry25wcfz.java:39)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0 || x < 0).filter(x ->\
    \ x.toString().chars().map(y -> y - '0').sum() > 0).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp03biu9qs.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ Character.getNumericValue(y)).sum() > 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcn1int0r.java:24)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx49u8g1u.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn3ve7yu4.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx49u8g1u.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(c ->\
    \ c - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbu0bg0j3.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(c ->\
    \ c - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbu0bg0j3.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // Write your code here\n        // To print results to the\
    \ standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdktwr8eg.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> {\n            long sum = 0;\n\
    \            for (char c : x.toString().toCharArray()) {\n                sum\
    \ += Character.getNumericValue(c);\n            }\n            return sum > 0;\n\
    \        }).count();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi9avr_fa.java:30)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).filter(x -> x.toString().chars().map(y\
    \ -> y - '0').sum() > 0).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn3ve7yu4.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(c ->\
    \ c - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbu0bg0j3.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(c\
    \ -> c - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf0vwzban.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(i -> i.toString().chars().map(c ->\
    \ c - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvg5meqhr.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ Character.getNumericValue(y)).sum() > 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcn1int0r.java:24)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ Character.getNumericValue(y)).sum() > 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcn1int0r.java:24)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> sumDigits(x) > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfdf17ytd.java:20: error: cannot find symbol\n        return arr.stream().filter(x\
    \ -> sumDigits(x) > 0).count();\n                                        ^\n \
    \ symbol:   method sumDigits(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long i : arr) {\n            long\
    \ sum = 0;\n            long num = i;\n            if (num < 0) {\n          \
    \      num = -num;\n                sum -= num % 10;\n                num /= 10;\n\
    \            }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp01jwgt7r.java:45)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx49u8g1u.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x < 0 ? x < -9 : x > 9).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy883m3nn.java:25)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx49u8g1u.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // Fill in the function\n        long count = 0;\n        for\
    \ (long i : arr) {\n            long sum = 0;\n            if (i < 0) {\n    \
    \            sum += i * -1;\n            } else {\n                sum += i;\n\
    \            }\n            while (sum > 0) {\n                sum = sum / 10;\n\
    \                count++;\n            }\n        }\n        return count;\n \
    \   }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzczopmzb.java:38)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x < 0 ? x.toString().chars().map(y\
    \ -> y - '0').sum() < 0 : x.toString().chars().map(y -> y - '0').sum() > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdr22kq_g.java:24)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x != 0).map(x -> x < 0 ? x *\
    \ -1 : x).map(x -> x.toString().chars().map(y -> y - '0').sum()).filter(x -> x\
    \ > 0).count();\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9rlmbso.java:24)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ Character.getNumericValue(y)).sum() > 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcn1int0r.java:24)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx49u8g1u.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(c\
    \ -> c - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf0vwzban.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(c ->\
    \ c - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbu0bg0j3.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long i = 0; i < arr.size(); i++)\
    \ {\n            long sum = 0;\n            long num = arr.get((int)i);\n    \
    \        if (num < 0) {\n                num = -num;\n            }\n        \
    \    while (num > 0) {\n                sum += num % 10;\n                num\
    \ /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpagphgfrv.java:39)\n"
  stdout: ''
  timestamp: 1659798458
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> sumDigits(x) > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfdf17ytd.java:20: error: cannot find symbol\n        return arr.stream().filter(x\
    \ -> sumDigits(x) > 0).count();\n                                        ^\n \
    \ symbol:   method sumDigits(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx49u8g1u.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(n -> n > 0).map(n -> n.toString().chars().map(c\
    \ -> c - '0').sum()).filter(n -> n > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8viv8jbn.java:28)\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> Long.toString(x).chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr48nnr2j.java:28)\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(c ->\
    \ c - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbu0bg0j3.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (Long num : arr) {\n          \
    \  long sum = 0;\n            long n = num;\n            if (n < 0) {\n      \
    \          n = n * -1;\n            }\n            while (n > 0) {\n         \
    \       sum += n % 10;\n                n = n / 10;\n            }\n         \
    \   if (sum > 0) {\n                count++;\n            }\n        }\n     \
    \   return count;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdkbg_1qf.java:39)\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> sumDigits(x) > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfdf17ytd.java:20: error: cannot find symbol\n        return arr.stream().filter(x\
    \ -> sumDigits(x) > 0).count();\n                                        ^\n \
    \ symbol:   method sumDigits(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0efc8f2j.java:25)\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx49u8g1u.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x != 0).filter(x -> x % 9 !=\
    \ 0).count();\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw7jbo7vk.java:24)\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x != 0).filter(x -> x != -1).filter(x\
    \ -> x != 1).filter(x -> x != -2).filter(x -> x != 2).filter(x -> x != -3).filter(x\
    \ -> x != 3).filter(x -> x != -4).filter(x -> x != 4).filter(x -> x != -5).filter(x\
    \ -> x != 5).filter(x -> x != -6).filter(x -> x != 6).filter(x -> x != -7).filter(x\
    \ -> x != 7).filter(x -> x != -8).filter(x -> x != 8).filter(x -> x != -9).filter(x\
    \ -> x != 9).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0qolvr1.java:25)\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx49u8g1u.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long i : arr) {\n            long\
    \ sum = 0;\n            long num = i;\n            if (num < 0) {\n          \
    \      num = -num;\n                sum += -(num % 10);\n                num /=\
    \ 10;\n            }\n            while (num > 0) {\n                sum += num\
    \ % 10;\n                num /= 10;\n            }\n            if (sum > 0) {\n\
    \                count++;\n            }\n        }\n        return count;\n \
    \   }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6sgwnf0.java:45)\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx49u8g1u.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx49u8g1u.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx49u8g1u.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x != 0).map(x -> {\n       \
    \     long sum = 0;\n            long x1 = Math.abs(x);\n            while (x1\
    \ > 0) {\n                sum += x1 % 10;\n                x1 /= 10;\n       \
    \     }\n            return sum;\n        }).filter(x -> x > 0).count();\n   \
    \ }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuyv1z2mp.java:32)\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx49u8g1u.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x != 0).filter(x -> x < 0 ?\
    \ sumDigits(x) > 0 : sumDigits(x) > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbybclzo1.java:20: error: cannot find symbol\n        return arr.stream().filter(x\
    \ -> x != 0).filter(x -> x < 0 ? sumDigits(x) > 0 : sumDigits(x) > 0).count();\n\
    \                                                                    ^\n  symbol:\
    \   method sumDigits(Long)\n  location: class Problem\n/tmp/tmpbybclzo1.java:20:\
    \ error: cannot find symbol\n        return arr.stream().filter(x -> x != 0).filter(x\
    \ -> x < 0 ? sumDigits(x) > 0 : sumDigits(x) > 0).count();\n                 \
    \                                                                      ^\n  symbol:\
    \   method sumDigits(Long)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long i : arr) {\n            long\
    \ sum = 0;\n            long num = i;\n            if (num < 0) {\n          \
    \      num = -num;\n                sum += -i % 10;\n            }\n         \
    \   while (num > 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz1qag58a.java:40)\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ Character.getNumericValue(y)).sum() > 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcn1int0r.java:24)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0 ? x % 9 > 0 : x % 9 <\
    \ 0).count();\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpifjjur4a.java:24)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0 ? x % 9 != 0 : x % 9 !=\
    \ -9).count();\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt5lh0p2j.java:24)\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long i : arr) {\n            long\
    \ sum = 0;\n            long num = i;\n            if (num < 0) {\n          \
    \      num = -num;\n                sum += -i % 10;\n            }\n         \
    \   while (num > 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz1qag58a.java:40)\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> x.toString().chars().map(y\
    \ -> y - '0').sum()).filter(x -> x > 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx49u8g1u.java:28)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ Character.getNumericValue(y)).sum() > 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcn1int0r.java:24)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // Fill in the code here\n        return 0l;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt7aiqb00.java:26)\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long i : arr) {\n            long\
    \ sum = 0;\n            long num = Math.abs(i);\n            while (num > 0) {\n\
    \                sum += num % 10;\n                num /= 10;\n            }\n\
    \            if (sum > 0) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnqq6cq_1.java:36)\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x != 0l).filter(x -> {\n   \
    \         long sum = 0l;\n            long num = x;\n            if (num < 0l)\
    \ {\n                num = -num;\n            }\n            while (num > 0l)\
    \ {\n                sum += num % 10l;\n                num /= 10l;\n        \
    \    }\n            return sum > 0l;\n        }).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxu_0yrmz.java:35)\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long i : arr) {\n            long\
    \ sum = 0;\n            long n = i;\n            if (n < 0) {\n              \
    \  n = -n;\n            }\n            while (n > 0) {\n                sum +=\
    \ n % 10;\n                n /= 10;\n            }\n            if (sum > 0) {\n\
    \                count++;\n            }\n        }\n        return count;\n \
    \   }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry25wcfz.java:39)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x != 0).filter(x -> {\n    \
    \        long sum = 0;\n            long y = Math.abs(x);\n            while (y\
    \ > 0) {\n                sum += y % 10;\n                y /= 10;\n         \
    \   }\n            return sum > 0;\n        }).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqt2f_ey_.java:32)\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).count();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5fwtblyu.java:28)\n"
  stdout: ''
  timestamp: 1659798459
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fni6jrh.java:26)\n"
  stdout: ''
  timestamp: 1659798457

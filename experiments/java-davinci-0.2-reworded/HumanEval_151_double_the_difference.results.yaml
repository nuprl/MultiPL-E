language: java
name: HumanEval_151_double_the_difference
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return lst.stream().filter(x\
    \ -> x % 2 == 1).map(x -> x * x).reduce(0l, (x, y) -> x + y);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpehpz2ei_.java:21: error: no suitable method found for reduce(long,(x,y)->x\
    \ + y)\n        return lst.stream().filter(x -> x % 2 == 1).map(x -> x * x).reduce(0l,\
    \ (x, y) -> x + y);\n                                                        \
    \           ^\n    method Stream.reduce(Float,BinaryOperator<Float>) is not applicable\n\
    \      (argument mismatch; long cannot be converted to Float)\n    method Stream.<U>reduce(U,BiFunction<U,?\
    \ super Float,U>,BinaryOperator<U>) is not applicable\n      (cannot infer type-variable(s)\
    \ U\n        (actual and formal argument lists differ in length))\n  where U,T\
    \ are type-variables:\n    U extends Object declared in method <U>reduce(U,BiFunction<U,?\
    \ super T,U>,BinaryOperator<U>)\n    T extends Object declared in interface Stream\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float i : lst) {\n            if (i > 0 && i % 2 == 1) {\n       \
    \         sum += i * i;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float i : lst) {\n            if (i % 2 == 1) {\n                sum\
    \ += i * i;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += f * f;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)0l;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3tezlqo3.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += f * f;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float i : lst) {\n            if (i % 2 == 1) {\n                sum\
    \ += i * i;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return lst.stream().filter(x\
    \ -> x % 2 == 1).map(x -> x * x).reduce(0l, (x, y) -> x + y);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpehpz2ei_.java:21: error: no suitable method found for reduce(long,(x,y)->x\
    \ + y)\n        return lst.stream().filter(x -> x % 2 == 1).map(x -> x * x).reduce(0l,\
    \ (x, y) -> x + y);\n                                                        \
    \           ^\n    method Stream.reduce(Float,BinaryOperator<Float>) is not applicable\n\
    \      (argument mismatch; long cannot be converted to Float)\n    method Stream.<U>reduce(U,BiFunction<U,?\
    \ super Float,U>,BinaryOperator<U>) is not applicable\n      (cannot infer type-variable(s)\
    \ U\n        (actual and formal argument lists differ in length))\n  where U,T\
    \ are type-variables:\n    U extends Object declared in method <U>reduce(U,BiFunction<U,?\
    \ super T,U>,BinaryOperator<U>)\n    T extends Object declared in interface Stream\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0 && f % 2 == 1) {\n       \
    \         sum += f * f;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float i : lst) {\n            if (i % 2 == 1) {\n                sum\
    \ += i * i;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0 && f % 2 == 1) {\n       \
    \         sum += f * f;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float i : lst) {\n            if (i > 0 && i % 2 == 1) {\n       \
    \         sum += i * i;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f % 2 != 0 && f > 0) {\n       \
    \         sum += Math.pow(f, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += f * f;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float i : lst) {\n            if (i % 2 == 1) {\n                sum\
    \ += i * i;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += f * f;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += f * f;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float i : lst) {\n            if (i % 2 == 1) {\n                sum\
    \ += i * i;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float num : lst) {\n            if (num % 2 == 1 && num >= 0) {\n\
    \                sum += num * num;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float num : lst) {\n            if (num % 2 == 1) {\n            \
    \    sum += num * num;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            float f = lst.get(i);\n\
    \            if (f > 0 && f == Math.floor(f)) {\n                if (f % 2 ==\
    \ 1) {\n                    sum += f * f;\n                }\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)0l;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3tezlqo3.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f % 2 == 1) {\n                sum\
    \ += f * f;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) % 2\
    \ == 1) {\n                sum += Math.pow(lst.get(i), 2);\n            }\n  \
    \      }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float x : lst) {\n            if (x % 2 == 1) {\n                sum\
    \ += x * x;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return lst.stream().filter(x\
    \ -> x % 2 == 1).map(x -> x * x).reduce(0l, (x, y) -> x + y);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpehpz2ei_.java:21: error: no suitable method found for reduce(long,(x,y)->x\
    \ + y)\n        return lst.stream().filter(x -> x % 2 == 1).map(x -> x * x).reduce(0l,\
    \ (x, y) -> x + y);\n                                                        \
    \           ^\n    method Stream.reduce(Float,BinaryOperator<Float>) is not applicable\n\
    \      (argument mismatch; long cannot be converted to Float)\n    method Stream.<U>reduce(U,BiFunction<U,?\
    \ super Float,U>,BinaryOperator<U>) is not applicable\n      (cannot infer type-variable(s)\
    \ U\n        (actual and formal argument lists differ in length))\n  where U,T\
    \ are type-variables:\n    U extends Object declared in method <U>reduce(U,BiFunction<U,?\
    \ super T,U>,BinaryOperator<U>)\n    T extends Object declared in interface Stream\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)0l;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3tezlqo3.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float n : lst) {\n            if (n % 2 == 1 && n > 0) {\n       \
    \         sum += Math.pow(n, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl6g8asa.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bi7fxqs.java:25)\n"
  stdout: ''
  timestamp: 1659793001
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)0l;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3tezlqo3.java:25)\n"
  stdout: ''
  timestamp: 1659793001

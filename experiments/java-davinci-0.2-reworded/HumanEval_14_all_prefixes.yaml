name: HumanEval_14_all_prefixes
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return array list of all prefixes from shortest to longest\
  \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
  a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
  \ string) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
  \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
  asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
  as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n\
  \    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
  W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
completions: ["        ArrayList<String> prefixes = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            result.add(string.substring(0, i + 1));\n        }\n        return\
    \ result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;"]
stop_tokens:
- "\n    }\n"

language: java
name: HumanEval_111_histogram
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ new HashMap<String,Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(histogram((\"a b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnvepo2zk.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        // Your\
    \ code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(histogram((\"a b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpuy2uou5r.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        HashMap<String,Long>\
    \ map = new HashMap<String,Long>();\n        String[] arr = test.split(\" \");\n\
    \        for (String s : arr) {\n            if (map.containsKey(s)) {\n     \
    \           map.put(s, map.get(s) + 1);\n            } else {\n              \
    \  map.put(s, 1l);\n            }\n        }\n        return map;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(histogram((\"a b b a\"\
    )).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"\
    a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4jgxw4av.java:37)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        // TODO:\
    \ implement this method\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(histogram((\"a b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpc5lea408.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        HashMap<String,Long>\
    \ result = new HashMap<String,Long>();\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(histogram((\"a b b a\")).equals((new\
    \ HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"\
    a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6z9tupof.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        HashMap<String,Long>\
    \ result = new HashMap<String,Long>();\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(histogram((\"a b b a\")).equals((new\
    \ HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"\
    a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6z9tupof.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        // Your\
    \ code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(histogram((\"a b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpuy2uou5r.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        // Your\
    \ code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(histogram((\"a b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpuy2uou5r.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        // TODO:\
    \ Implement this function\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(histogram((\"a b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmp7q30ed12.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        // TODO:\
    \ Implement this method\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(histogram((\"a b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmp9_2cf1u7.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        // TODO:\
    \ implement this function\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(histogram((\"a b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpkoyhfu_6.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        // TODO:\
    \ Implement the histogram function\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(histogram((\"a b b a\")).equals((new\
    \ HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"\
    a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmp83t0pqpi.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        HashMap<String,Long>\
    \ result = new HashMap<String,Long>();\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(histogram((\"a b b a\")).equals((new\
    \ HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"\
    a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6z9tupof.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        throw\
    \ new UnsupportedOperationException(\"Not implemented yet\");\n    }\n    public\
    \ static void main(String[] args) {\n    assert(histogram((\"a b b a\")).equals((new\
    \ HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"\
    a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented yet\n\tat Problem.histogram(tmpyyfqkkac.java:24)\n\tat Problem.main(tmpyyfqkkac.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        HashMap<String,Long>\
    \ result = new HashMap<String,Long>();\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(histogram((\"a b b a\")).equals((new\
    \ HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"\
    a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6z9tupof.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        HashMap<String,Long>\
    \ result = new HashMap<String,Long>();\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(histogram((\"a b b a\")).equals((new\
    \ HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"\
    a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6z9tupof.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        // Your\
    \ code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(histogram((\"a b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpuy2uou5r.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        HashMap<String,Long>\
    \ result = new HashMap<String,Long>();\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(histogram((\"a b b a\")).equals((new\
    \ HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"\
    a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6z9tupof.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        HashMap<String,Long>\
    \ result = new HashMap<String,Long>();\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(histogram((\"a b b a\")).equals((new\
    \ HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"\
    a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6z9tupof.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        // Your\
    \ code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(histogram((\"a b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpuy2uou5r.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        // TODO:\
    \ Implement this function.\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(histogram((\"a b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpyaxdujzh.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        HashMap<String,Long>\
    \ result = new HashMap<String,Long>();\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(histogram((\"a b b a\")).equals((new\
    \ HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"\
    a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6z9tupof.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ new HashMap<String,Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(histogram((\"a b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnvepo2zk.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        // Implement\
    \ your solution here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(histogram((\"a b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmp9blhdk97.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        // Your\
    \ code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(histogram((\"a b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpuy2uou5r.java:28)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        throw\
    \ new UnsupportedOperationException(\"histogram not implemented\");\n    }\n \
    \   public static void main(String[] args) {\n    assert(histogram((\"a b b a\"\
    )).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"\
    a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: histogram\
    \ not implemented\n\tat Problem.histogram(tmpsgo5ab86.java:24)\n\tat Problem.main(tmpsgo5ab86.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        HashMap<String,Long>\
    \ map = new HashMap<String,Long>();\n        String[] words = test.split(\" \"\
    );\n        for (String word : words) {\n            if (map.containsKey(word))\
    \ {\n                map.put(word, map.get(word) + 1);\n            } else {\n\
    \                map.put(word, 1l);\n            }\n        }\n        return\
    \ map;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe3xz7tid.java:37)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string representing a space separated lowercase\
    \ letters, return a hash map\n    // of the letter with the most repetition and\
    \ containing the corresponding count.\n    // If several letters have the same\
    \ occurrence, return all of them.\n    // Example:\n    // >>> histogram((\"a\
    \ b c\"))\n    // (new HashMap<String,Long>(Map.of(\"a\", 1l, \"b\", 1l, \"c\"\
    , 1l)))\n    // >>> histogram((\"a b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"a b c a b\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))\n    // >>> histogram((\"b b b b a\"))\n    // (new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))\n    // >>> histogram((\"\"))\n    // (new HashMap<String,Long>())\n\
    \    public static HashMap<String,Long> histogram(String test) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(histogram((\"\
    a b b a\")).equals((new HashMap<String,Long>(Map.of(\"a\", 2l, \"b\", 2l)))));\n\
    \    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 2l, \"b\", 2l)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l, \"b\", 1l, \"c\", 1l, \"d\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\
    r t g\")).equals((new HashMap<String,Long>(Map.of(\"r\", 1l, \"t\", 1l, \"g\"\
    , 1l)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Long>(Map.of(\"\
    b\", 4l)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Long>(Map.of(\"\
    r\", 1l, \"t\", 1l, \"g\", 1l)))));\n    assert(histogram((\"\")).equals((new\
    \ HashMap<String,Long>())));\n    assert(histogram((\"a\")).equals((new HashMap<String,Long>(Map.of(\"\
    a\", 1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.HashMap.equals(Object)\" because the return value of \"Problem.histogram(String)\"\
    \ is null\n\tat Problem.main(tmpndm5clbn.java:27)\n"
  stdout: ''
  timestamp: 1659799246

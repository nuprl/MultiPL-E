name: HumanEval_154_cycpattern_check
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given 2 words. You need to return true if the second\
  \ word or any of its rotations is a substring in the first word\n    // >>> cycpatternCheck((\"\
  abcd\"), (\"abd\"))\n    // (false)\n    // >>> cycpatternCheck((\"hello\"), (\"\
  ell\"))\n    // (true)\n    // >>> cycpatternCheck((\"whassup\"), (\"psus\"))\n\
  \    // (false)\n    // >>> cycpatternCheck((\"abab\"), (\"baa\"))\n    // (true)\n\
  \    // >>> cycpatternCheck((\"efef\"), (\"eeff\"))\n    // (false)\n    // >>>\
  \ cycpatternCheck((\"himenss\"), (\"simen\"))\n    // (true)\n    public static\
  \ boolean cycpatternCheck(String a, String b) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(cycpatternCheck((\"\
  xyzw\"), (\"xyw\")) == (false));\n    assert(cycpatternCheck((\"yello\"), (\"ell\"\
  )) == (true));\n    assert(cycpatternCheck((\"whattup\"), (\"ptut\")) == (false));\n\
  \    assert(cycpatternCheck((\"efef\"), (\"fee\")) == (true));\n    assert(cycpatternCheck((\"\
  abab\"), (\"aabb\")) == (false));\n    assert(cycpatternCheck((\"winemtt\"), (\"\
  tinem\")) == (true));\n    }\n\n}\n"
completions: ["        if (a.length() < b.length()) {\n            return false;\n\
    \        }\n        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i)\
    \ == b.charAt(0)) {\n                if (a.substring(i, i + b.length()).equals(b))\
    \ {\n                    return true;\n                }\n            }\n    \
    \    }\n        return false;", "        if (a.length() < b.length()) {\n    \
    \        return false;\n        }\n        String c = b + b;\n        return c.contains(a);",
  "        int n = a.length();\n        int m = b.length();\n        if (n < m) return\
    \ false;\n        StringBuilder sb = new StringBuilder();\n        sb.append(a);\n\
    \        sb.append(a);\n        String s = sb.toString();\n        for (int i\
    \ = 0; i < n; i++) {\n            if (s.substring(i, i + m).equals(b)) return\
    \ true;\n        }\n        return false;", "        if (a.length() < b.length())\
    \ {\n            return false;\n        }\n        String c = b + b;\n       \
    \ return c.contains(a);", "        int n = a.length();\n        int m = b.length();\n\
    \        if (m > n) {\n            return false;\n        }\n        for (int\
    \ i = 0; i < n; i++) {\n            if (a.charAt(i) == b.charAt(0)) {\n      \
    \          int j = 0;\n                while (j < m && i + j < n && a.charAt(i\
    \ + j) == b.charAt(j)) {\n                    j++;\n                }\n      \
    \          if (j == m) {\n                    return true;\n                }\n\
    \            }\n        }\n        return false;", "        // >>> cycpatternCheck((\"\
    abcd\"), (\"abd\"))\n        // (false)\n        // >>> cycpatternCheck((\"hello\"\
    ), (\"ell\"))\n        // (true)\n        // >>> cycpatternCheck((\"whassup\"\
    ), (\"psus\"))\n        // (false)\n        // >>> cycpatternCheck((\"abab\"),\
    \ (\"baa\"))\n        // (true)\n        // >>> cycpatternCheck((\"efef\"), (\"\
    eeff\"))\n        // (false)\n        // >>> cycpatternCheck((\"himenss\"), (\"\
    simen\"))\n        // (true)\n        if (a.length() < b.length()) {\n       \
    \     return false;\n        }\n        if (a.contains(b)) {\n            return\
    \ true;\n        }\n        for (int i = 0; i < b.length(); i++) {\n         \
    \   StringBuilder sb = new StringBuilder();\n            sb.append(b.substring(i,\
    \ b.length()));\n            sb.append(b.substring(0, i));\n            if (a.contains(sb.toString()))\
    \ {\n                return true;\n            }\n        }\n        return false;",
  "        if (a.length() < b.length()) {\n            return false;\n        }\n\
    \        StringBuilder sb = new StringBuilder(b);\n        for (int i = 0; i <\
    \ b.length(); i++) {\n            sb.append(sb.charAt(0));\n            sb.deleteCharAt(0);\n\
    \            if (a.contains(sb.toString())) {\n                return true;\n\
    \            }\n        }\n        return false;", "        // >>> cycpatternCheck((\"\
    abcd\"), (\"abd\"))\n        // (false)\n        // >>> cycpatternCheck((\"hello\"\
    ), (\"ell\"))\n        // (true)\n        // >>> cycpatternCheck((\"whassup\"\
    ), (\"psus\"))\n        // (false)\n        // >>> cycpatternCheck((\"abab\"),\
    \ (\"baa\"))\n        // (true)\n        // >>> cycpatternCheck((\"efef\"), (\"\
    eeff\"))\n        // (false)\n        // >>> cycpatternCheck((\"himenss\"), (\"\
    simen\"))\n        // (true)\n        // >>> cycpatternCheck((\"abcd\"), (\"abd\"\
    ))\n        // (false)\n        // >>> cycpatternCheck((\"hello\"), (\"ell\"))\n\
    \        // (true)\n        // >>> cycpatternCheck((\"whassup\"), (\"psus\"))\n\
    \        // (false)\n        // >>> cycpatternCheck((\"abab\"), (\"baa\"))\n \
    \       // (true)\n        // >>> cycpatternCheck((\"efef\"), (\"eeff\"))\n  \
    \      // (false)\n        // >>> cycpatternCheck((\"himenss\"), (\"simen\"))\n\
    \        // (true)\n        // >>> cycpatternCheck((\"abcd\"), (\"abd\"))\n  \
    \      // (false)\n        // >>> cycpatternCheck((\"hello\"), (\"ell\"))\n  \
    \      // (true)\n        // >>> cycpatternCheck((\"whassup\"), (\"psus\"))\n\
    \        // (false)\n        // >>> cycpatternCheck((\"abab\"), (\"baa\"))\n \
    \       // (true)\n        // >>> cycpatternCheck((\"efef\"), (\"eeff\"))\n  \
    \      // (false)\n        // >>> cycpatternCheck((\"himenss\"), (\"simen\"))\n\
    \        // (true)\n        // >>> cycpatternCheck((\"abcd\"), (\"abd\"))\n  \
    \      // (false)\n        // >>> cycpatternCheck((\"hello\"), (\"ell\"))\n  \
    \      // (true)\n        // >>> cycpatternCheck((\"whassup\"), (\"psus\"))\n\
    \        // (false)\n        // >>> cycpatternCheck((\"abab\"), (\"baa\"))\n \
    \       // (true)\n        // >>> cycpattern", "        if (a.length() < b.length())\
    \ return false;\n        if (a.length() == b.length()) return a.equals(b);\n \
    \       int len = b.length();\n        for (int i = 0; i < len; i++) {\n     \
    \       b = b.substring(1) + b.charAt(0);\n            if (a.contains(b)) return\
    \ true;\n        }\n        return false;", "        if (a.length() < b.length())\
    \ {\n            return false;\n        }\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(0)) {\n                if (a.substring(i,\
    \ i + b.length()).equals(b)) {\n                    return true;\n           \
    \     }\n            }\n        }\n        return false;", "        if (a.length()\
    \ == 0 || b.length() == 0) {\n            return false;\n        }\n        if\
    \ (a.length() < b.length()) {\n            return false;\n        }\n        if\
    \ (a.length() == b.length()) {\n            return a.equals(b);\n        }\n \
    \       for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(0)) {\n                int j = 0;\n                while (j < b.length()\
    \ && a.charAt((i + j) % a.length()) == b.charAt(j)) {\n                    j++;\n\
    \                }\n                if (j == b.length()) {\n                 \
    \   return true;\n                }\n            }\n        }\n        return\
    \ false;", "        if (a.length() < b.length()) {\n            return false;\n\
    \        }\n        StringBuilder sb = new StringBuilder(b);\n        for (int\
    \ i = 0; i < b.length(); i++) {\n            if (a.contains(sb.toString())) {\n\
    \                return true;\n            }\n            sb.append(sb.charAt(0));\n\
    \            sb.deleteCharAt(0);\n        }\n        return false;", "       \
    \ if (a.length() < b.length()) {\n            return false;\n        }\n     \
    \   StringBuilder sb = new StringBuilder(b);\n        for (int i = 0; i < b.length();\
    \ i++) {\n            if (a.contains(sb.toString())) {\n                return\
    \ true;\n            }\n            sb.append(sb.charAt(0));\n            sb.deleteCharAt(0);\n\
    \        }\n        return false;", "        if (a.length() < b.length()) {\n\
    \            return false;\n        }\n        StringBuilder sb = new StringBuilder(b);\n\
    \        for (int i = 0; i < b.length(); i++) {\n            sb.append(sb.charAt(0));\n\
    \            sb.deleteCharAt(0);\n            if (a.contains(sb.toString())) {\n\
    \                return true;\n            }\n        }\n        return false;",
  '        return a.contains(b) || a.contains(b.substring(1) + b.substring(0, 1));',
  "        if (a.length() < b.length()) {\n            return false;\n        }\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(0)) {\n                if (a.substring(i, i + b.length()).equals(b))\
    \ {\n                    return true;\n                }\n            }\n    \
    \    }\n        return false;", "        // >>> cycpatternCheck((\"abcd\"), (\"\
    abd\"))\n        // (false)\n        // >>> cycpatternCheck((\"hello\"), (\"ell\"\
    ))\n        // (true)\n        // >>> cycpatternCheck((\"whassup\"), (\"psus\"\
    ))\n        // (false)\n        // >>> cycpatternCheck((\"abab\"), (\"baa\"))\n\
    \        // (true)\n        // >>> cycpatternCheck((\"efef\"), (\"eeff\"))\n \
    \       // (false)\n        // >>> cycpatternCheck((\"himenss\"), (\"simen\"))\n\
    \        // (true)\n        if (a.length() < b.length()) {\n            return\
    \ false;\n        }\n        if (a.contains(b)) {\n            return true;\n\
    \        }\n        for (int i = 0; i < b.length(); i++) {\n            String\
    \ b1 = b.substring(i) + b.substring(0, i);\n            if (a.contains(b1)) {\n\
    \                return true;\n            }\n        }\n        return false;",
  "        // Your code here\n        if (a.length() < b.length()) {\n           \
    \ return false;\n        }\n        String bb = b + b;\n        return bb.contains(a);",
  "        if (a.length() < b.length()) {\n            return false;\n        }\n\
    \        if (a.length() == b.length()) {\n            return a.equals(b);\n  \
    \      }\n        StringBuilder sb = new StringBuilder(a);\n        for (int i\
    \ = 0; i < a.length(); i++) {\n            sb.append(sb.charAt(0));\n        \
    \    sb.deleteCharAt(0);\n            if (sb.toString().contains(b)) {\n     \
    \           return true;\n            }\n        }\n        return false;", " \
    \       // >>> cycpatternCheck((\"abcd\"), (\"abd\"))\n        // (false)\n  \
    \      // >>> cycpatternCheck((\"hello\"), (\"ell\"))\n        // (true)\n   \
    \     // >>> cycpatternCheck((\"whassup\"), (\"psus\"))\n        // (false)\n\
    \        // >>> cycpatternCheck((\"abab\"), (\"baa\"))\n        // (true)\n  \
    \      // >>> cycpatternCheck((\"efef\"), (\"eeff\"))\n        // (false)\n  \
    \      // >>> cycpatternCheck((\"himenss\"), (\"simen\"))\n        // (true)\n\
    \        // >>> cycpatternCheck((\"abcd\"), (\"abd\"))\n        // (false)\n \
    \       // >>> cycpatternCheck((\"hello\"), (\"ell\"))\n        // (true)\n  \
    \      // >>> cycpatternCheck((\"whassup\"), (\"psus\"))\n        // (false)\n\
    \        // >>> cycpatternCheck((\"abab\"), (\"baa\"))\n        // (true)\n  \
    \      // >>> cycpatternCheck((\"efef\"), (\"eeff\"))\n        // (false)\n  \
    \      // >>> cycpatternCheck((\"himenss\"), (\"simen\"))\n        // (true)\n\
    \        // >>> cycpatternCheck((\"abcd\"), (\"abd\"))\n        // (false)\n \
    \       // >>> cycpatternCheck((\"hello\"), (\"ell\"))\n        // (true)\n  \
    \      // >>> cycpatternCheck((\"whassup\"), (\"psus\"))\n        // (false)\n\
    \        // >>> cycpatternCheck((\"abab\"), (\"baa\"))\n        // (true)\n  \
    \      // >>> cycpatternCheck((\"efef\"), (\"eeff\"))\n        // (false)\n  \
    \      // >>> cycpatternCheck((\"himenss\"), (\"simen\"))\n        // (true)\n\
    \        // >>> cycpatternCheck((\"abcd\"), (\"abd\"))\n        // (false)\n \
    \       // >>> cycpatternCheck((\"hello\"), (\"ell\"))\n        // (true)\n  \
    \      // >>> cycpatternCheck((\"whassup\"), (\"psus\"))\n        // (false)\n\
    \        // >>> cycpatternCheck((\"abab\"), (\"baa\"))\n        // (true)\n  \
    \      // >>> cycpattern"]
stop_tokens:
- "\n    }\n"

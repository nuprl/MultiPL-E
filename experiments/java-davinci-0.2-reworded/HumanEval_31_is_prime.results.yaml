language: java
name: HumanEval_31_is_prime
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        for (long i = 2; i * i <= n; i++) {\n            if (n % i == 0)\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (int i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i +\
    \ 2) == 0) {\n                return false;\n            }\n        }\n      \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        for (long i = 2; i * i <= n; i++) {\n            if (n % i == 0)\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (int i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i +\
    \ 2) == 0) {\n                return false;\n            }\n        }\n      \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n \
    \               return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n \
    \               return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        for (long i = 2; i * i <= n; i++) {\n            if (n % i == 0)\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        for (long i = 2; i * i <= n; i++) {\n            if (n % i == 0)\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        for (long i = 2; i * i <= n; i++) {\n            if (n % i == 0)\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n \
    \               return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i <= Math.sqrt(n); i += 2) {\n            if (n % i == 0) {\n              \
    \  return false;\n            }\n        }\n        return true;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n \
    \   assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (int i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i +\
    \ 2) == 0) {\n                return false;\n            }\n        }\n      \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        for (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n %\
    \ i == 0) {\n                return false;\n            }\n        }\n       \
    \ return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 2 || n == 3) {\n            return true;\n\
    \        }\n        if (n % 2 == 0 || n % 3 == 0) {\n            return false;\n\
    \        }\n        long sqrtN = (long) Math.sqrt(n) + 1;\n        for (long i\
    \ = 6l; i <= sqrtN; i += 6) {\n            if (n % (i - 1) == 0 || n % (i + 1)\
    \ == 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpco__6fnm.java:46)\n"
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (long i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i\
    \ + 2) == 0) {\n                return false;\n            }\n        }\n    \
    \    return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (long i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i\
    \ + 2) == 0) {\n                return false;\n            }\n        }\n    \
    \    return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (long i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i\
    \ + 2) == 0) {\n                return false;\n            }\n        }\n    \
    \    return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i <= Math.sqrt(n); i += 2) {\n            if (n % i == 0) {\n              \
    \  return false;\n            }\n        }\n        return true;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n \
    \   assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (long i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i\
    \ + 2) == 0) {\n                return false;\n            }\n        }\n    \
    \    return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (int i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i +\
    \ 2) == 0) {\n                return false;\n            }\n        }\n      \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (long i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i\
    \ + 2) == 0) {\n                return false;\n            }\n        }\n    \
    \    return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i <= Math.sqrt(n); i += 2) {\n            if (n % i == 0) {\n              \
    \  return false;\n            }\n        }\n        return true;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n \
    \   assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        for (long i = 2; i * i <= n; i++) {\n            if (n % i == 0)\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        for (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i\
    \ == 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        for (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n %\
    \ i == 0) {\n                return false;\n            }\n        }\n       \
    \ return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) return false;\n        if (n == 2) return\
    \ true;\n        if (n % 2 == 0) return false;\n        for (long i = 3; i * i\
    \ <= n; i += 2) {\n            if (n % i == 0) return false;\n        }\n    \
    \    return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (int i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i +\
    \ 2) == 0) {\n                return false;\n            }\n        }\n      \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        for (long i = 2; i * i <= n; i++) {\n            if (n % i == 0)\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        for (long i = 2; i * i <= n; i++) {\n            if (n % i == 0)\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (int i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i +\
    \ 2) == 0) {\n                return false;\n            }\n        }\n      \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (int i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i +\
    \ 2) == 0) {\n                return false;\n            }\n        }\n      \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (int i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i +\
    \ 2) == 0) {\n                return false;\n            }\n        }\n      \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        for (long i = 2; i * i <= n; i++) {\n            if (n % i == 0)\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) return false;\n        if (n == 2) return\
    \ true;\n        if (n % 2 == 0) return false;\n        for (long i = 3; i * i\
    \ <= n; i += 2)\n            if (n % i == 0) return false;\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        long sqrt = (long)\
    \ Math.sqrt(n);\n        for (long i = 3; i <= sqrt; i += 2) {\n            if\
    \ (n % i == 0) {\n                return false;\n            }\n        }\n  \
    \      return true;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        for (long i = 2; i * i <= n; i++) {\n            if (n % i == 0)\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        for (long i = 2; i * i <= n; i++) {\n            if (n % i == 0)\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) return false;\n        if (n <= 3) return\
    \ true;\n        if (n % 2 == 0 || n % 3 == 0) return false;\n        for (int\
    \ i = 5; i * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0)\
    \ return false;\n        }\n        return true;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (int i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i +\
    \ 2) == 0) {\n                return false;\n            }\n        }\n      \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (long i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i\
    \ + 2) == 0) {\n                return false;\n            }\n        }\n    \
    \    return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (int i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i +\
    \ 2) == 0) {\n                return false;\n            }\n        }\n      \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        // >>> isPrime((6l))\n        // (false)\n      \
    \  // >>> isPrime((101l))\n        // (true)\n        // >>> isPrime((11l))\n\
    \        // (true)\n        // >>> isPrime((13441l))\n        // (true)\n    \
    \    // >>> isPrime((61l))\n        // (true)\n        // >>> isPrime((4l))\n\
    \        // (false)\n        // >>> isPrime((1l))\n        // (false)\n      \
    \  if (n == 1) {\n            return false;\n        }\n        if (n == 2) {\n\
    \            return true;\n        }\n        if (n % 2 == 0) {\n            return\
    \ false;\n        }\n        for (long i = 3; i * i <= n; i += 2) {\n        \
    \    if (n % i == 0) {\n                return false;\n            }\n       \
    \ }\n        return true;\n    }\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n \
    \               return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (int i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i +\
    \ 2) == 0) {\n                return false;\n            }\n        }\n      \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n <= 1) {\n            return false;\n      \
    \  }\n        if (n <= 3) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (int i = 5; i * i <= n; i = i + 6) {\n            if (n % i == 0 || n % (i +\
    \ 2) == 0) {\n                return false;\n            }\n        }\n      \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n == 1) {\n            return false;\n      \
    \  }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    //\
    \ (true)\n    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n\
    \    // (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n\
    \    // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
    \ isPrime(long n) {\n        if (n < 2) {\n            return false;\n       \
    \ }\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (long i = 3;\
    \ i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792758

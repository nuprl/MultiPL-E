name: HumanEval_57_monotonic
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return true is array list elements are monotonically increasing\
  \ or decreasing.\n    // >>> monotonic((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)4l, (long)20l))))\n    // (true)\n    // >>> monotonic((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)20l, (long)4l, (long)10l))))\n    // (false)\n    // >>> monotonic((new\
  \ ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)0l, (long)-10l))))\n \
  \   // (true)\n    public static boolean monotonic(ArrayList<Long> l) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(monotonic((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)10l)))) == (true));\n\
  \    assert(monotonic((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l,\
  \ (long)20l)))) == (true));\n    assert(monotonic((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)20l, (long)4l, (long)10l)))) == (false));\n    assert(monotonic((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)1l, (long)0l, (long)-10l)))) == (true));\n    assert(monotonic((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)1l, (long)1l, (long)0l)))) == (true));\n    assert(monotonic((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)2l, (long)5l, (long)60l)))) == (false));\n    assert(monotonic((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
  \ (long)60l)))) == (true));\n    assert(monotonic((new ArrayList<Long>(Arrays.asList((long)9l,\
  \ (long)9l, (long)9l, (long)9l)))) == (true));\n    }\n\n}\n"
completions: ["        if (l.size() <= 1) {\n            return true;\n        }\n\
    \        boolean increasing = l.get(0) < l.get(1);\n        for (int i = 1; i\
    \ < l.size() - 1; i++) {\n            if (increasing) {\n                if (l.get(i)\
    \ > l.get(i + 1)) {\n                    return false;\n                }\n  \
    \          } else {\n                if (l.get(i) < l.get(i + 1)) {\n        \
    \            return false;\n                }\n            }\n        }\n    \
    \    return true;", "        // Your code here\n        return false;", "    \
    \    boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1))\
    \ {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ < l.get(i + 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;", "        if (l.size() <= 1)\
    \ {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing) {\n                if (l.get(i) > l.get(i + 1)) {\n           \
    \         return false;\n                }\n            } else {\n           \
    \     if (l.get(i) < l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            }\n        }\n        return true;", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;", '        return true;', "   \
    \     boolean increasing = true;\n        boolean decreasing = true;\n       \
    \ for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;", '        return l.stream().reduce((a,
    b) -> a <= b ? b : a).get() == l.get(l.size() - 1) || l.stream().reduce((a, b)
    -> a >= b ? b : a).get() == l.get(l.size() - 1);', "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() <= 1) {\n            return true;\n \
    \       }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;", '        return false;', "        if (l.size()\
    \ < 2) {\n            return true;\n        }\n        int i = 0;\n        while\
    \ (i < l.size() - 1) {\n            if (l.get(i) > l.get(i + 1)) {\n         \
    \       break;\n            }\n            i = i + 1;\n        }\n        if (i\
    \ == l.size() - 1) {\n            return true;\n        }\n        i = 0;\n  \
    \      while (i < l.size() - 1) {\n            if (l.get(i) < l.get(i + 1)) {\n\
    \                break;\n            }\n            i = i + 1;\n        }\n  \
    \      if (i == l.size() - 1) {\n            return true;\n        }\n       \
    \ return false;", '        return l.stream().reduce((a, b) -> a.equals(b) ? a
    : null) != null;', "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing) {\n                if (l.get(i) > l.get(i\
    \ + 1)) {\n                    return false;\n                }\n            }\
    \ else {\n                if (l.get(i) < l.get(i + 1)) {\n                   \
    \ return false;\n                }\n            }\n        }\n        return true;",
  '        return l.stream().reduce((a, b) -> a.equals(b) ? a : null) != null;', " \
    \       boolean increasing = true;\n        boolean decreasing = true;\n     \
    \   for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;", "        // Your\
    \ code here\n        return false;", "        if (l.size() == 0) {\n         \
    \   return true;\n        }\n        long prev = l.get(0);\n        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            long curr = l.get(i);\n            if (curr > prev) {\n\
    \                decreasing = false;\n            }\n            if (curr < prev)\
    \ {\n                increasing = false;\n            }\n            prev = curr;\n\
    \        }\n        return increasing || decreasing;", "        if (l.size() ==\
    \ 0) {\n            return true;\n        }\n        long prev = l.get(0);\n \
    \       boolean increasing = true;\n        boolean decreasing = true;\n     \
    \   for (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n\
    \            if (curr > prev) {\n                decreasing = false;\n       \
    \     }\n            if (curr < prev) {\n                increasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() == 0) {\n            return true;\n \
    \       }\n        boolean increasing = true;\n        boolean decreasing = true;\n\
    \        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i - 1) >\
    \ l.get(i)) {\n                increasing = false;\n            }\n          \
    \  if (l.get(i - 1) < l.get(i)) {\n                decreasing = false;\n     \
    \       }\n        }\n        return increasing || decreasing;", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;", "        if (l.size() <= 1) {\n\
    \            return true;\n        }\n        boolean increasing = l.get(0) <\
    \ l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing && l.get(i) > l.get(i + 1)) {\n                return false;\n \
    \           }\n            if (!increasing && l.get(i) < l.get(i + 1)) {\n   \
    \             return false;\n            }\n        }\n        return true;",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;", "        boolean increasing =\
    \ true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() <= 1) {\n            return true;\n \
    \       }\n        boolean increasing = true;\n        boolean decreasing = true;\n\
    \        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i\
    \ - 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) > l.get(i - 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;", '        return l.stream().reduce((a,
    b) -> a.longValue() - b.longValue()).get().longValue() == 0;', "        if (l.size()\
    \ < 2) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing && l.get(i) > l.get(i + 1)) {\n                return false;\n \
    \           }\n            if (!increasing && l.get(i) < l.get(i + 1)) {\n   \
    \             return false;\n            }\n        }\n        return true;",
  "        if (l.size() == 0) {\n            return true;\n        }\n        long\
    \ prev = l.get(0);\n        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 1; i < l.size(); i++) {\n            long curr\
    \ = l.get(i);\n            if (curr < prev) {\n                increasing = false;\n\
    \            }\n            if (curr > prev) {\n                decreasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() <= 1) {\n            return true;\n \
    \       }\n        boolean increasing = true;\n        boolean decreasing = true;\n\
    \        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i\
    \ - 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) > l.get(i - 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;", "        if (l.size()\
    \ < 2) {\n            return true;\n        }\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) < l.get(i - 1)) {\n                increasing =\
    \ false;\n            }\n            if (l.get(i) > l.get(i - 1)) {\n        \
    \        decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() < 2) {\n            return true;\n  \
    \      }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;", "        boolean increasing = true;\n     \
    \   boolean decreasing = true;\n        for (int i = 0; i < l.size() - 1; i++)\
    \ {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing =\
    \ false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n        \
    \        decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() <= 1) {\n            return true;\n \
    \       }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;", "        if (l.size() <= 1) {\n           \
    \ return true;\n        }\n        boolean increasing = l.get(0) < l.get(1);\n\
    \        for (int i = 1; i < l.size() - 1; i++) {\n            if (increasing\
    \ && l.get(i) > l.get(i + 1)) {\n                return false;\n            }\n\
    \            if (!increasing && l.get(i) < l.get(i + 1)) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        if (l.size()\
    \ <= 1) {\n            return true;\n        }\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            increasing = increasing && (l.get(i) >= l.get(i - 1));\n    \
    \        decreasing = decreasing && (l.get(i) <= l.get(i - 1));\n        }\n \
    \       return increasing || decreasing;", "        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 0; i < l.size() - 1;\
    \ i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing) {\n                if (l.get(i) > l.get(i\
    \ + 1)) {\n                    return false;\n                }\n            }\
    \ else {\n                if (l.get(i) < l.get(i + 1)) {\n                   \
    \ return false;\n                }\n            }\n        }\n        return true;",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;", "        if (l.size()\
    \ < 2) {\n            return true;\n        }\n        long prev = l.get(0);\n\
    \        boolean increasing = true;\n        boolean decreasing = true;\n    \
    \    for (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n\
    \            if (curr < prev) {\n                increasing = false;\n       \
    \     }\n            if (curr > prev) {\n                decreasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;", "        return l.stream().reduce((a, b) -> {\n           \
    \ if (a == b) {\n                return a;\n            } else if (a < b) {\n\
    \                return (long)1l;\n            } else {\n                return\
    \ (long)-1l;\n            }\n        }).get() != (long)0l;", "        if (l.size()\
    \ < 2) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing) {\n                if (l.get(i) > l.get(i + 1)) {\n           \
    \         return false;\n                }\n            } else {\n           \
    \     if (l.get(i) < l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            }\n        }\n        return true;", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;", "        if (l.size() <= 1) {\n\
    \            return true;\n        }\n        boolean increasing = true;\n   \
    \     boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++) {\n\
    \            if (l.get(i) < l.get(i - 1)) {\n                increasing = false;\n\
    \            }\n            if (l.get(i) > l.get(i - 1)) {\n                decreasing\
    \ = false;\n            }\n        }\n        return increasing || decreasing;",
  "        if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing && l.get(i) > l.get(i + 1)) {\n         \
    \       return false;\n            }\n            if (!increasing && l.get(i)\
    \ < l.get(i + 1)) {\n                return false;\n            }\n        }\n\
    \        return true;", "        long prev = l.get(0);\n        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            if (l.get(i) < prev) {\n                increasing = false;\n\
    \            }\n            if (l.get(i) > prev) {\n                decreasing\
    \ = false;\n            }\n            prev = l.get(i);\n        }\n        return\
    \ increasing || decreasing;", "        if (l.size() == 0) {\n            return\
    \ true;\n        }\n        long last = l.get(0);\n        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            long curr = l.get(i);\n            if (curr < last) {\n\
    \                increasing = false;\n            }\n            if (curr > last)\
    \ {\n                decreasing = false;\n            }\n            last = curr;\n\
    \        }\n        return increasing || decreasing;", "        if (l.size() <\
    \ 2) {\n            return true;\n        }\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) < l.get(i - 1)) {\n                increasing =\
    \ false;\n            }\n            if (l.get(i) > l.get(i - 1)) {\n        \
    \        decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  long last = l.get(0);\n        boolean increasing = true;\n        boolean\
    \ decreasing = true;\n        for (long x : l) {\n            if (x < last) {\n\
    \                increasing = false;\n            }\n            if (x > last)\
    \ {\n                decreasing = false;\n            }\n            last = x;\n\
    \        }\n        return increasing || decreasing;", "        if (l.size() ==\
    \ 0) {\n            return true;\n        }\n        long prev = l.get(0);\n \
    \       boolean increasing = true;\n        boolean decreasing = true;\n     \
    \   for (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n\
    \            if (curr < prev) {\n                increasing = false;\n       \
    \     }\n            if (curr > prev) {\n                decreasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1))\
    \ {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ < l.get(i + 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;", "        return l.stream().reduce((a,\
    \ b) -> a <= b ? b : null) != null ||\n            l.stream().reduce((a, b) ->\
    \ a >= b ? b : null) != null;", "        if (l.size() < 2) {\n            return\
    \ true;\n        }\n        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i\
    \ - 1) > l.get(i)) {\n                increasing = false;\n            }\n   \
    \         if (l.get(i - 1) < l.get(i)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing) {\n                if (l.get(i) > l.get(i\
    \ + 1)) {\n                    return false;\n                }\n            }\
    \ else {\n                if (l.get(i) < l.get(i + 1)) {\n                   \
    \ return false;\n                }\n            }\n        }\n        return true;",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;", "        boolean increasing =\
    \ true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() < 2) {\n            return true;\n  \
    \      }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing && l.get(i) > l.get(i\
    \ + 1)) {\n                return false;\n            }\n            if (!increasing\
    \ && l.get(i) < l.get(i + 1)) {\n                return false;\n            }\n\
    \        }\n        return true;", "        boolean increasing = true;\n     \
    \   boolean decreasing = true;\n        for (int i = 0; i < l.size() - 1; i++)\
    \ {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing =\
    \ false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n        \
    \        decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() < 2) {\n            return true;\n  \
    \      }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;", "        if (l.size() < 2) {\n            return\
    \ true;\n        }\n        boolean increasing = l.get(0) < l.get(1);\n      \
    \  for (int i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n \
    \               if (l.get(i) > l.get(i + 1)) {\n                    return false;\n\
    \                }\n            } else {\n                if (l.get(i) < l.get(i\
    \ + 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;", "        if (l.size() == 0) {\n           \
    \ return true;\n        }\n        boolean increasing = true;\n        boolean\
    \ decreasing = true;\n        for (int i = 1; i < l.size(); i++) {\n         \
    \   if (l.get(i) > l.get(i - 1)) {\n                decreasing = false;\n    \
    \        }\n            if (l.get(i) < l.get(i - 1)) {\n                increasing\
    \ = false;\n            }\n        }\n        return increasing || decreasing;",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) < l.get(i\
    \ + 1)) {\n                decreasing = false;\n            }\n            if\
    \ (l.get(i) > l.get(i + 1)) {\n                increasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;", "        if (l.size()\
    \ <= 1) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing) {\n                if (l.get(i) > l.get(i + 1)) {\n           \
    \         return false;\n                }\n            } else {\n           \
    \     if (l.get(i) < l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            }\n        }\n        return true;", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;", "        return l.stream().reduce((a,\
    \ b) -> {\n            if (a < b) {\n                return (long) 1l;\n     \
    \       } else if (a > b) {\n                return (long) -1l;\n            }\
    \ else {\n                return (long) 0l;\n            }\n        }).get() !=\
    \ (long) 0l;", "        if (l.size() <= 1) {\n            return true;\n     \
    \   }\n        long prev = l.get(0);\n        boolean increasing = false;\n  \
    \      boolean decreasing = false;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            long curr = l.get(i);\n            if (curr > prev) {\n     \
    \           increasing = true;\n            } else if (curr < prev) {\n      \
    \          decreasing = true;\n            }\n            if (increasing && decreasing)\
    \ {\n                return false;\n            }\n            prev = curr;\n\
    \        }\n        return true;", "        if (l.size() <= 1) {\n           \
    \ return true;\n        }\n        long prev = l.get(0);\n        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            long curr = l.get(i);\n            if (curr < prev) {\n\
    \                increasing = false;\n            }\n            if (curr > prev)\
    \ {\n                decreasing = false;\n            }\n            prev = curr;\n\
    \        }\n        return increasing || decreasing;", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() == 0) {\n            return true;\n \
    \       }\n        long last = l.get(0);\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) < last) {\n                increasing = false;\n\
    \            }\n            if (l.get(i) > last) {\n                decreasing\
    \ = false;\n            }\n            last = l.get(i);\n        }\n        return\
    \ increasing || decreasing;", "        if (l.size() == 0) {\n            return\
    \ true;\n        }\n        long prev = l.get(0);\n        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            if (l.get(i) > prev) {\n                decreasing = false;\n\
    \            }\n            if (l.get(i) < prev) {\n                increasing\
    \ = false;\n            }\n            prev = l.get(i);\n        }\n        return\
    \ increasing || decreasing;", "        if (l.size() < 2) {\n            return\
    \ true;\n        }\n        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i)\
    \ < l.get(i - 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) > l.get(i - 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.size() < 2) {\n            return true;\n        }\n        boolean increasing\
    \ = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n \
    \           if (increasing && l.get(i) > l.get(i + 1)) {\n                return\
    \ false;\n            }\n            if (!increasing && l.get(i) < l.get(i + 1))\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i - 1)) {\n      \
    \          increasing = false;\n            }\n            if (l.get(i) > l.get(i\
    \ - 1)) {\n                decreasing = false;\n            }\n        }\n   \
    \     return increasing || decreasing;", "        if (l.size() <= 1) {\n     \
    \       return true;\n        }\n        boolean increasing = true;\n        boolean\
    \ decreasing = true;\n        for (int i = 1; i < l.size(); i++) {\n         \
    \   if (l.get(i) < l.get(i - 1)) {\n                increasing = false;\n    \
    \        }\n            if (l.get(i) > l.get(i - 1)) {\n                decreasing\
    \ = false;\n            }\n        }\n        return increasing || decreasing;",
  "        if (l.size() < 2) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing && l.get(i) > l.get(i + 1)) {\n         \
    \       return false;\n            }\n            if (!increasing && l.get(i)\
    \ < l.get(i + 1)) {\n                return false;\n            }\n        }\n\
    \        return true;", "        if (l.size() == 0) {\n            return true;\n\
    \        }\n        boolean increasing = true;\n        boolean decreasing = true;\n\
    \        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i\
    \ - 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) > l.get(i - 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;", "        if (l.size()\
    \ == 0) {\n            return true;\n        }\n        long prev = l.get(0);\n\
    \        boolean increasing = true;\n        boolean decreasing = true;\n    \
    \    for (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n\
    \            if (curr > prev) {\n                decreasing = false;\n       \
    \     }\n            if (curr < prev) {\n                increasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1))\
    \ {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ < l.get(i + 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;", "        if (l.size() < 2)\
    \ {\n            return true;\n        }\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) < l.get(i - 1)) {\n                increasing =\
    \ false;\n            }\n            if (l.get(i) > l.get(i - 1)) {\n        \
    \        decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1))\
    \ {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ < l.get(i + 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;", "        if (l.size() <= 1)\
    \ {\n            return true;\n        }\n        long prev = l.get(0);\n    \
    \    boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n      \
    \      if (curr < prev) {\n                increasing = false;\n            }\n\
    \            if (curr > prev) {\n                decreasing = false;\n       \
    \     }\n            prev = curr;\n        }\n        return increasing || decreasing;",
  "        if (l.size() == 0) {\n            return true;\n        }\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i - 1)) {\n      \
    \          increasing = false;\n            }\n            if (l.get(i) > l.get(i\
    \ - 1)) {\n                decreasing = false;\n            }\n        }\n   \
    \     return increasing || decreasing;", "        if (l.size() == 0) {\n     \
    \       return true;\n        }\n        long prev = l.get(0);\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            if (l.get(i) > prev) {\n              \
    \  decreasing = false;\n            }\n            if (l.get(i) < prev) {\n  \
    \              increasing = false;\n            }\n            prev = l.get(i);\n\
    \        }\n        return increasing || decreasing;", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() < 2) {\n            return true;\n  \
    \      }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;", "        if (l.size() <= 1) {\n           \
    \ return true;\n        }\n        long prev = l.get(0);\n        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            long curr = l.get(i);\n            if (curr > prev) {\n\
    \                decreasing = false;\n            } else if (curr < prev) {\n\
    \                increasing = false;\n            }\n            prev = curr;\n\
    \        }\n        return increasing || decreasing;", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.size() < 2) {\n            return true;\n        }\n        boolean increasing\
    \ = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n \
    \           if (increasing && l.get(i) > l.get(i + 1)) {\n                return\
    \ false;\n            }\n            if (!increasing && l.get(i) < l.get(i + 1))\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (l.size() < 2) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing && l.get(i) > l.get(i + 1)) {\n         \
    \       return false;\n            }\n            if (!increasing && l.get(i)\
    \ < l.get(i + 1)) {\n                return false;\n            }\n        }\n\
    \        return true;", '        return false;', "        boolean increasing =\
    \ true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() < 2) {\n            return true;\n  \
    \      }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing && l.get(i) > l.get(i\
    \ + 1)) {\n                return false;\n            }\n            if (!increasing\
    \ && l.get(i) < l.get(i + 1)) {\n                return false;\n            }\n\
    \        }\n        return true;", "        if (l.size() < 2) {\n            return\
    \ true;\n        }\n        boolean increasing = l.get(0) < l.get(1);\n      \
    \  for (int i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n \
    \               if (l.get(i) > l.get(i + 1)) {\n                    return false;\n\
    \                }\n            } else {\n                if (l.get(i) < l.get(i\
    \ + 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;", "        if (l.size() <= 1) {\n           \
    \ return true;\n        }\n        long prev = l.get(0);\n        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            long curr = l.get(i);\n            if (curr < prev) {\n\
    \                increasing = false;\n            }\n            if (curr > prev)\
    \ {\n                decreasing = false;\n            }\n            prev = curr;\n\
    \        }\n        return increasing || decreasing;", "        if (l.size() <\
    \ 2) {\n            return true;\n        }\n        long diff = l.get(1) - l.get(0);\n\
    \        for (int i = 2; i < l.size(); i++) {\n            long newDiff = l.get(i)\
    \ - l.get(i - 1);\n            if (newDiff * diff < 0) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.size() == 0) {\n            return true;\n        }\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i - 1)) {\n      \
    \          increasing = false;\n            }\n            if (l.get(i) > l.get(i\
    \ - 1)) {\n                decreasing = false;\n            }\n        }\n   \
    \     return increasing || decreasing;", "        if (l.size() <= 1) {\n     \
    \       return true;\n        }\n        long prev = l.get(0);\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            long curr = l.get(i);\n            if (curr\
    \ < prev) {\n                increasing = false;\n            }\n            if\
    \ (curr > prev) {\n                decreasing = false;\n            }\n      \
    \      prev = curr;\n        }\n        return increasing || decreasing;", " \
    \       if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i - 1)) {\n      \
    \          increasing = false;\n            }\n            if (l.get(i) > l.get(i\
    \ - 1)) {\n                decreasing = false;\n            }\n        }\n   \
    \     return increasing || decreasing;", "        if (l.size() == 0) {\n     \
    \       return true;\n        }\n        long prev = l.get(0);\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            long curr = l.get(i);\n            if (curr\
    \ < prev) {\n                increasing = false;\n            }\n            if\
    \ (curr > prev) {\n                decreasing = false;\n            }\n      \
    \      prev = curr;\n        }\n        return increasing || decreasing;", " \
    \       boolean increasing = true;\n        boolean decreasing = true;\n     \
    \   for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;", "        return l.stream().reduce((x,\
    \ y) -> x <= y ? y : -1l).get() != -1l ||\n            l.stream().reduce((x, y)\
    \ -> x >= y ? y : -1l).get() != -1l;", "        boolean increasing = true;\n \
    \       boolean decreasing = true;\n        for (int i = 0; i < l.size() - 1;\
    \ i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ < l.get(i + 1)) {\n                decreasing = false;\n            }\n    \
    \        if (l.get(i) > l.get(i + 1)) {\n                increasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.size() == 0) {\n            return true;\n        }\n        long prev\
    \ = l.get(0);\n        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 1; i < l.size(); i++) {\n            long curr\
    \ = l.get(i);\n            if (curr > prev) {\n                decreasing = false;\n\
    \            }\n            if (curr < prev) {\n                increasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() == 0) {\n            return true;\n \
    \       }\n        long prev = l.get(0);\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            long curr = l.get(i);\n            if (curr > prev) {\n     \
    \           decreasing = false;\n            }\n            if (curr < prev) {\n\
    \                increasing = false;\n            }\n            prev = curr;\n\
    \        }\n        return increasing || decreasing;", "        if (l.size() <\
    \ 2) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing && l.get(i) > l.get(i + 1)) {\n                return false;\n \
    \           }\n            if (!increasing && l.get(i) < l.get(i + 1)) {\n   \
    \             return false;\n            }\n        }\n        return true;",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;", "        if (l.size()\
    \ == 0) {\n            return true;\n        }\n        long prev = l.get(0);\n\
    \        boolean increasing = true;\n        boolean decreasing = true;\n    \
    \    for (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n\
    \            if (curr > prev) {\n                decreasing = false;\n       \
    \     }\n            if (curr < prev) {\n                increasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() == 0) {\n            return true;\n \
    \       }\n        long prev = l.get(0);\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            long curr = l.get(i);\n            if (curr > prev) {\n     \
    \           decreasing = false;\n            }\n            if (curr < prev) {\n\
    \                increasing = false;\n            }\n            prev = curr;\n\
    \        }\n        return increasing || decreasing;", "        if (l.size() <=\
    \ 1) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing) {\n                if (l.get(i) > l.get(i + 1)) {\n           \
    \         return false;\n                }\n            } else {\n           \
    \     if (l.get(i) < l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            }\n        }\n        return true;", "        if (l.size()\
    \ == 0) {\n            return true;\n        }\n        long prev = l.get(0);\n\
    \        boolean increasing = true;\n        boolean decreasing = true;\n    \
    \    for (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n\
    \            if (curr > prev) {\n                decreasing = false;\n       \
    \     }\n            if (curr < prev) {\n                increasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing && l.get(i) > l.get(i + 1)) {\n         \
    \       return false;\n            }\n            if (!increasing && l.get(i)\
    \ < l.get(i + 1)) {\n                return false;\n            }\n        }\n\
    \        return true;", "        if (l.size() == 0) {\n            return true;\n\
    \        }\n        long last = l.get(0);\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) < last) {\n                increasing = false;\n\
    \            }\n            if (l.get(i) > last) {\n                decreasing\
    \ = false;\n            }\n            last = l.get(i);\n        }\n        return\
    \ increasing || decreasing;", "        boolean increasing = true;\n        boolean\
    \ decreasing = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n     \
    \       if (l.get(i) > l.get(i + 1)) {\n                increasing = false;\n\
    \            }\n            if (l.get(i) < l.get(i + 1)) {\n                decreasing\
    \ = false;\n            }\n        }\n        return increasing || decreasing;",
  "        return l.stream().reduce((a, b) -> a <= b ? b : null) != null ||\n    \
    \           l.stream().reduce((a, b) -> a >= b ? b : null) != null;", "      \
    \  if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing) {\n                if (l.get(i) > l.get(i\
    \ + 1)) {\n                    return false;\n                }\n            }\
    \ else {\n                if (l.get(i) < l.get(i + 1)) {\n                   \
    \ return false;\n                }\n            }\n        }\n        return true;",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;", '        return l.stream().reduce((a,
    b) -> a.equals(b) ? a : null) != null;', "        if (l.size() < 2) {\n      \
    \      return true;\n        }\n        boolean increasing = false;\n        boolean\
    \ decreasing = false;\n        for (int i = 1; i < l.size(); i++) {\n        \
    \    if (l.get(i) > l.get(i - 1)) {\n                increasing = true;\n    \
    \        }\n            if (l.get(i) < l.get(i - 1)) {\n                decreasing\
    \ = true;\n            }\n        }\n        return increasing ^ decreasing;",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;", "        if (l.size()\
    \ < 2) {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing) {\n                if (l.get(i) > l.get(i + 1)) {\n           \
    \         return false;\n                }\n            } else {\n           \
    \     if (l.get(i) < l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            }\n        }\n        return true;", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;", "        boolean increasing =\
    \ true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() <= 1) {\n            return true;\n \
    \       }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;", "        // Your code here.\n        return\
    \ false;", "        if (l.size() <= 1) {\n            return true;\n        }\n\
    \        boolean increasing = l.get(0) < l.get(1);\n        for (int i = 1; i\
    \ < l.size() - 1; i++) {\n            if (increasing && l.get(i) > l.get(i + 1))\
    \ {\n                return false;\n            }\n            if (!increasing\
    \ && l.get(i) < l.get(i + 1)) {\n                return false;\n            }\n\
    \        }\n        return true;", "        return l.stream().reduce((x, y) ->\
    \ x <= y ? y : Long.MIN_VALUE).get() != Long.MIN_VALUE ||\n               l.stream().reduce((x,\
    \ y) -> x >= y ? y : Long.MAX_VALUE).get() != Long.MAX_VALUE;", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;", "        if (l.size() <= 1) {\n\
    \            return true;\n        }\n        long last = l.get(0);\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            long current = l.get(i);\n            if\
    \ (current < last) {\n                increasing = false;\n            }\n   \
    \         if (current > last) {\n                decreasing = false;\n       \
    \     }\n            last = current;\n        }\n        return increasing ||\
    \ decreasing;", "        if (l.size() < 2) return true;\n        boolean increasing\
    \ = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n \
    \           if (increasing && l.get(i) > l.get(i + 1)) return false;\n       \
    \     if (!increasing && l.get(i) < l.get(i + 1)) return false;\n        }\n \
    \       return true;", '        return l.stream().reduce((a, b) -> a.equals(b)
    ? a : null) != null;', "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.size() == 0) {\n            return true;\n        }\n        long prev\
    \ = l.get(0);\n        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 1; i < l.size(); i++) {\n            long curr\
    \ = l.get(i);\n            if (curr < prev) {\n                increasing = false;\n\
    \            }\n            if (curr > prev) {\n                decreasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() == 0) {\n            return true;\n \
    \       }\n        long prev = l.get(0);\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) < prev) {\n                increasing = false;\n\
    \            }\n            if (l.get(i) > prev) {\n                decreasing\
    \ = false;\n            }\n            prev = l.get(i);\n        }\n        return\
    \ increasing || decreasing;", "        if (l.size() == 0) {\n            return\
    \ true;\n        }\n        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i)\
    \ < l.get(i - 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) > l.get(i - 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing) {\n                if (l.get(i) > l.get(i\
    \ + 1)) {\n                    return false;\n                }\n            }\
    \ else {\n                if (l.get(i) < l.get(i + 1)) {\n                   \
    \ return false;\n                }\n            }\n        }\n        return true;",
  "        if (l.size() < 2) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing && l.get(i) > l.get(i + 1)) {\n         \
    \       return false;\n            }\n            if (!increasing && l.get(i)\
    \ < l.get(i + 1)) {\n                return false;\n            }\n        }\n\
    \        return true;", "        if (l.size() <= 1) {\n            return true;\n\
    \        }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;", "        if (l.size() == 0) {\n           \
    \ return true;\n        }\n        boolean increasing = true;\n        boolean\
    \ decreasing = true;\n        for (int i = 1; i < l.size(); i++) {\n         \
    \   if (l.get(i) < l.get(i - 1)) {\n                increasing = false;\n    \
    \        }\n            if (l.get(i) > l.get(i - 1)) {\n                decreasing\
    \ = false;\n            }\n        }\n        return increasing || decreasing;",
  "        if (l.size() == 0) {\n            return true;\n        }\n        long\
    \ last = l.get(0);\n        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i)\
    \ < last) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) > last) {\n                decreasing = false;\n            }\n  \
    \          last = l.get(i);\n        }\n        return increasing || decreasing;",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;", "        return l.stream().reduce((a,\
    \ b) -> {\n            if (a > b) {\n                return (long)1l;\n      \
    \      } else if (a < b) {\n                return (long)-1l;\n            } else\
    \ {\n                return (long)0l;\n            }\n        }).get() != (long)0l;",
  "        boolean increasing = true;\n        boolean decreasing = true;\n      \
    \  for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i\
    \ + 1)) {\n                increasing = false;\n            }\n            if\
    \ (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;", "        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n  \
    \              increasing = false;\n            }\n            if (l.get(i) <\
    \ l.get(i + 1)) {\n                decreasing = false;\n            }\n      \
    \  }\n        return increasing || decreasing;", "        boolean increasing =\
    \ true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing) {\n                if (l.get(i) > l.get(i\
    \ + 1)) {\n                    return false;\n                }\n            }\
    \ else {\n                if (l.get(i) < l.get(i + 1)) {\n                   \
    \ return false;\n                }\n            }\n        }\n        return true;",
  '        return l.stream().reduce((a, b) -> a <= b ? b : null) != null || l.stream().reduce((a,
    b) -> a >= b ? b : null) != null;', "        if (l.size() == 0) {\n          \
    \  return true;\n        }\n        long last = l.get(0);\n        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            long current = l.get(i);\n            if (current < last)\
    \ {\n                increasing = false;\n            }\n            if (current\
    \ > last) {\n                decreasing = false;\n            }\n            last\
    \ = current;\n        }\n        return increasing || decreasing;", "        if\
    \ (l.size() <= 1) {\n            return true;\n        }\n        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            if (l.get(i) < l.get(i - 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) > l.get(i - 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", '        return l.stream().sorted().collect(Collectors.toList()).equals(l)
    || l.stream().sorted(Collections.reverseOrder()).collect(Collectors.toList()).equals(l);',
  "        if (l.size() <= 1) {\n            return true;\n        }\n        long\
    \ prev = l.get(0);\n        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 1; i < l.size(); i++) {\n            long curr\
    \ = l.get(i);\n            if (curr < prev) {\n                increasing = false;\n\
    \            }\n            if (curr > prev) {\n                decreasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i - 1)) {\n      \
    \          increasing = false;\n            }\n            if (l.get(i) > l.get(i\
    \ - 1)) {\n                decreasing = false;\n            }\n        }\n   \
    \     return increasing || decreasing;", "        if (l.size() <= 1) {\n     \
    \       return true;\n        }\n        boolean increasing = l.get(0) < l.get(1);\n\
    \        for (int i = 1; i < l.size() - 1; i++) {\n            if (increasing\
    \ && l.get(i) > l.get(i + 1)) {\n                return false;\n            }\n\
    \            if (!increasing && l.get(i) < l.get(i + 1)) {\n                return\
    \ false;\n            }\n        }\n        return true;", '        return l.stream().reduce((a,
    b) -> a <= b ? b : null) != null || l.stream().reduce((a, b) -> a >= b ? b : null)
    != null;', "        boolean increasing = true;\n        boolean decreasing = true;\n\
    \        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) >\
    \ l.get(i + 1)) {\n                increasing = false;\n            }\n      \
    \      if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n \
    \           }\n        }\n        return increasing || decreasing;", "       \
    \ if (l.size() == 0) {\n            return true;\n        }\n        long prev\
    \ = l.get(0);\n        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 1; i < l.size(); i++) {\n            long curr\
    \ = l.get(i);\n            if (curr < prev) {\n                increasing = false;\n\
    \            }\n            if (curr > prev) {\n                decreasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.size() <= 1) {\n            return true;\n        }\n        long prev\
    \ = l.get(0);\n        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 1; i < l.size(); i++) {\n            long curr\
    \ = l.get(i);\n            if (curr > prev) {\n                decreasing = false;\n\
    \            } else if (curr < prev) {\n                increasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() < 2) {\n            return true;\n  \
    \      }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing && l.get(i) > l.get(i\
    \ + 1)) {\n                return false;\n            }\n            if (!increasing\
    \ && l.get(i) < l.get(i + 1)) {\n                return false;\n            }\n\
    \        }\n        return true;", "        if (l.size() == 0) {\n           \
    \ return true;\n        }\n        Long prev = l.get(0);\n        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            Long curr = l.get(i);\n            if (prev > curr) {\n\
    \                increasing = false;\n            }\n            if (prev < curr)\
    \ {\n                decreasing = false;\n            }\n            prev = curr;\n\
    \        }\n        return increasing || decreasing;", "        // Your code here\n\
    \        return false;", "        if (l.size() <= 1) {\n            return true;\n\
    \        }\n        boolean increasing = true;\n        boolean decreasing = true;\n\
    \        for (int i = 1; i < l.size(); i++) {\n            increasing = increasing\
    \ && (l.get(i) >= l.get(i - 1));\n            decreasing = decreasing && (l.get(i)\
    \ <= l.get(i - 1));\n        }\n        return increasing || decreasing;", " \
    \       if (l.size() < 2) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 2; i < l.size(); i++)\
    \ {\n            if (increasing && l.get(i - 1) > l.get(i)) {\n              \
    \  return false;\n            }\n            if (!increasing && l.get(i - 1) <\
    \ l.get(i)) {\n                return false;\n            }\n        }\n     \
    \   return true;", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.size() < 2) {\n            return true;\n        }\n        boolean increasing\
    \ = true;\n        boolean decreasing = true;\n        for (int i = 1; i < l.size();\
    \ i++) {\n            if (l.get(i) < l.get(i - 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) > l.get(i - 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() < 2) {\n            return true;\n  \
    \      }\n        long prev = l.get(0);\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            long curr = l.get(i);\n            if (curr < prev) {\n     \
    \           increasing = false;\n            }\n            if (curr > prev) {\n\
    \                decreasing = false;\n            }\n            prev = curr;\n\
    \        }\n        return increasing || decreasing;", "        if (l.size() <=\
    \ 1) {\n            return true;\n        }\n        long prev = l.get(0);\n \
    \       boolean increasing = true;\n        boolean decreasing = true;\n     \
    \   for (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n\
    \            if (curr < prev) {\n                increasing = false;\n       \
    \     }\n            if (curr > prev) {\n                decreasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            increasing = increasing && (l.get(i) >=\
    \ l.get(i - 1));\n            decreasing = decreasing && (l.get(i) <= l.get(i\
    \ - 1));\n        }\n        return increasing || decreasing;", "        if (l.size()\
    \ == 0) {\n            return true;\n        }\n        long prev = l.get(0);\n\
    \        boolean increasing = true;\n        boolean decreasing = true;\n    \
    \    for (int i = 1; i < l.size(); i++) {\n            long curr = l.get(i);\n\
    \            if (curr > prev) {\n                decreasing = false;\n       \
    \     }\n            if (curr < prev) {\n                increasing = false;\n\
    \            }\n            prev = curr;\n        }\n        return increasing\
    \ || decreasing;", "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  boolean increasing = true;\n        boolean decreasing = true;\n        for\
    \ (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) > l.get(i + 1))\
    \ {\n                increasing = false;\n            }\n            if (l.get(i)\
    \ < l.get(i + 1)) {\n                decreasing = false;\n            }\n    \
    \    }\n        return increasing || decreasing;", "        if (l.size() <= 1)\
    \ {\n            return true;\n        }\n        boolean increasing = l.get(0)\
    \ < l.get(1);\n        for (int i = 1; i < l.size() - 1; i++) {\n            if\
    \ (increasing && l.get(i) > l.get(i + 1)) {\n                return false;\n \
    \           }\n            if (!increasing && l.get(i) < l.get(i + 1)) {\n   \
    \             return false;\n            }\n        }\n        return true;",
  "        if (l.size() < 2) {\n            return true;\n        }\n        boolean\
    \ increasing = l.get(0) < l.get(1);\n        for (int i = 1; i < l.size() - 1;\
    \ i++) {\n            if (increasing && l.get(i) > l.get(i + 1)) {\n         \
    \       return false;\n            }\n            if (!increasing && l.get(i)\
    \ < l.get(i + 1)) {\n                return false;\n            }\n        }\n\
    \        return true;", '        return l.stream().reduce((a, b) -> a.longValue()
    > b.longValue() ? (long)1l : a.longValue() < b.longValue() ? (long)-1l : (long)0l).get().longValue()
    != (long)0l;', "        boolean increasing = true;\n        boolean decreasing\
    \ = true;\n        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i)\
    \ > l.get(i + 1)) {\n                increasing = false;\n            }\n    \
    \        if (l.get(i) < l.get(i + 1)) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", '        return
    l.stream().sorted().collect(Collectors.toList()).equals(l) || l.stream().sorted(Collections.reverseOrder()).collect(Collectors.toList()).equals(l);',
  "        if (l.size() <= 1) {\n            return true;\n        }\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            if (l.get(i) < l.get(i - 1)) {\n      \
    \          increasing = false;\n            }\n            if (l.get(i) > l.get(i\
    \ - 1)) {\n                decreasing = false;\n            }\n        }\n   \
    \     return increasing || decreasing;", "        if (l.size() == 0) {\n     \
    \       return true;\n        }\n        long prev = l.get(0);\n        boolean\
    \ increasing = true;\n        boolean decreasing = true;\n        for (int i =\
    \ 1; i < l.size(); i++) {\n            long curr = l.get(i);\n            if (curr\
    \ > prev) {\n                decreasing = false;\n            }\n            if\
    \ (curr < prev) {\n                increasing = false;\n            }\n      \
    \      prev = curr;\n        }\n        return increasing || decreasing;", " \
    \       boolean increasing = true;\n        boolean decreasing = true;\n     \
    \   for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) < l.get(i\
    \ + 1)) {\n                decreasing = false;\n            }\n            if\
    \ (l.get(i) > l.get(i + 1)) {\n                increasing = false;\n         \
    \   }\n        }\n        return increasing || decreasing;", "        if (l.size()\
    \ <= 1) {\n            return true;\n        }\n        boolean increasing = true;\n\
    \        boolean decreasing = true;\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) < l.get(i - 1)) {\n                increasing =\
    \ false;\n            }\n            if (l.get(i) > l.get(i - 1)) {\n        \
    \        decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        if (l.size() < 2) {\n            return true;\n  \
    \      }\n        boolean increasing = l.get(0) < l.get(1);\n        for (int\
    \ i = 1; i < l.size() - 1; i++) {\n            if (increasing) {\n           \
    \     if (l.get(i) > l.get(i + 1)) {\n                    return false;\n    \
    \            }\n            } else {\n                if (l.get(i) < l.get(i +\
    \ 1)) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;", "        if (l.size() <= 1) {\n           \
    \ return true;\n        }\n        boolean increasing = true;\n        boolean\
    \ decreasing = true;\n        for (int i = 1; i < l.size(); i++) {\n         \
    \   if (l.get(i) < l.get(i - 1)) {\n                increasing = false;\n    \
    \        }\n            if (l.get(i) > l.get(i - 1)) {\n                decreasing\
    \ = false;\n            }\n        }\n        return increasing || decreasing;",
  "        return l.stream().reduce((a, b) -> {\n            if (a > b) {\n      \
    \          return (long)1l;\n            } else if (a < b) {\n               \
    \ return (long)-1l;\n            } else {\n                return (long)0l;\n\
    \            }\n        }).get() != (long)0l;", "        boolean increasing =\
    \ true;\n        boolean decreasing = true;\n        for (int i = 0; i < l.size()\
    \ - 1; i++) {\n            if (l.get(i) > l.get(i + 1)) {\n                increasing\
    \ = false;\n            }\n            if (l.get(i) < l.get(i + 1)) {\n      \
    \          decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;"]
stop_tokens:
- "\n    }\n"

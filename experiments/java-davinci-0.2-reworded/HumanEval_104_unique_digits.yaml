name: HumanEval_104_unique_digits
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given an array array list of positive integers x. return\
  \ a sorted array list of all \n    // elements that hasn't any even digit.\n   \
  \ // Note: Returned array list should be sorted in increasing order.\n    // For\
  \ example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
  \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
  \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
  \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
  \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
  \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
  \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
  \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
  \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
  \ (long)135l)))));\n    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<Long>();\n        for\
    \ (Long i : x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        for (Long l : x) {\n            if (l.toString().chars().mapToObj(i ->\
    \ (char)i).filter(c -> c % 2 == 0).count() == 0) {\n                res.add(l);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i :\
    \ x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : x) {\n            if (i.toString().chars().anyMatch(c ->\
    \ c % 2 == 0)) {\n                continue;\n            }\n            result.add(i);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Long> y = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().replaceAll(\"[^2-9]\", \"\").length() == 0) {\n\
    \                y.add(i);\n            }\n        }\n        Collections.sort(y);\n\
    \        return y;", "        ArrayList<Long> res = new ArrayList<Long>();\n \
    \       for (Long i : x) {\n            if (i.toString().matches(\"[13579]+\"\
    )) {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : x) {\n            if (i.toString().chars().mapToObj(c ->\
    \ (char) c).filter(c -> c % 2 == 0).count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i :\
    \ x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : x) {\n            if (i.toString().chars().mapToObj(c ->\
    \ (char) c).filter(c -> c == '2' || c == '4' || c == '6' || c == '8').count()\
    \ == 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ for (Long i : x) {\n            if (i.toString().chars().mapToObj(c -> (char)\
    \ c).filter(c -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n\
    \                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", '        return new ArrayList<Long>();', "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (Long i : x) {\n            if\
    \ (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c % 2 == 0).count()\
    \ == 0) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> y = new ArrayList<Long>();\n\
    \        for (Long i : x) {\n            if (i.toString().chars().mapToObj(c ->\
    \ (char) c).filter(c -> c == '2' || c == '4' || c == '6' || c == '8').count()\
    \ == 0) {\n                y.add(i);\n            }\n        }\n        Collections.sort(y);\n\
    \        return y;", "        ArrayList<Long> ret = new ArrayList<Long>();\n \
    \       for (Long l : x) {\n            if (l.toString().chars().filter(c -> c\
    \ % 2 == 0).count() == 0) {\n                ret.add(l);\n            }\n    \
    \    }\n        Collections.sort(ret);\n        return ret;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (Long i : x) {\n            if\
    \ (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c == '2' || c == '4'\
    \ || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n \
    \           }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i :\
    \ x) {\n            if (i.toString().chars().mapToObj(c -> (char) c).filter(c\
    \ -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : x) {\n            if (i.toString().matches(\"[13579]+\"\
    )) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : x) {\n            if (i.toString().chars().mapToObj(c ->\
    \ (char) c).filter(c -> c == '2' || c == '4' || c == '6' || c == '8').count()\
    \ == 0) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (long i : x) {\n            if (i < 10) {\n                result.add(i);\n\
    \            } else {\n                boolean isUnique = true;\n            \
    \    while (i > 0) {\n                    if (i % 2 == 0) {\n                \
    \        isUnique = false;\n                        break;\n                 \
    \   }\n                    i /= 10;\n                }\n                if (isUnique)\
    \ {\n                    result.add(i);\n                }\n            }\n  \
    \      }\n        Collections.sort(result);\n        return result;", "      \
    \  ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c %\
    \ 2 == 0).count() == 0) {\n                result.add(i);\n            }\n   \
    \     }\n        Collections.sort(result);\n        return result;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_13_greatest_common_divisor
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return a greatest common divisor of two integers a and b\n\
  \    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
  \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
  \ b) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
  \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n  \
  \  assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
  \ (60l)) == (12l));\n    }\n\n}\n"
completions: ["        if (a == 0) {\n            return b;\n        }\n        if\
    \ (b == 0) {\n            return a;\n        }\n        if (a > b) {\n       \
    \     return greatestCommonDivisor(a % b, b);\n        } else {\n            return\
    \ greatestCommonDivisor(a, b % a);\n        }", "        if (a == 0) {\n     \
    \       return b;\n        }\n        return greatestCommonDivisor(b % a, a);",
  "        if (a == 0) {\n            return b;\n        }\n        if (b == 0) {\n\
    \            return a;\n        }\n        if (a > b) {\n            return greatestCommonDivisor(a\
    \ % b, b);\n        } else {\n            return greatestCommonDivisor(a, b %\
    \ a);\n        }", "        if (a < b) {\n            return greatestCommonDivisor(b,\
    \ a);\n        }\n        if (b == 0) {\n            return a;\n        }\n  \
    \      return greatestCommonDivisor(b, a % b);", "        if (a == 0) {\n    \
    \        return b;\n        }\n        if (b == 0) {\n            return a;\n\
    \        }\n        if (a > b) {\n            return greatestCommonDivisor(a %\
    \ b, b);\n        } else {\n            return greatestCommonDivisor(a, b % a);\n\
    \        }", "        if (a == 0) {\n            return b;\n        }\n      \
    \  if (b == 0) {\n            return a;\n        }\n        if (a > b) {\n   \
    \         return greatestCommonDivisor(a % b, b);\n        } else {\n        \
    \    return greatestCommonDivisor(a, b % a);\n        }", "        if (a == 0)\
    \ {\n            return b;\n        }\n        if (b == 0) {\n            return\
    \ a;\n        }\n        return greatestCommonDivisor(b, a % b);", "        if\
    \ (a < b) {\n            return greatestCommonDivisor(b, a);\n        }\n    \
    \    if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
    \ a % b);", "        long c = a % b;\n        while (c != 0) {\n            a\
    \ = b;\n            b = c;\n            c = a % b;\n        }\n        return\
    \ b;", "        if (a == 0) {\n            return b;\n        }\n        if (b\
    \ == 0) {\n            return a;\n        }\n        if (a == b) {\n         \
    \   return a;\n        }\n        if (a > b) {\n            return greatestCommonDivisor(a\
    \ - b, b);\n        }\n        return greatestCommonDivisor(a, b - a);", "   \
    \     if (a == 0) {\n            return b;\n        }\n        return greatestCommonDivisor(b\
    \ % a, a);", "        if (a == 0) {\n            return b;\n        }\n      \
    \  while (b != 0) {\n            if (a > b) {\n                a = a - b;\n  \
    \          } else {\n                b = b - a;\n            }\n        }\n  \
    \      return a;", "        if (a < b) {\n            return greatestCommonDivisor(b,\
    \ a);\n        }\n        if (b == 0) {\n            return a;\n        }\n  \
    \      return greatestCommonDivisor(b, a % b);", '        return b == 0 ? a :
    greatestCommonDivisor(b, a % b);', "        long gcd = 1;\n        for (long i\
    \ = 1; i <= a && i <= b; i++) {\n            if (a % i == 0 && b % i == 0) {\n\
    \                gcd = i;\n            }\n        }\n        return gcd;", '        return
    b == 0 ? a : greatestCommonDivisor(b, a % b);', '        return a % b == 0 ? b
    : greatestCommonDivisor(b, a % b);', "        if (a == 0) {\n            return\
    \ b;\n        }\n        if (b == 0) {\n            return a;\n        }\n   \
    \     if (a > b) {\n            return greatestCommonDivisor(a % b, b);\n    \
    \    } else {\n            return greatestCommonDivisor(a, b % a);\n        }",
  "        if (a == 0) {\n            return b;\n        }\n        if (b == 0) {\n\
    \            return a;\n        }\n        if (a > b) {\n            return greatestCommonDivisor(a\
    \ % b, b);\n        } else {\n            return greatestCommonDivisor(a, b %\
    \ a);\n        }", "        if (a < b) {\n            long tmp = a;\n        \
    \    a = b;\n            b = tmp;\n        }\n        if (b == 0) {\n        \
    \    return a;\n        }\n        return greatestCommonDivisor(b, a % b);"]
stop_tokens:
- "\n    }\n"

name: HumanEval_112_reverse_delete
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Task\n    // We are given two strings s and c, you have\
  \ to deleted all the characters in s that are equal to any character in c\n    //\
  \ then check if the result string is palindrome.\n    // A string is called palindrome\
  \ if it reads the same backward as forward.\n    // You should return a pair containing\
  \ the result string and true/false for the check.\n    // Example\n    // >>> reverseDelete((\"\
  abcde\"), (\"ae\"))\n    // (Pair.with(\"bcd\", false))\n    // >>> reverseDelete((\"\
  abcdef\"), (\"b\"))\n    // (Pair.with(\"acdef\", false))\n    // >>> reverseDelete((\"\
  abcdedcba\"), (\"ab\"))\n    // (Pair.with(\"cdedc\", true))\n    public static\
  \ Pair<String, Boolean> reverseDelete(String s, String c) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(reverseDelete((\"\
  abcde\"), (\"ae\")).equals((Pair.with(\"bcd\", false))));\n    assert(reverseDelete((\"\
  abcdef\"), (\"b\")).equals((Pair.with(\"acdef\", false))));\n    assert(reverseDelete((\"\
  abcdedcba\"), (\"ab\")).equals((Pair.with(\"cdedc\", true))));\n    assert(reverseDelete((\"\
  dwik\"), (\"w\")).equals((Pair.with(\"dik\", false))));\n    assert(reverseDelete((\"\
  a\"), (\"a\")).equals((Pair.with(\"\", true))));\n    assert(reverseDelete((\"abcdedcba\"\
  ), (\"\")).equals((Pair.with(\"abcdedcba\", true))));\n    assert(reverseDelete((\"\
  abcdedcba\"), (\"v\")).equals((Pair.with(\"abcdedcba\", true))));\n    assert(reverseDelete((\"\
  vabba\"), (\"v\")).equals((Pair.with(\"abba\", true))));\n    assert(reverseDelete((\"\
  mamma\"), (\"mia\")).equals((Pair.with(\"\", true))));\n    }\n\n}\n"
completions: ["        // Write your code here\n        return null;", "        //\
    \ Write your code here\n        return null;", "        // Write your code here\n\
    \        return null;", "        // Write your code here\n        return null;",
  "        // Write your code here\n        return null;", "        // Write your\
    \ code here\n        return null;", "        // Write your code here\n       \
    \ return null;", "        // Write your code here\n        return null;", "  \
    \      // Write your code here\n        return null;", "        // Write your\
    \ code here\n        return null;", '        return null;', "        // Write\
    \ your code here\n        return null;", "        // Write your code here\n  \
    \      return null;", "        // Write your code here\n        return null;",
  "        // Write your code here\n        return null;", "        // Write your\
    \ code here\n        return null;", "        // Write your code here\n       \
    \ return null;", "        // Write your code here\n        return null;", "  \
    \      // Write your code here\n        return null;", "        // Write your\
    \ code here\n        return null;"]
stop_tokens:
- "\n    }\n"

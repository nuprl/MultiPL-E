name: HumanEval_4_mean_absolute_deviation
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // For a given array list of input numbers, calculate Mean\
  \ Absolute Deviation\n    // around the mean of this dataset.\n    // Mean Absolute\
  \ Deviation is the average absolute difference between each\n    // element and\
  \ a centerpoint (mean in this case):\n    // MAD = average | x - x_mean |\n    //\
  \ >>> meanAbsoluteDeviation((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
  \ (float)3.0f, (float)4.0f))))\n    // (1.0f)\n    public static float meanAbsoluteDeviation(ArrayList<Float>\
  \ numbers) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(meanAbsoluteDeviation((new\
  \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f)))) == (0.5f));\n    assert(meanAbsoluteDeviation((new\
  \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f))))\
  \ == (1.0f));\n    assert(meanAbsoluteDeviation((new ArrayList<Float>(Arrays.asList((float)1.0f,\
  \ (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f)))) == (1.2f));\n    }\n\n\
  }\n"
completions: ["        float mean = 0;\n        for (float number : numbers) {\n \
    \           mean += number;\n        }\n        mean /= numbers.size();\n    \
    \    float mad = 0;\n        for (float number : numbers) {\n            mad +=\
    \ Math.abs(number - mean);\n        }\n        mad /= numbers.size();\n      \
    \  return mad;", "        float mean = mean(numbers);\n        float sum = 0.0f;\n\
    \        for (float number : numbers) {\n            sum += Math.abs(number -\
    \ mean);\n        }\n        return sum / numbers.size();", "        float mean\
    \ = 0;\n        for (float number : numbers) {\n            mean += number;\n\
    \        }\n        mean /= numbers.size();\n        float mad = 0;\n        for\
    \ (float number : numbers) {\n            mad += Math.abs(number - mean);\n  \
    \      }\n        mad /= numbers.size();\n        return mad;", "        float\
    \ mean = mean(numbers);\n        float sum = 0;\n        for (float number : numbers)\
    \ {\n            sum += Math.abs(number - mean);\n        }\n        return sum\
    \ / numbers.size();", "        float mean = numbers.stream().reduce((float)0.0f,\
    \ (a, b) -> a + b) / numbers.size();\n        float mad = numbers.stream().map(x\
    \ -> Math.abs(x - mean)).reduce((float)0.0f, (a, b) -> a + b) / numbers.size();\n\
    \        return mad;", "        float mean = 0.0f;\n        float sum = 0.0f;\n\
    \        float sum_of_squares = 0.0f;\n        for (Float number : numbers) {\n\
    \            sum += number;\n            sum_of_squares += number * number;\n\
    \        }\n        mean = sum / numbers.size();\n        float variance = (sum_of_squares\
    \ / numbers.size()) - (mean * mean);\n        float standard_deviation = (float)Math.sqrt(variance);\n\
    \        return standard_deviation;", "        float mean = mean(numbers);\n \
    \       float sum = 0;\n        for (float number : numbers) {\n            sum\
    \ += Math.abs(number - mean);\n        }\n        return sum / numbers.size();",
  "        float mean = mean(numbers);\n        float sum = 0.0f;\n        for (float\
    \ number : numbers) {\n            sum += Math.abs(number - mean);\n        }\n\
    \        return sum / numbers.size();", "        float mean = mean(numbers);\n\
    \        float sum = 0;\n        for (float number : numbers) {\n            sum\
    \ += Math.abs(number - mean);\n        }\n        return sum / numbers.size();",
  "        float mean = 0;\n        for (Float number : numbers) {\n            mean\
    \ += number;\n        }\n        mean /= numbers.size();\n        float mad =\
    \ 0;\n        for (Float number : numbers) {\n            mad += Math.abs(number\
    \ - mean);\n        }\n        mad /= numbers.size();\n        return mad;", " \
    \       float mean = mean(numbers);\n        float sum = 0;\n        for (float\
    \ number : numbers) {\n            sum += Math.abs(number - mean);\n        }\n\
    \        return sum / numbers.size();", "        float mean = mean(numbers);\n\
    \        float sum = 0.0f;\n        for (float number : numbers) {\n         \
    \   sum += Math.abs(number - mean);\n        }\n        return sum / numbers.size();",
  "        float mean = mean(numbers);\n        float sum = 0;\n        for (float\
    \ number : numbers) {\n            sum += Math.abs(number - mean);\n        }\n\
    \        return sum / numbers.size();", "        float mean = mean(numbers);\n\
    \        float sum = 0;\n        for (float number : numbers) {\n            sum\
    \ += Math.abs(number - mean);\n        }\n        return sum / numbers.size();",
  "        float mean = mean(numbers);\n        float sum = 0;\n        for (float\
    \ number : numbers) {\n            sum += Math.abs(number - mean);\n        }\n\
    \        return sum / numbers.size();", "        float sum = 0.0f;\n        for\
    \ (float number : numbers) {\n            sum += number;\n        }\n        float\
    \ mean = sum / numbers.size();\n        float sum_of_squares = 0.0f;\n       \
    \ for (float number : numbers) {\n            sum_of_squares += Math.abs(number\
    \ - mean);\n        }\n        return sum_of_squares / numbers.size();", "   \
    \     float mean = mean(numbers);\n        float sum = 0;\n        for (float\
    \ number : numbers) {\n            sum += Math.abs(number - mean);\n        }\n\
    \        return sum / numbers.size();", "        float mean = mean(numbers);\n\
    \        float sum = 0;\n        for (float number : numbers) {\n            sum\
    \ += Math.abs(number - mean);\n        }\n        return sum / numbers.size();",
  "        float mean = mean(numbers);\n        float sum = 0;\n        for (Float\
    \ number : numbers) {\n            sum += Math.abs(number - mean);\n        }\n\
    \        return sum / numbers.size();", "        float mean = mean(numbers);\n\
    \        float sum = 0;\n        for (float number : numbers) {\n            sum\
    \ += Math.abs(number - mean);\n        }\n        return sum / numbers.size();"]
stop_tokens:
- "\n    }\n"

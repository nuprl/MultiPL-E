name: HumanEval_85_add
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a non-empty array list of integers lst. add the even\
  \ elements that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
  \ lst) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
  \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) == (0l));\n\
  \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)6l,\
  \ (long)8l)))) == (12l));\n    }\n\n}\n"
completions: ['        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).reduce(0l, (x, y) -> x + y);', "        long sum = 0;\n       \
    \ for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;", "        long sum = 0;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;", "        long sum = 0;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", "        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;", '        return
    lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x,
    y) -> x + y).get();', '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum = 0;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;", "        long sum = 0;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum = 0;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;", "        long sum = 0;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', "        // Your code here\n      \
    \  return 0l;", "        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;", "    \
    \    long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n         \
    \   if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum = 0;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", "        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;", '        return
    lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x,
    y) -> x + y).get();', "        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;", "    \
    \    long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n         \
    \   if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y) -> x + y);',
  '        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y) -> x + y);',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long result = 0;\n        for (int i = 0; i < lst.size(); i++) {\n    \
    \        if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                result += lst.get(i);\n\
    \            }\n        }\n        return result;", "        long sum = 0;\n \
    \       for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 &&\
    \ lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n            }\n\
    \        }\n        return sum;", "        long sum = 0;\n        for (int i =\
    \ 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;", '        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)
    -> x + y);', '        return lst.stream().filter(e -> e % 2 == 0).filter(e ->
    lst.indexOf(e) % 2 == 1).reduce((a, b) -> a + b).get();', "        long sum =\
    \ 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 ==\
    \ 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;", "        long sum = 0;\n        for (int\
    \ i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i) % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;", "        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;", '        return
    lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x,
    y) -> x + y).get();', '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y) -> x + y);',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum = 0;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", "        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;", "    \
    \    long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n         \
    \   if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", "        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;", "    \
    \    long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n         \
    \   if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).reduce(0l, (x, y) -> x + y);', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', '        return 0;', '        return
    lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x,
    y) -> x + y).get();', '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y) -> x + y);',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((long)0, (x, y) ->
    x + y);', '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum = 0;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum = 0;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", "        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;", "    \
    \    long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n         \
    \   if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", "        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;", "    \
    \    long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n         \
    \   if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", "        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;", '        return
    lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x,
    y) -> x + y).get();', '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;", "        long sum = 0;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", "        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;", "    \
    \    long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n         \
    \   if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", "        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;", '        return
    lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y) -> x + y);', '        return
    lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x,
    y) -> x + y).get();', '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", "        // Write your code here\n\
    \        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        long sum =\
    \ 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 ==\
    \ 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;", "        long sum = 0;\n        for (int\
    \ i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i) % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;", '        return lst.stream().filter(x -> x % 2 == 0).reduce(0l,
    (x, y) -> x + y);', "        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;", "    \
    \    long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n         \
    \   if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum = 0;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum = 0;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum = 0;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", "        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;", "    \
    \    long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n         \
    \   if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(e
    -> e % 2 == 0).filter(e -> lst.indexOf(e) % 2 == 1).reduce((a, b) -> a + b).get();',
  "        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", '        return lst.stream().filter(x -> x % 2 == 0).filter(x
    -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();', '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum = 0;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", "        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;", "    \
    \    long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n         \
    \   if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", '        return lst.stream().filter(x
    -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x, y) -> x + y).get();',
  '        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)
    % 2 == 1).reduce((x, y) -> x + y).get();', "        long sum = 0;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;", "        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;"]
stop_tokens:
- "\n    }\n"

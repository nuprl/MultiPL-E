name: HumanEval_46_fib4
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // The Fib4 number sequence is a sequence similar to the Fibbonacci\
  \ sequnece that's defined as follows:\n    // fib4(0) -> 0\n    // fib4(1) -> 0\n\
  \    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1) + fib4(n-2)\
  \ + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently compute\
  \ the n-th element of the fib4 number sequence.  Do not use recursion.\n    // >>>\
  \ fib4((5l))\n    // (4l)\n    // >>> fib4((6l))\n    // (8l)\n    // >>> fib4((7l))\n\
  \    // (14l)\n    public static long fib4(long n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(fib4((5l))\
  \ == (4l));\n    assert(fib4((8l)) == (28l));\n    assert(fib4((10l)) == (104l));\n\
  \    assert(fib4((12l)) == (386l));\n    }\n\n}\n"
completions: ["        long a = 0;\n        long b = 0;\n        long c = 2;\n   \
    \     long d = 0;\n        long e = 0;\n        for (long i = 4; i <= n; i++)\
    \ {\n            e = a + b + c + d;\n            a = b;\n            b = c;\n\
    \            c = d;\n            d = e;\n        }\n        return e;", "    \
    \    // >>> fib4((5l))\n        // (4l)\n        // >>> fib4((6l))\n        //\
    \ (8l)\n        // >>> fib4((7l))\n        // (14l)\n        // >>> fib4((8l))\n\
    \        // (24l)\n        // >>> fib4((9l))\n        // (42l)\n        // >>>\
    \ fib4((10l))\n        // (72l)\n        // >>> fib4((11l))\n        // (120l)\n\
    \        // >>> fib4((12l))\n        // (200l)\n        // >>> fib4((13l))\n \
    \       // (328l)\n        // >>> fib4((14l))\n        // (536l)\n        // >>>\
    \ fib4((15l))\n        // (872l)\n        // >>> fib4((16l))\n        // (1408l)\n\
    \        // >>> fib4((17l))\n        // (2280l)\n        // >>> fib4((18l))\n\
    \        // (3768l)\n        // >>> fib4((19l))\n        // (6144l)\n        //\
    \ >>> fib4((20l))\n        // (10016l)\n        // >>> fib4((21l))\n        //\
    \ (16160l)\n        // >>> fib4((22l))\n        // (26176l)\n        // >>> fib4((23l))\n\
    \        // (42496l)\n        // >>> fib4((24l))\n        // (68832l)\n      \
    \  // >>> fib4((25l))\n        // (111328l)\n        // >>> fib4((26l))\n    \
    \    // (180160l)\n        // >>> fib4((27l))\n        // (291456l)\n        //\
    \ >>> fib4((28l))\n        // (471616l)\n        // >>> fib4((29l))\n        //\
    \ (766016l)\n        // >>> fib4((30l))\n        // (1237632l)\n        // >>>\
    \ fib4((31l))\n        // (2007744l)\n        // >>> fib4((32l))\n        // (3235456l)\n\
    \        // >>> fib4((33l))", '        return 0;', "        if (n == 0) {\n  \
    \          return 0;\n        }\n        if (n == 1) {\n            return 0;\n\
    \        }\n        if (n == 2) {\n            return 2;\n        }\n        if\
    \ (n == 3) {\n            return 0;\n        }\n        long a = 0;\n        long\
    \ b = 0;\n        long c = 2;\n        long d = 0;\n        long e = 0;\n    \
    \    for (long i = 4; i <= n; i++) {\n            e = a + b + c + d;\n       \
    \     a = b;\n            b = c;\n            c = d;\n            d = e;\n   \
    \     }\n        return e;", '        return 0;', "        long a = 0;\n     \
    \   long b = 0;\n        long c = 2;\n        long d = 0;\n        for (long i\
    \ = 3; i <= n; i++) {\n            long temp = a + b + c + d;\n            a =\
    \ b;\n            b = c;\n            c = d;\n            d = temp;\n        }\n\
    \        return a + b + c + d;", "        long a = 0;\n        long b = 0;\n \
    \       long c = 2;\n        long d = 0;\n        for (long i = 3; i <= n; i++)\
    \ {\n            d = a + b + c;\n            a = b;\n            b = c;\n    \
    \        c = d;\n        }\n        return d;", "        long a = 0;\n       \
    \ long b = 0;\n        long c = 2;\n        long d = 0;\n        long e = 0;\n\
    \        for (long i = 4; i <= n; i++) {\n            e = a + b + c + d;\n   \
    \         a = b;\n            b = c;\n            c = d;\n            d = e;\n\
    \        }\n        return e;", "        long a = 0;\n        long b = 0;\n  \
    \      long c = 2;\n        long d = 0;\n        long e = 0;\n        for (long\
    \ i = 3; i <= n; i++) {\n            e = a + b + c + d;\n            a = b;\n\
    \            b = c;\n            c = d;\n            d = e;\n        }\n     \
    \   return e;", "        // >>> fib4((5l))\n        // (4l)\n        // >>> fib4((6l))\n\
    \        // (8l)\n        // >>> fib4((7l))\n        // (14l)\n        // >>>\
    \ fib4((8l))\n        // (25l)\n        // >>> fib4((9l))\n        // (43l)\n\
    \        // >>> fib4((10l))\n        // (74l)\n        // >>> fib4((11l))\n  \
    \      // (125l)\n        // >>> fib4((12l))\n        // (211l)\n        // >>>\
    \ fib4((13l))\n        // (354l)\n        // >>> fib4((14l))\n        // (590l)\n\
    \        // >>> fib4((15l))\n        // (977l)\n        // >>> fib4((16l))\n \
    \       // (1612l)\n        // >>> fib4((17l))\n        // (2689l)\n        //\
    \ >>> fib4((18l))\n        // (4401l)\n        // >>> fib4((19l))\n        //\
    \ (7290l)\n        // >>> fib4((20l))\n        // (11991l)\n        // >>> fib4((21l))\n\
    \        // (19684l)\n        // >>> fib4((22l))\n        // (32275l)\n      \
    \  // >>> fib4((23l))\n        // (52859l)\n        // >>> fib4((24l))\n     \
    \   // (86134l)\n        // >>> fib4((25l))\n        // (141493l)\n        //\
    \ >>> fib4((26l))\n        // (231677l)\n        // >>> fib4((27l))\n        //\
    \ (378150l)\n        // >>> fib4((28l))\n        // (619827l)\n        // >>>\
    \ fib4((29l))\n        // (1007977l)\n        // >>> fib4((30l))\n        // (1625854l)\n\
    \        // >>> fib4((31l))\n        // (2633831l)\n        // >>> fib4((32l))\n\
    \        // (4259685l)\n        // >>> fib4((33l))", "        long a = 0;\n  \
    \      long b = 0;\n        long c = 2;\n        long d = 0;\n        long e =\
    \ 0;\n        for (long i = 4; i <= n; i++) {\n            e = a + b + c + d;\n\
    \            a = b;\n            b = c;\n            c = d;\n            d = e;\n\
    \        }\n        return e;", "        if (n == 0) {\n            return 0;\n\
    \        }\n        if (n == 1) {\n            return 0;\n        }\n        if\
    \ (n == 2) {\n            return 2;\n        }\n        if (n == 3) {\n      \
    \      return 0;\n        }\n        long a = 0;\n        long b = 0;\n      \
    \  long c = 2;\n        long d = 0;\n        long e = 0;\n        for (long i\
    \ = 4; i <= n; i++) {\n            e = a + b + c + d;\n            a = b;\n  \
    \          b = c;\n            c = d;\n            d = e;\n        }\n       \
    \ return e;", "        if (n == 0) {\n            return 0;\n        }\n     \
    \   if (n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n \
    \           return 2;\n        }\n        if (n == 3) {\n            return 0;\n\
    \        }\n        long a = 0;\n        long b = 0;\n        long c = 2;\n  \
    \      long d = 0;\n        for (long i = 4; i <= n; i++) {\n            long\
    \ e = a + b + c + d;\n            a = b;\n            b = c;\n            c =\
    \ d;\n            d = e;\n        }\n        return a + b + c + d;", '        return
    0;', "        // >>> fib4((5l))\n        // (4l)\n        // >>> fib4((6l))\n\
    \        // (8l)\n        // >>> fib4((7l))\n        // (14l)\n        // >>>\
    \ fib4((8l))\n        // (24l)\n        // >>> fib4((9l))\n        // (44l)\n\
    \        // >>> fib4((10l))\n        // (80l)\n        // >>> fib4((11l))\n  \
    \      // (144l)\n        // >>> fib4((12l))\n        // (256l)\n        // >>>\
    \ fib4((13l))\n        // (456l)\n        // >>> fib4((14l))\n        // (816l)\n\
    \        // >>> fib4((15l))\n        // (1464l)\n        // >>> fib4((16l))\n\
    \        // (2624l)\n        // >>> fib4((17l))\n        // (4744l)\n        //\
    \ >>> fib4((18l))\n        // (8568l)\n        // >>> fib4((19l))\n        //\
    \ (15592l)\n        // >>> fib4((20l))\n        // (28256l)\n        // >>> fib4((21l))\n\
    \        // (51480l)\n        // >>> fib4((22l))\n        // (93696l)\n      \
    \  // >>> fib4((23l))\n        // (170592l)\n        // >>> fib4((24l))\n    \
    \    // (309968l)\n        // >>> fib4((25l))\n        // (562432l)\n        //\
    \ >>> fib4((26l))\n        // (1023168l)\n        // >>> fib4((27l))\n       \
    \ // (1864192l)\n        // >>> fib4((28l))\n        // (3388416l)\n        //\
    \ >>> fib4((29l))\n        // (6169088l)\n        // >>> fib4((30l))\n       \
    \ // (11292800l)\n        // >>> fib4((31l))\n        // (20549376l)\n       \
    \ // >>> fib4((32l))\n        // (37382656l)\n        // >>>", "        // >>>\
    \ fib4((5l))\n        // (4l)\n        // >>> fib4((6l))\n        // (8l)\n  \
    \      // >>> fib4((7l))\n        // (14l)\n        // >>> fib4((8l))\n      \
    \  // (24l)\n        // >>> fib4((9l))\n        // (42l)\n        // >>> fib4((10l))\n\
    \        // (72l)\n        // >>> fib4((11l))\n        // (120l)\n        // >>>\
    \ fib4((12l))\n        // (200l)\n        // >>> fib4((13l))\n        // (328l)\n\
    \        // >>> fib4((14l))\n        // (536l)\n        // >>> fib4((15l))\n \
    \       // (864l)\n        // >>> fib4((16l))\n        // (1400l)\n        //\
    \ >>> fib4((17l))\n        // (2264l)\n        // >>> fib4((18l))\n        //\
    \ (3664l)\n        // >>> fib4((19l))\n        // (5928l)\n        // >>> fib4((20l))\n\
    \        // (9632l)\n        // >>> fib4((21l))\n        // (15600l)\n       \
    \ // >>> fib4((22l))\n        // (25232l)\n        // >>> fib4((23l))\n      \
    \  // (40792l)\n        // >>> fib4((24l))\n        // (66064l)\n        // >>>\
    \ fib4((25l))\n        // (106952l)\n        // >>> fib4((26l))\n        // (173024l)\n\
    \        // >>> fib4((27l))\n        // (280776l)\n        // >>> fib4((28l))\n\
    \        // (453800l)\n        // >>> fib4((29l))\n        // (734656l)\n    \
    \    // >>> fib4((30l))\n        // (1188456l)\n        // >>> fib4((31l))\n \
    \       // (1923112l)\n        // >>> fib4((32l))\n        // (3111168l)\n   \
    \     // >>> fib4((33l))\n       ", "        // >>> fib4((5l))\n        // (4l)\n\
    \        // >>> fib4((6l))\n        // (8l)\n        // >>> fib4((7l))\n     \
    \   // (14l)\n        // >>> fib4((8l))\n        // (26l)\n        // >>> fib4((9l))\n\
    \        // (48l)\n        // >>> fib4((10l))\n        // (88l)\n        // >>>\
    \ fib4((11l))\n        // (164l)\n        // >>> fib4((12l))\n        // (304l)\n\
    \        // >>> fib4((13l))\n        // (568l)\n        // >>> fib4((14l))\n \
    \       // (1064l)\n        // >>> fib4((15l))\n        // (1996l)\n        //\
    \ >>> fib4((16l))\n        // (3736l)\n        // >>> fib4((17l))\n        //\
    \ (7024l)\n        // >>> fib4((18l))\n        // (13192l)\n        // >>> fib4((19l))\n\
    \        // (24784l)\n        // >>> fib4((20l))\n        // (46752l)\n      \
    \  // >>> fib4((21l))\n        // (87904l)\n        // >>> fib4((22l))\n     \
    \   // (165536l)\n        // >>> fib4((23l))\n        // (310864l)\n        //\
    \ >>> fib4((24l))\n        // (585728l)\n        // >>> fib4((25l))\n        //\
    \ (1105408l)\n        // >>> fib4((26l))\n        // (2087104l)\n        // >>>\
    \ fib4((27l))\n        // (3945984l)\n        // >>> fib4((28l))\n        // (7447040l)\n\
    \        // >>> fib4((29l))\n        // (14096256l)\n        // >>> fib4((30l))\n\
    \        // (26755584l)\n        // >>> fib4((31l))\n        // (50650112l)\n\
    \        // >>> fib4((32l))\n        // (95800320l)", "        long a = 0;\n \
    \       long b = 0;\n        long c = 2;\n        long d = 0;\n        long e\
    \ = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n      \
    \  long i = 0;\n        long j = 0;\n        long k = 0;\n        long l = 0;\n\
    \        long m = 0;\n        long o = 0;\n        long p = 0;\n        long q\
    \ = 0;\n        long r = 0;\n        long s = 0;\n        long t = 0;\n      \
    \  long u = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n\
    \        long y = 0;\n        long z = 0;\n        long aa = 0;\n        long\
    \ ab = 0;\n        long ac = 0;\n        long ad = 0;\n        long ae = 0;\n\
    \        long af = 0;\n        long ag = 0;\n        long ah = 0;\n        long\
    \ ai = 0;\n        long aj = 0;\n        long ak = 0;\n        long al = 0;\n\
    \        long am = 0;\n        long an = 0;\n        long ao = 0;\n        long\
    \ ap = 0;\n        long aq = 0;\n        long ar = 0;\n        long as = 0;\n\
    \        long at = 0;\n        long au = 0;\n        long av = 0;\n        long\
    \ aw = 0;\n        long ax = 0;\n        long ay = 0;\n        long az = 0;\n\
    \        long ba = 0;\n        long bb = 0;\n        long bc = 0;\n        long\
    \ bd = 0;\n        long be = 0;\n        long bf = 0;\n        long bg = 0;\n\
    \        long bh = 0;\n        long bi = 0;\n        long bj = 0;\n        long\
    \ bk = 0;\n        long bl = 0;\n        long bm = 0;\n        long bn = 0;\n\
    \        long bo = 0;\n        long bp = 0;\n        long bq = 0;\n        long\
    \ br = 0;\n        long bs = 0;\n        long b", "        if (n == 0) {\n   \
    \         return 0;\n        }\n        if (n == 1) {\n            return 0;\n\
    \        }\n        if (n == 2) {\n            return 2;\n        }\n        if\
    \ (n == 3) {\n            return 0;\n        }\n        long a = 0;\n        long\
    \ b = 0;\n        long c = 2;\n        long d = 0;\n        long e = 0;\n    \
    \    for (long i = 4; i <= n; i++) {\n            e = a + b + c + d;\n       \
    \     a = b;\n            b = c;\n            c = d;\n            d = e;\n   \
    \     }\n        return e;", "        long[] fib4 = new long[4];\n        fib4[0]\
    \ = 0;\n        fib4[1] = 0;\n        fib4[2] = 2;\n        fib4[3] = 0;\n   \
    \     for (int i = 4; i <= n; i++) {\n            fib4[3] = fib4[0] + fib4[1]\
    \ + fib4[2] + fib4[3];\n            fib4[0] = fib4[1];\n            fib4[1] =\
    \ fib4[2];\n            fib4[2] = fib4[3];\n        }\n        return fib4[3];"]
stop_tokens:
- "\n    }\n"

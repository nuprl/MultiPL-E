language: java
name: HumanEval_84_solve
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        // Your code here\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkspa91mk.java:27)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String binary = Long.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < binary.length(); i++) {\n \
    \           sum += Integer.parseInt(binary.substring(i, i + 1));\n        }\n\
    \        return Integer.toString(sum);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyh3d6ra9.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        // Write your code here\n        // To\
    \ print results to the standard output you can use System.out.println()\n    \
    \    // Example: System.out.println(\"Hello world!\");\n        return Long.toBinaryString(N);\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5bfz9fs4.java:29)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String s = Long.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n      \
    \      sum += Integer.parseInt(s.substring(i, i + 1));\n        }\n        return\
    \ Integer.toString(sum);\n    }\n    public static void main(String[] args) {\n\
    \    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgm_9o5i6.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String s = Long.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n      \
    \      sum += s.charAt(i) - '0';\n        }\n        return Integer.toString(sum);\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc5s6efh_.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String binary = Long.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < binary.length(); i++) {\n \
    \           sum += Integer.parseInt(binary.substring(i, i + 1));\n        }\n\
    \        return Integer.toString(sum);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyh3d6ra9.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String res = \"\";\n        while (N\
    \ > 0) {\n            res = (N % 2) + res;\n            N /= 2;\n        }\n \
    \       return res;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnakb1vit.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        // Your code here\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkspa91mk.java:27)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String binary = Long.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < binary.length(); i++) {\n \
    \           sum += Integer.parseInt(binary.substring(i, i + 1));\n        }\n\
    \        return Integer.toString(sum);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyh3d6ra9.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String binary = Long.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < binary.length(); i++) {\n \
    \           sum += Integer.parseInt(binary.substring(i, i + 1));\n        }\n\
    \        return Integer.toString(sum);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyh3d6ra9.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String binary = Long.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < binary.length(); i++) {\n \
    \           sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n     \
    \   }\n        return String.valueOf(sum);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7lubpoin.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        // Your code here\n        String binary\
    \ = Long.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0; i <\
    \ binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n\
    \    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2b99j3pm.java:32)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String binary = Long.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < binary.length(); i++) {\n \
    \           sum += Integer.parseInt(binary.substring(i, i + 1));\n        }\n\
    \        return Integer.toString(sum);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyh3d6ra9.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String s = \"\";\n        while (N >\
    \ 0) {\n            s = (N % 2) + s;\n            N /= 2;\n        }\n       \
    \ return s;\n    }\n    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwu4lbmuf.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String result = \"\";\n        while\
    \ (N > 0) {\n            result = (N % 2) + result;\n            N = N / 2;\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5g16voek.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String binary = Long.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < binary.length(); i++) {\n \
    \           sum += Character.getNumericValue(binary.charAt(i));\n        }\n \
    \       return Integer.toString(sum);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7pilv9lr.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String binary = Long.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < binary.length(); i++) {\n \
    \           sum += Integer.parseInt(String.valueOf(binary.charAt(i)));\n     \
    \   }\n        return String.valueOf(sum);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7lubpoin.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String s = Long.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n      \
    \      sum += Character.getNumericValue(s.charAt(i));\n        }\n        return\
    \ Integer.toString(sum);\n    }\n    public static void main(String[] args) {\n\
    \    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1fgpq_1i.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        // Your code here\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkspa91mk.java:27)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String binary = Long.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < binary.length(); i++) {\n \
    \           sum += Integer.parseInt(binary.substring(i, i + 1));\n        }\n\
    \        return Integer.toString(sum);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyh3d6ra9.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String s = Long.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n      \
    \      sum += s.charAt(i) - '0';\n        }\n        return Integer.toString(sum);\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc5s6efh_.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String result = \"\";\n        while\
    \ (N > 0) {\n            result = (N % 2) + result;\n            N /= 2;\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi1vvroxp.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N = N / 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprd9mil5y.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String bin = Long.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < bin.length(); i++) {\n    \
    \        sum += Integer.parseInt(bin.substring(i, i + 1));\n        }\n      \
    \  return Integer.toString(sum);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr3m1pamy.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        // Your code here\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkspa91mk.java:27)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        // Write your code here\n        // To\
    \ print results to the standard output you can use System.out.println()\n    \
    \    // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Long.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0; i <\
    \ binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n\
    \    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbbq_444a.java:34)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        // Write your code here\n        // To\
    \ print results to the standard output you can use System.out.println()\n    \
    \    // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Long.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0; i <\
    \ binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n\
    \    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbbq_444a.java:34)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        // Your code here\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkspa91mk.java:27)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        // Your code here\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkspa91mk.java:27)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        // Write your code here\n        // To\
    \ print results to the standard output you can use System.out.println()\n    \
    \    // Example: System.out.println(\"Hello world!\");\n        String binary\
    \ = Long.toBinaryString(N);\n        int sum = 0;\n        for (int i = 0; i <\
    \ binary.length(); i++) {\n            sum += Integer.parseInt(binary.substring(i,\
    \ i + 1));\n        }\n        return Integer.toString(sum);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n\
    \    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbbq_444a.java:34)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        // Write your code here\n        // To\
    \ print results to the standard output you can use System.out.println()\n    \
    \    // Example: System.out.println(\"Hello world!\");\n        StringBuilder\
    \ sb = new StringBuilder();\n        while (N > 0) {\n            sb.append(N\
    \ % 2);\n            N /= 2;\n        }\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyebotj1r.java:34)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String binary = Long.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < binary.length(); i++) {\n \
    \           sum += Integer.parseInt(binary.substring(i, i + 1));\n        }\n\
    \        return Integer.toString(sum);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyh3d6ra9.java:31)\n"
  stdout: ''
  timestamp: 1659804194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        String s = Long.toBinaryString(N);\n\
    \        int sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n      \
    \      sum += Integer.parseInt(s.substring(i, i + 1));\n        }\n        return\
    \ Integer.toString(sum);\n    }\n    public static void main(String[] args) {\n\
    \    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgm_9o5i6.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (N > 0) {\n            sb.append(N % 2);\n            N /= 2;\n\
    \        }\n        return sb.reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((1000l)).equals((\"1\")));\n  \
    \  assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp786h4d6l.java:31)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> solve((1000l))\n    // (\"1\"\
    )\n    // >>> solve((150l))\n    // (\"110\")\n    // >>> solve((147l))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static String solve(long N) {\n        return Long.toBinaryString(N);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i9hs4xo.java:26)\n"
  stdout: ''
  timestamp: 1659804193

language: java
name: HumanEval_93_encode
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n\
    \            } else {\n                c = Character.toUpperCase(c);\n       \
    \     }\n            if (c == 'a') {\n                c = 'c';\n            }\
    \ else if (c == 'e') {\n                c = 'g';\n            } else if (c ==\
    \ 'i') {\n                c = 'k';\n            } else if (c == 'o') {\n     \
    \           c = 'q';\n            } else if (c == 'u') {\n                c =\
    \ 'y';\n            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fn2wopd.java:45)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        message = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (c == 'a') {\n\
    \                sb2.append('c');\n            } else if (c == 'e') {\n      \
    \          sb2.append('g');\n            } else if (c == 'i') {\n            \
    \    sb2.append('k');\n            } else if (c == 'o') {\n                sb2.append('q');\n\
    \            } else if (c == 'u') {\n                sb2.append('y');\n      \
    \      } else {\n                sb2.append(c);\n            }\n        }\n  \
    \      return sb2.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiuulc0fb.java:51)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        // TODO: implement this function\n       \
    \ return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb7x_4wqc.java:24)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        String result = sb.toString();\n        sb = new StringBuilder();\n\
    \        for (int i = 0; i < result.length(); i++) {\n            char c = result.charAt(i);\n\
    \            if (c == 'a') {\n                sb.append('c');\n            } else\
    \ if (c == 'e') {\n                sb.append('g');\n            } else if (c ==\
    \ 'i') {\n                sb.append('k');\n            } else if (c == 'o') {\n\
    \                sb.append('q');\n            } else if (c == 'u') {\n       \
    \         sb.append('y');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_7wrqhfu.java:55)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    c = Character.toLowerCase(c);\n                } else\
    \ {\n                    c = Character.toUpperCase(c);\n                }\n  \
    \              if (c == 'a') {\n                    c = 'c';\n               \
    \ } else if (c == 'e') {\n                    c = 'g';\n                } else\
    \ if (c == 'i') {\n                    c = 'k';\n                } else if (c\
    \ == 'o') {\n                    c = 'q';\n                } else if (c == 'u')\
    \ {\n                    c = 'y';\n                }\n            }\n        \
    \    sb.append(c);\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpml3w573r.java:47)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (char c : sb.toString().toCharArray())\
    \ {\n            if (c == 'a') {\n                sb2.append('c');\n         \
    \   } else if (c == 'e') {\n                sb2.append('g');\n            } else\
    \ if (c == 'i') {\n                sb2.append('k');\n            } else if (c\
    \ == 'o') {\n                sb2.append('q');\n            } else if (c == 'u')\
    \ {\n                sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueu4xfvi.java:50)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n\
    \            } else {\n                c = Character.toUpperCase(c);\n       \
    \     }\n            if (c == 'a') {\n                c = 'c';\n            }\
    \ else if (c == 'e') {\n                c = 'g';\n            } else if (c ==\
    \ 'i') {\n                c = 'k';\n            } else if (c == 'o') {\n     \
    \           c = 'q';\n            } else if (c == 'u') {\n                c =\
    \ 'y';\n            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fn2wopd.java:45)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n\
    \            } else {\n                c = Character.toUpperCase(c);\n       \
    \     }\n            if (c == 'a') {\n                c = 'c';\n            }\
    \ else if (c == 'e') {\n                c = 'g';\n            } else if (c ==\
    \ 'i') {\n                c = 'k';\n            } else if (c == 'o') {\n     \
    \           c = 'q';\n            } else if (c == 'u') {\n                c =\
    \ 'y';\n            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fn2wopd.java:45)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n\
    \            } else {\n                c = Character.toUpperCase(c);\n       \
    \     }\n            if (c == 'a') {\n                c = 'c';\n            }\
    \ else if (c == 'e') {\n                c = 'g';\n            } else if (c ==\
    \ 'i') {\n                c = 'k';\n            } else if (c == 'o') {\n     \
    \           c = 'q';\n            } else if (c == 'u') {\n                c =\
    \ 'y';\n            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fn2wopd.java:45)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String encoded = sb.toString();\n        String vowels = \"aeiou\";\n\
    \        String alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n        for (int i\
    \ = 0; i < encoded.length(); i++) {\n            char c = encoded.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int index = alphabet.indexOf(c);\n\
    \                sb.setCharAt(i, alphabet.charAt((index + 2) % alphabet.length()));\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzh10m9vw.java:44)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String swapped = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (char c : swapped.toCharArray()) {\n            if (c == 'a') {\n\
    \                sb2.append('c');\n            } else if (c == 'e') {\n      \
    \          sb2.append('g');\n            } else if (c == 'i') {\n            \
    \    sb2.append('k');\n            } else if (c == 'o') {\n                sb2.append('q');\n\
    \            } else if (c == 'u') {\n                sb2.append('w');\n      \
    \      } else {\n                sb2.append(c);\n            }\n        }\n  \
    \      return sb2.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfqbm8_b.java:51)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n\
    \            } else {\n                c = Character.toUpperCase(c);\n       \
    \     }\n            if (c == 'a') {\n                c = 'c';\n            }\
    \ else if (c == 'e') {\n                c = 'g';\n            } else if (c ==\
    \ 'i') {\n                c = 'k';\n            } else if (c == 'o') {\n     \
    \           c = 'q';\n            } else if (c == 'u') {\n                c =\
    \ 'y';\n            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fn2wopd.java:45)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (char c : sb.toString().toCharArray())\
    \ {\n            if (c == 'a') {\n                sb2.append('c');\n         \
    \   } else if (c == 'e') {\n                sb2.append('g');\n            } else\
    \ if (c == 'i') {\n                sb2.append('k');\n            } else if (c\
    \ == 'o') {\n                sb2.append('q');\n            } else if (c == 'u')\
    \ {\n                sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueu4xfvi.java:50)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphi780w9h.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n\
    \            } else {\n                c = Character.toUpperCase(c);\n       \
    \     }\n            if (c == 'a') {\n                c = 'c';\n            }\
    \ else if (c == 'e') {\n                c = 'g';\n            } else if (c ==\
    \ 'i') {\n                c = 'k';\n            } else if (c == 'o') {\n     \
    \           c = 'q';\n            } else if (c == 'u') {\n                c =\
    \ 'y';\n            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fn2wopd.java:45)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String encoded = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (char c : encoded.toCharArray()) {\n            if (c == 'a') {\n\
    \                sb2.append('c');\n            } else if (c == 'e') {\n      \
    \          sb2.append('g');\n            } else if (c == 'i') {\n            \
    \    sb2.append('k');\n            } else if (c == 'o') {\n                sb2.append('q');\n\
    \            } else if (c == 'u') {\n                sb2.append('y');\n      \
    \      } else {\n                sb2.append(c);\n            }\n        }\n  \
    \      return sb2.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppcjsfa_m.java:51)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String result = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (char c : result.toCharArray()) {\n            if (c == 'a') {\n\
    \                sb2.append('c');\n            } else if (c == 'e') {\n      \
    \          sb2.append('g');\n            } else if (c == 'i') {\n            \
    \    sb2.append('k');\n            } else if (c == 'o') {\n                sb2.append('q');\n\
    \            } else if (c == 'u') {\n                sb2.append('y');\n      \
    \      } else {\n                sb2.append(c);\n            }\n        }\n  \
    \      return sb2.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8398sw17.java:51)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String encoded = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (char c : encoded.toCharArray()) {\n            if (c == 'a') {\n\
    \                sb2.append('c');\n            } else if (c == 'e') {\n      \
    \          sb2.append('g');\n            } else if (c == 'i') {\n            \
    \    sb2.append('k');\n            } else if (c == 'o') {\n                sb2.append('q');\n\
    \            } else if (c == 'u') {\n                sb2.append('y');\n      \
    \      } else {\n                sb2.append(c);\n            }\n        }\n  \
    \      return sb2.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppcjsfa_m.java:51)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphi780w9h.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        // TODO: Implement this function\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmp5ouhowf0.java:24)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphi780w9h.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (c >= 'a' && c\
    \ <= 'z') {\n                sb.append((char) (c - 32));\n            } else if\
    \ (c >= 'A' && c <= 'Z') {\n                sb.append((char) (c + 32));\n    \
    \        } else {\n                sb.append(c);\n            }\n        }\n \
    \       return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps_6df5if.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (c >= 'a' && c\
    \ <= 'z') {\n                sb.append((char) (c - 32));\n            } else if\
    \ (c >= 'A' && c <= 'Z') {\n                sb.append((char) (c + 32));\n    \
    \        } else {\n                sb.append(c);\n            }\n        }\n \
    \       return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps_6df5if.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (char c : sb.toString().toCharArray())\
    \ {\n            if (c == 'a') {\n                sb2.append('c');\n         \
    \   } else if (c == 'e') {\n                sb2.append('g');\n            } else\
    \ if (c == 'i') {\n                sb2.append('k');\n            } else if (c\
    \ == 'o') {\n                sb2.append('q');\n            } else if (c == 'u')\
    \ {\n                sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueu4xfvi.java:50)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    c = Character.toLowerCase(c);\n                } else\
    \ {\n                    c = Character.toUpperCase(c);\n                }\n  \
    \              if (c == 'a') {\n                    c = 'c';\n               \
    \ } else if (c == 'e') {\n                    c = 'g';\n                } else\
    \ if (c == 'i') {\n                    c = 'k';\n                } else if (c\
    \ == 'o') {\n                    c = 'q';\n                } else if (c == 'u')\
    \ {\n                    c = 'y';\n                }\n            }\n        \
    \    sb.append(c);\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpml3w573r.java:47)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String swapped = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (char c : swapped.toCharArray()) {\n            if (c == 'a') {\n\
    \                sb2.append('c');\n            } else if (c == 'e') {\n      \
    \          sb2.append('g');\n            } else if (c == 'i') {\n            \
    \    sb2.append('k');\n            } else if (c == 'o') {\n                sb2.append('q');\n\
    \            } else if (c == 'u') {\n                sb2.append('y');\n      \
    \      } else {\n                sb2.append(c);\n            }\n        }\n  \
    \      return sb2.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi2dnfavk.java:51)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        String vowels = \"aeiou\";\n        for (char c : message.toCharArray())\
    \ {\n            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        StringBuilder sb2 = new StringBuilder();\n        for\
    \ (char c : sb.toString().toCharArray()) {\n            if (vowels.indexOf(c)\
    \ != -1) {\n                sb2.append(vowels.charAt((vowels.indexOf(c) + 2) %\
    \ 5));\n            } else {\n                sb2.append(c);\n            }\n\
    \        }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx3vadk5r.java:44)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n\
    \            } else {\n                c = Character.toUpperCase(c);\n       \
    \     }\n            if (c == 'a') {\n                c = 'c';\n            }\
    \ else if (c == 'e') {\n                c = 'g';\n            } else if (c ==\
    \ 'i') {\n                c = 'k';\n            } else if (c == 'o') {\n     \
    \           c = 'q';\n            } else if (c == 'u') {\n                c =\
    \ 'y';\n            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fn2wopd.java:45)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphi780w9h.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n\
    \            } else {\n                c = Character.toUpperCase(c);\n       \
    \     }\n            if (c == 'a') {\n                c = 'c';\n            }\
    \ else if (c == 'e') {\n                c = 'g';\n            } else if (c ==\
    \ 'i') {\n                c = 'k';\n            } else if (c == 'o') {\n     \
    \           c = 'q';\n            } else if (c == 'u') {\n                c =\
    \ 'y';\n            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fn2wopd.java:45)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (c >= 'a' && c\
    \ <= 'z') {\n                sb.append((char) (c - 'a' + 'A'));\n            }\
    \ else if (c >= 'A' && c <= 'Z') {\n                sb.append((char) (c - 'A'\
    \ + 'a'));\n            } else {\n                sb.append(c);\n            }\n\
    \        }\n        StringBuilder sb2 = new StringBuilder();\n        for (char\
    \ c : sb.toString().toCharArray()) {\n            if (c == 'a') {\n          \
    \      sb2.append('c');\n            } else if (c == 'e') {\n                sb2.append('g');\n\
    \            } else if (c == 'i') {\n                sb2.append('k');\n      \
    \      } else if (c == 'o') {\n                sb2.append('q');\n            }\
    \ else if (c == 'u') {\n                sb2.append('y');\n            } else {\n\
    \                sb2.append(c);\n            }\n        }\n        return sb2.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprcqr46ac.java:50)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (c >= 'a' && c <= 'z') {\n                sb.append((char)(c -\
    \ 32));\n            } else if (c >= 'A' && c <= 'Z') {\n                sb.append((char)(c\
    \ + 32));\n            } else {\n                sb.append(c);\n            }\n\
    \        }\n        message = sb.toString();\n        sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (c == 'a') {\n                sb.append('c');\n            } else\
    \ if (c == 'e') {\n                sb.append('g');\n            } else if (c ==\
    \ 'i') {\n                sb.append('k');\n            } else if (c == 'o') {\n\
    \                sb.append('q');\n            } else if (c == 'u') {\n       \
    \         sb.append('y');\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptq8lb0tf.java:53)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    c = Character.toLowerCase(c);\n                } else\
    \ {\n                    c = Character.toUpperCase(c);\n                }\n  \
    \              if (c == 'a') {\n                    c = 'c';\n               \
    \ } else if (c == 'e') {\n                    c = 'g';\n                } else\
    \ if (c == 'i') {\n                    c = 'k';\n                } else if (c\
    \ == 'o') {\n                    c = 'q';\n                } else if (c == 'u')\
    \ {\n                    c = 'y';\n                }\n            }\n        \
    \    sb.append(c);\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpml3w573r.java:47)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String swapped = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (int i = 0; i < swapped.length(); i++) {\n            char c = swapped.charAt(i);\n\
    \            if (c == 'a') {\n                sb2.append('c');\n            }\
    \ else if (c == 'e') {\n                sb2.append('g');\n            } else if\
    \ (c == 'i') {\n                sb2.append('k');\n            } else if (c ==\
    \ 'o') {\n                sb2.append('q');\n            } else if (c == 'u') {\n\
    \                sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84mlei6z.java:53)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphi780w9h.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String s = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (c == 'a') {\n                sb2.append('c');\n            }\
    \ else if (c == 'e') {\n                sb2.append('g');\n            } else if\
    \ (c == 'i') {\n                sb2.append('k');\n            } else if (c ==\
    \ 'o') {\n                sb2.append('q');\n            } else if (c == 'u') {\n\
    \                sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi9b09xxw.java:53)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String encoded = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (char c : encoded.toCharArray()) {\n            if (c == 'a') {\n\
    \                sb2.append('c');\n            } else if (c == 'e') {\n      \
    \          sb2.append('g');\n            } else if (c == 'i') {\n            \
    \    sb2.append('k');\n            } else if (c == 'o') {\n                sb2.append('q');\n\
    \            } else if (c == 'u') {\n                sb2.append('y');\n      \
    \      } else {\n                sb2.append(c);\n            }\n        }\n  \
    \      return sb2.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppcjsfa_m.java:51)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String result = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (int i = 0; i < result.length(); i++) {\n            char c = result.charAt(i);\n\
    \            if (c == 'a') {\n                sb2.append('c');\n            }\
    \ else if (c == 'e') {\n                sb2.append('g');\n            } else if\
    \ (c == 'i') {\n                sb2.append('k');\n            } else if (c ==\
    \ 'o') {\n                sb2.append('q');\n            } else if (c == 'u') {\n\
    \                sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn9ioy7wj.java:53)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphi780w9h.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        // TODO: Implement this function\n       \
    \ return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprfsh8z7t.java:24)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (char c : sb.toString().toCharArray())\
    \ {\n            if (c == 'a') {\n                sb2.append('c');\n         \
    \   } else if (c == 'e') {\n                sb2.append('g');\n            } else\
    \ if (c == 'i') {\n                sb2.append('k');\n            } else if (c\
    \ == 'o') {\n                sb2.append('q');\n            } else if (c == 'u')\
    \ {\n                sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueu4xfvi.java:50)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String encoded = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (char c : encoded.toCharArray()) {\n            if (c == 'a') {\n\
    \                sb2.append('c');\n            } else if (c == 'e') {\n      \
    \          sb2.append('g');\n            } else if (c == 'i') {\n            \
    \    sb2.append('k');\n            } else if (c == 'o') {\n                sb2.append('q');\n\
    \            } else if (c == 'u') {\n                sb2.append('y');\n      \
    \      } else {\n                sb2.append(c);\n            }\n        }\n  \
    \      return sb2.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppcjsfa_m.java:51)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (c >= 'a' && c\
    \ <= 'z') {\n                sb.append((char) (c - 'a' + 'A'));\n            }\
    \ else if (c >= 'A' && c <= 'Z') {\n                sb.append((char) (c - 'A'\
    \ + 'a'));\n            } else {\n                sb.append(c);\n            }\n\
    \        }\n        StringBuilder sb2 = new StringBuilder();\n        for (char\
    \ c : sb.toString().toCharArray()) {\n            if (c == 'a') {\n          \
    \      sb2.append('c');\n            } else if (c == 'e') {\n                sb2.append('g');\n\
    \            } else if (c == 'i') {\n                sb2.append('k');\n      \
    \      } else if (c == 'o') {\n                sb2.append('q');\n            }\
    \ else if (c == 'u') {\n                sb2.append('y');\n            } else {\n\
    \                sb2.append(c);\n            }\n        }\n        return sb2.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprcqr46ac.java:50)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isLetter(c))\
    \ {\n                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        StringBuilder sb2 = new StringBuilder();\n    \
    \    for (char c : sb.toString().toCharArray()) {\n            if (c == 'a') {\n\
    \                sb2.append('c');\n            } else if (c == 'e') {\n      \
    \          sb2.append('g');\n            } else if (c == 'i') {\n            \
    \    sb2.append('k');\n            } else if (c == 'o') {\n                sb2.append('q');\n\
    \            } else if (c == 'u') {\n                sb2.append('y');\n      \
    \      } else {\n                sb2.append(c);\n            }\n        }\n  \
    \      return sb2.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7atld124.java:52)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        StringBuilder sb2 = new StringBuilder();\n        for\
    \ (int i = 0; i < sb.length(); i++) {\n            char c = sb.charAt(i);\n  \
    \          if (c == 'a') {\n                sb2.append('c');\n            } else\
    \ if (c == 'e') {\n                sb2.append('g');\n            } else if (c\
    \ == 'i') {\n                sb2.append('k');\n            } else if (c == 'o')\
    \ {\n                sb2.append('q');\n            } else if (c == 'u') {\n  \
    \              sb2.append('w');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfusty1b_.java:54)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String result = sb.toString();\n        String vowels = \"aeiou\";\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ result.length(); i++) {\n            char c = result.charAt(i);\n          \
    \  if (vowels.indexOf(c) != -1) {\n                sb2.append(vowels.charAt((vowels.indexOf(c)\
    \ + 2) % 5));\n            } else {\n                sb2.append(c);\n        \
    \    }\n        }\n        return sb2.toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzo0nzmkb.java:45)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphi780w9h.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        String vowels = \"aeiou\";\n        for (int i = 0; i < message.length();\
    \ i++) {\n            char c = message.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                c = Character.toLowerCase(c);\n            } else if (Character.isLowerCase(c))\
    \ {\n                c = Character.toUpperCase(c);\n            }\n          \
    \  if (vowels.indexOf(c) != -1) {\n                int index = (vowels.indexOf(c)\
    \ + 2) % vowels.length();\n                c = vowels.charAt(index);\n       \
    \     }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuoqljywy.java:38)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n\
    \            } else {\n                c = Character.toUpperCase(c);\n       \
    \     }\n            if (c == 'a') {\n                c = 'c';\n            }\
    \ else if (c == 'e') {\n                c = 'g';\n            } else if (c ==\
    \ 'i') {\n                c = 'k';\n            } else if (c == 'o') {\n     \
    \           c = 'q';\n            } else if (c == 'u') {\n                c =\
    \ 'y';\n            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fn2wopd.java:45)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    c = Character.toLowerCase(c);\n                } else\
    \ {\n                    c = Character.toUpperCase(c);\n                }\n  \
    \              if (c == 'a') {\n                    c = 'c';\n               \
    \ } else if (c == 'e') {\n                    c = 'g';\n                } else\
    \ if (c == 'i') {\n                    c = 'k';\n                } else if (c\
    \ == 'o') {\n                    c = 'q';\n                } else if (c == 'u')\
    \ {\n                    c = 'y';\n                }\n            }\n        \
    \    sb.append(c);\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpml3w573r.java:47)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isLetter(c))\
    \ {\n                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        StringBuilder sb2 = new StringBuilder();\n    \
    \    for (char c : sb.toString().toCharArray()) {\n            if (c == 'a') {\n\
    \                sb2.append('c');\n            } else if (c == 'e') {\n      \
    \          sb2.append('g');\n            } else if (c == 'i') {\n            \
    \    sb2.append('k');\n            } else if (c == 'o') {\n                sb2.append('q');\n\
    \            } else if (c == 'u') {\n                sb2.append('y');\n      \
    \      } else {\n                sb2.append(c);\n            }\n        }\n  \
    \      return sb2.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7atld124.java:52)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    c = Character.toLowerCase(c);\n                } else\
    \ {\n                    c = Character.toUpperCase(c);\n                }\n  \
    \              if (c == 'a') {\n                    c = 'c';\n               \
    \ } else if (c == 'e') {\n                    c = 'g';\n                } else\
    \ if (c == 'i') {\n                    c = 'k';\n                } else if (c\
    \ == 'o') {\n                    c = 'q';\n                } else if (c == 'u')\
    \ {\n                    c = 'y';\n                }\n            }\n        \
    \    sb.append(c);\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpml3w573r.java:47)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c));\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String s = sb.toString();\n        sb = new\
    \ StringBuilder();\n        for (char c : s.toCharArray()) {\n            if (Character.isLetter(c))\
    \ {\n                if (c == 'z') {\n                    sb.append('b');\n  \
    \              } else if (c == 'Z') {\n                    sb.append('B');\n \
    \               } else if (c == 'y') {\n                    sb.append('a');\n\
    \                } else if (c == 'Y') {\n                    sb.append('A');\n\
    \                } else if (c == 'u') {\n                    sb.append('c');\n\
    \                } else if (c == 'U') {\n                    sb.append('C');\n\
    \                } else if (c == 'i') {\n                    sb.append('e');\n\
    \                } else if (c == 'I') {\n                    sb.append('E');\n\
    \                } else if (c == 'o') {\n                    sb.append('g');\n\
    \                } else if (c == 'O') {\n                    sb.append('G');\n\
    \                } else {\n                    sb.append((char)(c + 2));\n   \
    \             }\n            } else {\n                sb.append(c);\n       \
    \     }\n        }\n        return sb.toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpogezkn8j.java:62)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String newMessage = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (int i = 0; i < newMessage.length(); i++) {\n            char c =\
    \ newMessage.charAt(i);\n            if (c == 'a') {\n                sb2.append('c');\n\
    \            } else if (c == 'e') {\n                sb2.append('g');\n      \
    \      } else if (c == 'i') {\n                sb2.append('k');\n            }\
    \ else if (c == 'o') {\n                sb2.append('q');\n            } else if\
    \ (c == 'u') {\n                sb2.append('y');\n            } else {\n     \
    \           sb2.append(c);\n            }\n        }\n        return sb2.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppo1fyi3u.java:53)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n\
    \            } else {\n                c = Character.toUpperCase(c);\n       \
    \     }\n            if (c == 'a') {\n                c = 'c';\n            }\
    \ else if (c == 'e') {\n                c = 'g';\n            } else if (c ==\
    \ 'i') {\n                c = 'k';\n            } else if (c == 'o') {\n     \
    \           c = 'q';\n            } else if (c == 'u') {\n                c =\
    \ 'y';\n            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fn2wopd.java:45)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String encoded = sb.toString();\n        String vowels = \"aeiou\";\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (char c : encoded.toCharArray())\
    \ {\n            if (vowels.indexOf(c) != -1) {\n                int index = vowels.indexOf(c);\n\
    \                index = (index + 2) % vowels.length();\n                sb2.append(vowels.charAt(index));\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjuf_h0m4.java:45)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (char c : sb.toString().toCharArray())\
    \ {\n            if (c == 'a') {\n                sb2.append('c');\n         \
    \   } else if (c == 'e') {\n                sb2.append('g');\n            } else\
    \ if (c == 'i') {\n                sb2.append('k');\n            } else if (c\
    \ == 'o') {\n                sb2.append('q');\n            } else if (c == 'u')\
    \ {\n                sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueu4xfvi.java:50)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String newMessage = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (char c : newMessage.toCharArray()) {\n            if (c == 'a')\
    \ {\n                sb2.append('c');\n            } else if (c == 'e') {\n  \
    \              sb2.append('g');\n            } else if (c == 'i') {\n        \
    \        sb2.append('k');\n            } else if (c == 'o') {\n              \
    \  sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfibjrt3m.java:51)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (c >= 'a' && c\
    \ <= 'z') {\n                sb.append((char) (c - 'a' + 'A'));\n            }\
    \ else if (c >= 'A' && c <= 'Z') {\n                sb.append((char) (c - 'A'\
    \ + 'a'));\n            } else {\n                sb.append(c);\n            }\n\
    \        }\n        String result = sb.toString();\n        sb = new StringBuilder();\n\
    \        for (char c : result.toCharArray()) {\n            if (c == 'a' || c\
    \ == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                sb.append((char)\
    \ (c + 2));\n            } else if (c == 'z') {\n                sb.append('b');\n\
    \            } else if (c == 'y') {\n                sb.append('a');\n       \
    \     } else {\n                sb.append(c);\n            }\n        }\n    \
    \    return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpct_588q8.java:47)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        StringBuilder sb2 = new StringBuilder();\n        for\
    \ (int i = 0; i < sb.length(); i++) {\n            char c = sb.charAt(i);\n  \
    \          if (c == 'a') {\n                sb2.append('c');\n            } else\
    \ if (c == 'e') {\n                sb2.append('g');\n            } else if (c\
    \ == 'i') {\n                sb2.append('k');\n            } else if (c == 'o')\
    \ {\n                sb2.append('q');\n            } else if (c == 'u') {\n  \
    \              sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsceodohc.java:54)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String result = sb.toString();\n        String vowels = \"aeiou\";\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ result.length(); i++) {\n            char c = result.charAt(i);\n          \
    \  if (vowels.indexOf(c) != -1) {\n                int index = (vowels.indexOf(c)\
    \ + 2) % vowels.length();\n                sb2.append(vowels.charAt(index));\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp944u12i1.java:46)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (char c : sb.toString().toCharArray())\
    \ {\n            if (c == 'a') {\n                sb2.append('c');\n         \
    \   } else if (c == 'e') {\n                sb2.append('g');\n            } else\
    \ if (c == 'i') {\n                sb2.append('k');\n            } else if (c\
    \ == 'o') {\n                sb2.append('q');\n            } else if (c == 'u')\
    \ {\n                sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueu4xfvi.java:50)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphi780w9h.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        StringBuilder sb2 = new StringBuilder();\n        for\
    \ (int i = 0; i < sb.length(); i++) {\n            char c = sb.charAt(i);\n  \
    \          if (c == 'a') {\n                sb2.append('c');\n            } else\
    \ if (c == 'e') {\n                sb2.append('g');\n            } else if (c\
    \ == 'i') {\n                sb2.append('k');\n            } else if (c == 'o')\
    \ {\n                sb2.append('q');\n            } else if (c == 'u') {\n  \
    \              sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsceodohc.java:54)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphi780w9h.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'A') {\n                sb2.append('C');\n            } else if (c == 'E') {\n\
    \                sb2.append('G');\n            } else if (c == 'I') {\n      \
    \          sb2.append('K');\n            } else if (c == 'O') {\n            \
    \    sb2.append('Q');\n            } else if (c == 'U') {\n                sb2.append('S');\n\
    \            } else if (c == 'C') {\n                sb2.append('E');\n      \
    \      } else if (c == 'G') {\n                sb2.append('I');\n            }\
    \ else if (c == 'K') {\n                sb2.append('M');\n            } else if\
    \ (c == 'Q') {\n                sb2.append('S');\n            } else if (c ==\
    \ 'S') {\n                sb2.append('U');\n            } else {\n           \
    \     sb2.append(c);\n            }\n        }\n        return sb2.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhx2chdf.java:61)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        // TODO: Implement this function\n       \
    \ return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprfsh8z7t.java:24)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c));\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (char c : sb.toString().toCharArray()) {\n            if (c == 'a')\
    \ {\n                sb2.append('c');\n            } else if (c == 'e') {\n  \
    \              sb2.append('g');\n            } else if (c == 'i') {\n        \
    \        sb2.append('k');\n            } else if (c == 'o') {\n              \
    \  sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5d87sd1_.java:48)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n\
    \            } else {\n                c = Character.toUpperCase(c);\n       \
    \     }\n            if (c == 'a') {\n                c = 'c';\n            }\
    \ else if (c == 'e') {\n                c = 'g';\n            } else if (c ==\
    \ 'i') {\n                c = 'k';\n            } else if (c == 'o') {\n     \
    \           c = 'q';\n            } else if (c == 'u') {\n                c =\
    \ 'y';\n            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fn2wopd.java:45)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String swapped = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (char c : swapped.toCharArray()) {\n            if (c == 'a') {\n\
    \                sb2.append('c');\n            } else if (c == 'e') {\n      \
    \          sb2.append('g');\n            } else if (c == 'i') {\n            \
    \    sb2.append('k');\n            } else if (c == 'o') {\n                sb2.append('q');\n\
    \            } else if (c == 'u') {\n                sb2.append('w');\n      \
    \      } else {\n                sb2.append(c);\n            }\n        }\n  \
    \      return sb2.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfqbm8_b.java:51)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String newMessage = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (char c : newMessage.toCharArray()) {\n            if (c == 'a')\
    \ {\n                sb2.append('c');\n            } else if (c == 'e') {\n  \
    \              sb2.append('g');\n            } else if (c == 'i') {\n        \
    \        sb2.append('k');\n            } else if (c == 'o') {\n              \
    \  sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfibjrt3m.java:51)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        String vowels = \"aeiou\";\n        for (char c : message.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (char c : sb.toString().toCharArray())\
    \ {\n            if (vowels.indexOf(c) != -1) {\n                int index = vowels.indexOf(c);\n\
    \                if (index == 4) {\n                    sb2.append(vowels.charAt(0));\n\
    \                } else {\n                    sb2.append(vowels.charAt(index\
    \ + 2));\n                }\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpty2_h8mo.java:47)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String result = sb.toString();\n        String vowels = \"aeiou\";\n\
    \        for (int i = 0; i < vowels.length(); i++) {\n            char c = vowels.charAt(i);\n\
    \            int index = result.indexOf(c);\n            while (index != -1) {\n\
    \                result = result.substring(0, index) + vowels.charAt((i + 2) %\
    \ vowels.length()) + result.substring(index + 1);\n                index = result.indexOf(c,\
    \ index + 1);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnb6ec8hf.java:44)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphi780w9h.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        String result = sb.toString();\n        String vowels\
    \ = \"aeiou\";\n        for (int i = 0; i < result.length(); i++) {\n        \
    \    char c = result.charAt(i);\n            if (vowels.indexOf(c) != -1) {\n\
    \                int index = (vowels.indexOf(c) + 2) % vowels.length();\n    \
    \            result = result.substring(0, i) + vowels.charAt(index) + result.substring(i\
    \ + 1);\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwdu0l28f.java:45)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String swappedCase = sb.toString();\n        StringBuilder sb2 = new\
    \ StringBuilder();\n        for (char c : swappedCase.toCharArray()) {\n     \
    \       if (c == 'a') {\n                sb2.append('c');\n            } else\
    \ if (c == 'e') {\n                sb2.append('g');\n            } else if (c\
    \ == 'i') {\n                sb2.append('k');\n            } else if (c == 'o')\
    \ {\n                sb2.append('q');\n            } else if (c == 'u') {\n  \
    \              sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzvar2pr.java:51)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String swapped = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (char c : swapped.toCharArray()) {\n            if (c == 'a') {\n\
    \                sb2.append('c');\n            } else if (c == 'e') {\n      \
    \          sb2.append('g');\n            } else if (c == 'i') {\n            \
    \    sb2.append('k');\n            } else if (c == 'o') {\n                sb2.append('q');\n\
    \            } else if (c == 'u') {\n                sb2.append('y');\n      \
    \      } else {\n                sb2.append(c);\n            }\n        }\n  \
    \      return sb2.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi2dnfavk.java:51)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    c = Character.toLowerCase(c);\n                } else\
    \ {\n                    c = Character.toUpperCase(c);\n                }\n  \
    \              if (c == 'a') {\n                    c = 'c';\n               \
    \ } else if (c == 'e') {\n                    c = 'g';\n                } else\
    \ if (c == 'i') {\n                    c = 'k';\n                } else if (c\
    \ == 'o') {\n                    c = 'q';\n                } else if (c == 'u')\
    \ {\n                    c = 'y';\n                }\n            }\n        \
    \    sb.append(c);\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpml3w573r.java:47)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n\
    \            } else {\n                c = Character.toUpperCase(c);\n       \
    \     }\n            if (c == 'a') {\n                c = 'c';\n            }\
    \ else if (c == 'e') {\n                c = 'g';\n            } else if (c ==\
    \ 'i') {\n                c = 'k';\n            } else if (c == 'o') {\n     \
    \           c = 'q';\n            } else if (c == 'u') {\n                c =\
    \ 'y';\n            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fn2wopd.java:45)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        // TODO: Implement this function\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmp5ouhowf0.java:24)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String newMessage = sb.toString();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        for (char c : newMessage.toCharArray()) {\n            if (c == 'a')\
    \ {\n                sb2.append('c');\n            } else if (c == 'e') {\n  \
    \              sb2.append('g');\n            } else if (c == 'i') {\n        \
    \        sb2.append('k');\n            } else if (c == 'o') {\n              \
    \  sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfibjrt3m.java:51)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n\
    \            } else {\n                c = Character.toUpperCase(c);\n       \
    \     }\n            if (c == 'a') {\n                c = 'c';\n            }\
    \ else if (c == 'e') {\n                c = 'g';\n            } else if (c ==\
    \ 'i') {\n                c = 'k';\n            } else if (c == 'o') {\n     \
    \           c = 'q';\n            } else if (c == 'u') {\n                c =\
    \ 'y';\n            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fn2wopd.java:45)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (char c : sb.toString().toCharArray())\
    \ {\n            if (c == 'a') {\n                sb2.append('c');\n         \
    \   } else if (c == 'e') {\n                sb2.append('g');\n            } else\
    \ if (c == 'i') {\n                sb2.append('k');\n            } else if (c\
    \ == 'o') {\n                sb2.append('q');\n            } else if (c == 'u')\
    \ {\n                sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueu4xfvi.java:50)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (c >= 'a' && c <= 'z') {\n                c = (char) ('A' + (c\
    \ - 'a'));\n            } else if (c >= 'A' && c <= 'Z') {\n                c\
    \ = (char) ('a' + (c - 'A'));\n            }\n            if (c == 'a') {\n  \
    \              c = 'c';\n            } else if (c == 'e') {\n                c\
    \ = 'g';\n            } else if (c == 'i') {\n                c = 'k';\n     \
    \       } else if (c == 'o') {\n                c = 'q';\n            } else if\
    \ (c == 'u') {\n                c = 'y';\n            }\n            sb.append(c);\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu57o0sj8.java:45)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (char c : sb.toString().toCharArray())\
    \ {\n            if (c == 'a') {\n                sb2.append('c');\n         \
    \   } else if (c == 'e') {\n                sb2.append('g');\n            } else\
    \ if (c == 'i') {\n                sb2.append('k');\n            } else if (c\
    \ == 'o') {\n                sb2.append('q');\n            } else if (c == 'u')\
    \ {\n                sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueu4xfvi.java:50)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n\
    \            } else {\n                c = Character.toUpperCase(c);\n       \
    \     }\n            if (c == 'a') {\n                c = 'c';\n            }\
    \ else if (c == 'e') {\n                c = 'g';\n            } else if (c ==\
    \ 'i') {\n                c = 'k';\n            } else if (c == 'o') {\n     \
    \           c = 'q';\n            } else if (c == 'u') {\n                c =\
    \ 'y';\n            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fn2wopd.java:45)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String result = sb.toString();\n        String vowels = \"aeiou\";\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (char c : result.toCharArray())\
    \ {\n            if (vowels.indexOf(c) != -1) {\n                int index = vowels.indexOf(c);\n\
    \                index = (index + 2) % vowels.length();\n                sb2.append(vowels.charAt(index));\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl_mcdtz.java:45)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (char c : sb.toString().toCharArray())\
    \ {\n            if (c == 'a') {\n                sb2.append('c');\n         \
    \   } else if (c == 'e') {\n                sb2.append('g');\n            } else\
    \ if (c == 'i') {\n                sb2.append('k');\n            } else if (c\
    \ == 'o') {\n                sb2.append('q');\n            } else if (c == 'u')\
    \ {\n                sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueu4xfvi.java:50)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isLowerCase(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2jexvqdj.java:33)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String result = sb.toString();\n        String vowels = \"aeiou\";\n\
    \        String alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n        for (int i\
    \ = 0; i < result.length(); i++) {\n            char c = result.charAt(i);\n \
    \           if (vowels.indexOf(c) != -1) {\n                int index = alphabet.indexOf(c);\n\
    \                if (index + 2 < alphabet.length()) {\n                    result\
    \ = result.substring(0, i) + alphabet.charAt(index + 2) + result.substring(i +\
    \ 1);\n                } else {\n                    result = result.substring(0,\
    \ i) + alphabet.charAt(index + 2 - alphabet.length()) + result.substring(i + 1);\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1n1442_4.java:48)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        // TODO: Implement this function\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmp5ouhowf0.java:24)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String swappedCase = sb.toString();\n        StringBuilder sb2 = new\
    \ StringBuilder();\n        for (char c : swappedCase.toCharArray()) {\n     \
    \       if (c == 'a') {\n                sb2.append('c');\n            } else\
    \ if (c == 'e') {\n                sb2.append('g');\n            } else if (c\
    \ == 'i') {\n                sb2.append('k');\n            } else if (c == 'o')\
    \ {\n                sb2.append('q');\n            } else if (c == 'u') {\n  \
    \              sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzvar2pr.java:51)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (c >= 'a' && c <= 'z') {\n                sb.append((char)(c -\
    \ 'a' + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n             \
    \   sb.append((char)(c - 'A' + 'a'));\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        String s = sb.toString();\n        sb = new\
    \ StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n         \
    \   char c = s.charAt(i);\n            if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n                sb.append((char)(c + 2));\n       \
    \     } else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n\
    \                sb.append((char)(c + 2));\n            } else {\n           \
    \     sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        StringBuilder sb2 = new StringBuilder();\n        for\
    \ (int i = 0; i < sb.length(); i++) {\n            char c = sb.charAt(i);\n  \
    \          if (c == 'a') {\n                sb2.append('c');\n            } else\
    \ if (c == 'e') {\n                sb2.append('g');\n            } else if (c\
    \ == 'i') {\n                sb2.append('k');\n            } else if (c == 'o')\
    \ {\n                sb2.append('q');\n            } else if (c == 'u') {\n  \
    \              sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsceodohc.java:54)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (c >= 'a' && c\
    \ <= 'z') {\n                c = (char) ('A' + (c - 'a'));\n            } else\
    \ if (c >= 'A' && c <= 'Z') {\n                c = (char) ('a' + (c - 'A'));\n\
    \            } else if (c == 'a') {\n                c = 'c';\n            } else\
    \ if (c == 'e') {\n                c = 'g';\n            } else if (c == 'i')\
    \ {\n                c = 'k';\n            } else if (c == 'o') {\n          \
    \      c = 'q';\n            } else if (c == 'u') {\n                c = 'y';\n\
    \            } else if (c == 'A') {\n                c = 'C';\n            } else\
    \ if (c == 'E') {\n                c = 'G';\n            } else if (c == 'I')\
    \ {\n                c = 'K';\n            } else if (c == 'O') {\n          \
    \      c = 'Q';\n            } else if (c == 'U') {\n                c = 'Y';\n\
    \            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprozbr269.java:52)\n"
  stdout: ''
  timestamp: 1659793396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (char c : sb.toString().toCharArray())\
    \ {\n            if (c == 'a') {\n                sb2.append('c');\n         \
    \   } else if (c == 'e') {\n                sb2.append('g');\n            } else\
    \ if (c == 'i') {\n                sb2.append('k');\n            } else if (c\
    \ == 'o') {\n                sb2.append('q');\n            } else if (c == 'u')\
    \ {\n                sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueu4xfvi.java:50)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder result = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                result.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                result.append(Character.toUpperCase(c));\n\
    \            } else {\n                result.append(c);\n            }\n    \
    \    }\n        return result.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkvu65ahr.java:34)\n"
  stdout: ''
  timestamp: 1659793396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    c = Character.toLowerCase(c);\n                } else\
    \ {\n                    c = Character.toUpperCase(c);\n                }\n  \
    \              if (c == 'a') {\n                    c = 'c';\n               \
    \ } else if (c == 'e') {\n                    c = 'g';\n                } else\
    \ if (c == 'i') {\n                    c = 'k';\n                } else if (c\
    \ == 'o') {\n                    c = 'q';\n                } else if (c == 'u')\
    \ {\n                    c = 'y';\n                }\n            }\n        \
    \    sb.append(c);\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpml3w573r.java:47)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    c = Character.toLowerCase(c);\n                } else\
    \ {\n                    c = Character.toUpperCase(c);\n                }\n  \
    \              if (c == 'a') {\n                    c = 'c';\n               \
    \ } else if (c == 'e') {\n                    c = 'g';\n                } else\
    \ if (c == 'i') {\n                    c = 'k';\n                } else if (c\
    \ == 'o') {\n                    c = 'q';\n                } else if (c == 'u')\
    \ {\n                    c = 'y';\n                }\n            }\n        \
    \    sb.append(c);\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpml3w573r.java:47)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        StringBuilder sb2 = new StringBuilder();\n        for\
    \ (int i = 0; i < sb.length(); i++) {\n            char c = sb.charAt(i);\n  \
    \          if (c == 'a') {\n                sb2.append('c');\n            } else\
    \ if (c == 'e') {\n                sb2.append('g');\n            } else if (c\
    \ == 'i') {\n                sb2.append('k');\n            } else if (c == 'o')\
    \ {\n                sb2.append('q');\n            } else if (c == 'u') {\n  \
    \              sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsceodohc.java:54)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        StringBuilder sb2 = new StringBuilder();\n        for\
    \ (int i = 0; i < sb.length(); i++) {\n            char c = sb.charAt(i);\n  \
    \          if (c == 'a') {\n                sb2.append('c');\n            } else\
    \ if (c == 'e') {\n                sb2.append('g');\n            } else if (c\
    \ == 'i') {\n                sb2.append('k');\n            } else if (c == 'o')\
    \ {\n                sb2.append('q');\n            } else if (c == 'u') {\n  \
    \              sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsceodohc.java:54)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        String result = sb.toString();\n        for (int i = 0; i < result.length();\
    \ i++) {\n            char c = result.charAt(i);\n            if (c == 'a') {\n\
    \                result = result.substring(0, i) + 'c' + result.substring(i +\
    \ 1);\n            } else if (c == 'e') {\n                result = result.substring(0,\
    \ i) + 'g' + result.substring(i + 1);\n            } else if (c == 'i') {\n  \
    \              result = result.substring(0, i) + 'k' + result.substring(i + 1);\n\
    \            } else if (c == 'o') {\n                result = result.substring(0,\
    \ i) + 'q' + result.substring(i + 1);\n            } else if (c == 'u') {\n  \
    \              result = result.substring(0, i) + 's' + result.substring(i + 1);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpecd33yic.java:49)\n"
  stdout: ''
  timestamp: 1659793396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n\
    \            } else {\n                c = Character.toUpperCase(c);\n       \
    \     }\n            if (c == 'a') {\n                c = 'c';\n            }\
    \ else if (c == 'e') {\n                c = 'g';\n            } else if (c ==\
    \ 'i') {\n                c = 'k';\n            } else if (c == 'o') {\n     \
    \           c = 'q';\n            } else if (c == 'u') {\n                c =\
    \ 'y';\n            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fn2wopd.java:45)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        // TODO: Implement this function\n       \
    \ return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprfsh8z7t.java:24)\n"
  stdout: ''
  timestamp: 1659793395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphi780w9h.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (char c : sb.toString().toCharArray())\
    \ {\n            if (c == 'a') {\n                sb2.append('c');\n         \
    \   } else if (c == 'e') {\n                sb2.append('g');\n            } else\
    \ if (c == 'i') {\n                sb2.append('k');\n            } else if (c\
    \ == 'o') {\n                sb2.append('q');\n            } else if (c == 'u')\
    \ {\n                sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueu4xfvi.java:50)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.encode(String)\"\
    \ is null\n\tat Problem.main(tmpbiwd13wx.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        return \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphi780w9h.java:23)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypzsknqh.java:33)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjf5ewqj_.java:34)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (char c : sb.toString().toCharArray())\
    \ {\n            if (c == 'a') {\n                sb2.append('c');\n         \
    \   } else if (c == 'e') {\n                sb2.append('g');\n            } else\
    \ if (c == 'i') {\n                sb2.append('k');\n            } else if (c\
    \ == 'o') {\n                sb2.append('q');\n            } else if (c == 'u')\
    \ {\n                sb2.append('y');\n            } else {\n                sb2.append(c);\n\
    \            }\n        }\n        return sb2.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueu4xfvi.java:50)\n"
  stdout: ''
  timestamp: 1659793394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static String\
    \ encode(String message) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i <\
    \ sb.length(); i++) {\n            char c = sb.charAt(i);\n            if (c ==\
    \ 'a') {\n                sb2.append('c');\n            } else if (c == 'e') {\n\
    \                sb2.append('g');\n            } else if (c == 'i') {\n      \
    \          sb2.append('k');\n            } else if (c == 'o') {\n            \
    \    sb2.append('q');\n            } else if (c == 'u') {\n                sb2.append('y');\n\
    \            } else {\n                sb2.append(c);\n            }\n       \
    \ }\n        return sb2.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsrf0v1.java:52)\n"
  stdout: ''
  timestamp: 1659793394

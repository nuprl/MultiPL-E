language: java
name: HumanEval_79_decimal_to_binary
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = Long.toBinaryString(decimal);\n        return \"db\" + binary + \"db\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder(\"db\");\n        for (int i = 0; i < 64; i++) {\n  \
    \          sb.append(decimal % 2);\n            decimal /= 2;\n        }\n   \
    \     sb.append(\"db\");\n        return sb.reverse().toString();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnp7_9w1e.java:29)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = Long.toBinaryString(decimal);\n        return \"db\" + binary + \"db\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder(\"db\");\n        while (decimal > 0) {\n           \
    \ sb.append(decimal % 2);\n            decimal /= 2;\n        }\n        sb.append(\"\
    db\");\n        return sb.reverse().toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplpth84ay.java:29)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = Long.toBinaryString(decimal);\n        return \"db\" + binary + \"db\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ binary = new StringBuilder();\n        binary.append(\"db\");\n        while\
    \ (decimal > 0) {\n            binary.append(decimal % 2);\n            decimal\
    \ /= 2;\n        }\n        binary.append(\"db\");\n        return binary.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk0_qvevu.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += (decimal % 2);\n\
    \            decimal /= 2;\n        }\n        binary += \"db\";\n        return\
    \ new StringBuilder(binary).reverse().toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpow4skg2w.java:29)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = Long.toBinaryString(decimal);\n        return \"db\" + binary + \"db\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal != 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplyzpcwvg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ binary = new StringBuilder();\n        binary.append(\"db\");\n        while\
    \ (decimal > 0) {\n            binary.append(decimal % 2);\n            decimal\
    \ /= 2;\n        }\n        binary.append(\"db\");\n        return binary.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk0_qvevu.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = Long.toBinaryString(decimal);\n        return \"db\" + binary + \"db\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += (decimal % 2);\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwd_1bxdo.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += (decimal % 2);\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwd_1bxdo.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += (decimal % 2);\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwd_1bxdo.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        binary += \"db\";\n        return\
    \ binary;\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprsjon4v5.java:29)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder(\"db\");\n        while (decimal > 0) {\n           \
    \ sb.append(decimal % 2);\n            decimal /= 2;\n        }\n        sb.append(\"\
    db\");\n        return sb.reverse().toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplpth84ay.java:29)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwmwxxyuy.java:24)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder(\"db\");\n        while (decimal > 0) {\n           \
    \ sb.append(decimal % 2);\n            decimal /= 2;\n        }\n        sb.append(\"\
    db\");\n        return sb.reverse().toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplpth84ay.java:29)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += (decimal % 2);\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwd_1bxdo.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        binary += \"db\";\n        return\
    \ binary;\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprsjon4v5.java:29)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        binary += \"db\";\n        return\
    \ binary;\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprsjon4v5.java:29)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = Long.toBinaryString(decimal);\n        return \"db\" + binary + \"db\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String result\
    \ = \"db\";\n        while (decimal > 0) {\n            result = (decimal % 2)\
    \ + result;\n            decimal /= 2;\n        }\n        return result + \"\
    db\";\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6i1kjkbs.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimywy3wg.java:28)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dw1kmv9.java:30)\n"
  stdout: ''
  timestamp: 1659798142
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798142

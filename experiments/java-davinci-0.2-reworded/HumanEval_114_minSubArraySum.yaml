name: HumanEval_114_minSubArraySum
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given an array array list of integers nums, find the minimum\
  \ sum of any non-empty sub-array array list\n    // of nums.\n    // Example\n \
  \   // >>> minSubArraySum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
  \ (long)4l, (long)1l, (long)2l, (long)4l))))\n    // (1l)\n    // >>> minSubArraySum((new\
  \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)-3l))))\n    // (-6l)\n\
  \    public static long minSubArraySum(ArrayList<Long> nums) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(minSubArraySum((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l,\
  \ (long)4l)))) == (1l));\n    assert(minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l,\
  \ (long)-2l, (long)-3l)))) == (-6l));\n    assert(minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l,\
  \ (long)-2l, (long)-3l, (long)2l, (long)-10l)))) == (-14l));\n    assert(minSubArraySum((new\
  \ ArrayList<Long>(Arrays.asList((long)-9999999999999999l)))) == (-9999999999999999l));\n\
  \    assert(minSubArraySum((new ArrayList<Long>(Arrays.asList((long)0l, (long)10l,\
  \ (long)20l, (long)1000000l)))) == (0l));\n    assert(minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-1l,\
  \ (long)-2l, (long)-3l, (long)10l, (long)-5l)))) == (-6l));\n    assert(minSubArraySum((new\
  \ ArrayList<Long>(Arrays.asList((long)100l, (long)-1l, (long)-2l, (long)-3l, (long)10l,\
  \ (long)-5l)))) == (-6l));\n    assert(minSubArraySum((new ArrayList<Long>(Arrays.asList((long)10l,\
  \ (long)11l, (long)13l, (long)8l, (long)3l, (long)4l)))) == (3l));\n    assert(minSubArraySum((new\
  \ ArrayList<Long>(Arrays.asList((long)100l, (long)-33l, (long)32l, (long)-1l, (long)0l,\
  \ (long)-2l)))) == (-33l));\n    assert(minSubArraySum((new ArrayList<Long>(Arrays.asList((long)-10l))))\
  \ == (-10l));\n    assert(minSubArraySum((new ArrayList<Long>(Arrays.asList((long)7l))))\
  \ == (7l));\n    assert(minSubArraySum((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)-1l)))) == (-1l));\n    }\n\n}\n"
completions: ["        long minSum = Long.MAX_VALUE;\n        long sum = 0;\n    \
    \    for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n   \
    \             sum = 0;\n            }\n        }\n        return minSum;", " \
    \       long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i\
    \ = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long min = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            min = Math.min(min, sum);\n        \
    \    if (sum > 0) {\n                sum = 0;\n            }\n        }\n    \
    \    return min;", "        long min = Long.MAX_VALUE;\n        long sum = 0;\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            sum += nums.get(i);\n            min = Math.min(min, sum);\n\
    \            if (sum > 0) {\n                sum = 0;\n            }\n       \
    \ }\n        return min;", "        long min = Long.MAX_VALUE;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long min = Long.MAX_VALUE;\n   \
    \     long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     sum += nums.get(i);\n            min = Math.min(min, sum);\n           \
    \ if (sum > 0) {\n                sum = 0;\n            }\n        }\n       \
    \ return min;", "        long min = Long.MAX_VALUE;\n        long sum = 0;\n \
    \       for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long min = Long.MAX_VALUE;\n   \
    \     long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     sum += nums.get(i);\n            min = Math.min(min, sum);\n           \
    \ if (sum > 0) {\n                sum = 0;\n            }\n        }\n       \
    \ return min;", "        long min = Long.MAX_VALUE;\n        long sum = 0;\n \
    \       for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n          \
    \  minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n             \
    \   sum = 0;\n            }\n        }\n        return minSum;", "        long\
    \ min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            sum += nums.get(i);\n            min = Math.min(min, sum);\n\
    \            if (sum > 0) {\n                sum = 0;\n            }\n       \
    \ }\n        return min;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n          \
    \  minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n             \
    \   sum = 0;\n            }\n        }\n        return minSum;", "        long\
    \ min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            sum += nums.get(i);\n            min = Math.min(min, sum);\n\
    \            if (sum > 0) {\n                sum = 0;\n            }\n       \
    \ }\n        return min;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long minSum = Long.MAX_VALUE;\n        long currSum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            currSum += nums.get(i);\n      \
    \      minSum = Math.min(minSum, currSum);\n            if (currSum > 0) {\n \
    \               currSum = 0;\n            }\n        }\n        return minSum;",
  "        long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long min = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            min = Math.min(min, sum);\n        \
    \    if (sum > 0) {\n                sum = 0;\n            }\n        }\n    \
    \    return min;", "        long minSum = Long.MAX_VALUE;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n   \
    \             sum = 0;\n            }\n        }\n        return minSum;", " \
    \       long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i\
    \ = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long minSum = 0;\n \
    \       long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n     \
    \       sum += nums.get(i);\n            if (sum < minSum) {\n               \
    \ minSum = sum;\n            }\n            if (sum > 0) {\n                sum\
    \ = 0;\n            }\n        }\n        return minSum;", "        long minSum\
    \ = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long min = Long.MAX_VALUE;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long min = Long.MAX_VALUE;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long currSum = 0;\n        for (int i = 0;\
    \ i < nums.size(); i++) {\n            currSum += nums.get(i);\n            minSum\
    \ = Math.min(minSum, currSum);\n            if (currSum > 0) {\n             \
    \   currSum = 0;\n            }\n        }\n        return minSum;", "       \
    \ long minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0;\
    \ i < nums.size(); i++) {\n            sum += nums.get(i);\n            minSum\
    \ = Math.min(minSum, sum);\n            if (sum > 0) {\n                sum =\
    \ 0;\n            }\n        }\n        return minSum;", "        long minSum\
    \ = Long.MAX_VALUE;\n        long currSum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            currSum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ currSum);\n            if (currSum > 0) {\n                currSum = 0;\n  \
    \          }\n        }\n        return minSum;", "        long min = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            min = Math.min(min, sum);\n        \
    \    if (sum > 0) {\n                sum = 0;\n            }\n        }\n    \
    \    return min;", "        long minSum = Long.MAX_VALUE;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n   \
    \             sum = 0;\n            }\n        }\n        return minSum;", " \
    \       long minSum = Long.MAX_VALUE;\n        long currSum = 0;\n        for\
    \ (int i = 0; i < nums.size(); i++) {\n            currSum += nums.get(i);\n \
    \           minSum = Math.min(minSum, currSum);\n            if (currSum > 0)\
    \ {\n                currSum = 0;\n            }\n        }\n        return minSum;",
  "        long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n          \
    \  minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n             \
    \   sum = 0;\n            }\n        }\n        return minSum;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ currSum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            currSum\
    \ += nums.get(i);\n            minSum = Math.min(minSum, currSum);\n         \
    \   if (currSum > 0) {\n                currSum = 0;\n            }\n        }\n\
    \        return minSum;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long minSum = Long.MAX_VALUE;\n\
    \        long currSum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            currSum += nums.get(i);\n            minSum = Math.min(minSum, currSum);\n\
    \            if (currSum > 0) {\n                currSum = 0;\n            }\n\
    \        }\n        return minSum;", "        long min = Long.MAX_VALUE;\n   \
    \     long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     sum += nums.get(i);\n            min = Math.min(min, sum);\n           \
    \ if (sum > 0) {\n                sum = 0;\n            }\n        }\n       \
    \ return min;", "        long min = Long.MAX_VALUE;\n        long sum = 0;\n \
    \       for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long min = Long.MAX_VALUE;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long min = Long.MAX_VALUE;\n   \
    \     long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     sum += nums.get(i);\n            min = Math.min(min, sum);\n           \
    \ if (sum > 0) {\n                sum = 0;\n            }\n        }\n       \
    \ return min;", "        long min = Long.MAX_VALUE;\n        long sum = 0;\n \
    \       for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            sum += nums.get(i);\n            min = Math.min(min, sum);\n\
    \            if (sum > 0) {\n                sum = 0;\n            }\n       \
    \ }\n        return min;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long minSum = Long.MAX_VALUE;\n        long currSum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            currSum += nums.get(i);\n      \
    \      minSum = Math.min(minSum, currSum);\n            if (currSum > 0) {\n \
    \               currSum = 0;\n            }\n        }\n        return minSum;",
  "        long minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n          \
    \  minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n             \
    \   sum = 0;\n            }\n        }\n        return minSum;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long min = Long.MAX_VALUE;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long min = Long.MAX_VALUE;\n   \
    \     long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     sum += nums.get(i);\n            min = Math.min(min, sum);\n           \
    \ if (sum > 0) {\n                sum = 0;\n            }\n        }\n       \
    \ return min;", "        long minSum = Long.MAX_VALUE;\n        long sum = 0;\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n   \
    \             sum = 0;\n            }\n        }\n        return minSum;", " \
    \       long minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n          \
    \  minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n             \
    \   sum = 0;\n            }\n        }\n        return minSum;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long min = Long.MAX_VALUE;\n   \
    \     long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     sum += nums.get(i);\n            min = Math.min(min, sum);\n           \
    \ if (sum > 0) {\n                sum = 0;\n            }\n        }\n       \
    \ return min;", "        long minSum = Long.MAX_VALUE;\n        long sum = 0;\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n   \
    \             sum = 0;\n            }\n        }\n        return minSum;", " \
    \       long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i\
    \ = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long minSum = 0;\n        long sum = 0;\n \
    \       for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \            if (sum > 0) {\n                sum = 0;\n            }\n       \
    \ }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n       \
    \ long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n           \
    \ sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n         \
    \   if (sum > 0) {\n                sum = 0;\n            }\n        }\n     \
    \   return minSum;", "        long minSum = Long.MAX_VALUE;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n   \
    \             sum = 0;\n            }\n        }\n        return minSum;", " \
    \       long min_sum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n          \
    \  if (sum < min_sum) {\n                min_sum = sum;\n            }\n     \
    \       if (sum > 0) {\n                sum = 0;\n            }\n        }\n \
    \       return min_sum;", "        // Write your code here\n        // To print\
    \ results to the standard output you can use System.out.println()\n        //\
    \ Example: System.out.println(\"Hello world!\");\n        long min = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            min = Math.min(min, sum);\n        \
    \    if (sum > 0) {\n                sum = 0;\n            }\n        }\n    \
    \    return min;", "        long min = Long.MAX_VALUE;\n        long sum = 0;\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            sum += nums.get(i);\n            min = Math.min(min, sum);\n\
    \            if (sum > 0) {\n                sum = 0;\n            }\n       \
    \ }\n        return min;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n          \
    \  minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n             \
    \   sum = 0;\n            }\n        }\n        return minSum;", "        long\
    \ min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            sum += nums.get(i);\n            min = Math.min(min, sum);\n\
    \            if (sum > 0) {\n                sum = 0;\n            }\n       \
    \ }\n        return min;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n          \
    \  minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n             \
    \   sum = 0;\n            }\n        }\n        return minSum;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long min = Long.MAX_VALUE;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (long i = 0; i < nums.size(); i++) {\n   \
    \         sum += nums.get((int)i);\n            minSum = Math.min(minSum, sum);\n\
    \            if (sum > 0) {\n                sum = 0;\n            }\n       \
    \ }\n        return minSum;", "        long min = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            min = Math.min(min, sum);\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n          \
    \  minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n             \
    \   sum = 0;\n            }\n        }\n        return minSum;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long currSum = 0;\n        for (long num :\
    \ nums) {\n            currSum += num;\n            minSum = Math.min(minSum,\
    \ currSum);\n            currSum = Math.max(currSum, 0);\n        }\n        return\
    \ minSum;", "        long min = Long.MAX_VALUE;\n        long sum = 0;\n     \
    \   for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum < 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long min = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            min = Math.min(min, sum);\n        \
    \    if (sum > 0) {\n                sum = 0;\n            }\n        }\n    \
    \    return min;", "        long min = Long.MAX_VALUE;\n        long sum = 0;\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum < 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long min = nums.get(0);\n        long sum = 0;\n        for (int i = 0;\
    \ i < nums.size(); i++) {\n            sum += nums.get(i);\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long min = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            min = Math.min(min, sum);\n        \
    \    if (sum > 0) {\n                sum = 0;\n            }\n        }\n    \
    \    return min;", "        long min = Long.MAX_VALUE;\n        long sum = 0;\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            sum += nums.get(i);\n            min = Math.min(min, sum);\n\
    \            if (sum > 0) {\n                sum = 0;\n            }\n       \
    \ }\n        return min;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ currSum = 0;\n        for (long num : nums) {\n            currSum += num;\n\
    \            minSum = Math.min(minSum, currSum);\n            currSum = Math.max(currSum,\
    \ 0);\n        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long min = Long.MAX_VALUE;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ min = Long.MAX_VALUE;\n        long sum = 0;\n        for (long num : nums)\
    \ {\n            sum += num;\n            min = Math.min(min, sum);\n        \
    \    sum = Math.max(sum, 0);\n        }\n        return min;", "        long min\
    \ = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            sum += nums.get(i);\n            min = Math.min(min, sum);\n\
    \            if (sum > 0) {\n                sum = 0;\n            }\n       \
    \ }\n        return min;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long minSum = nums.get(0);\n        long sum\
    \ = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n          \
    \  sum = Math.min(nums.get(i), sum + nums.get(i));\n            minSum = Math.min(minSum,\
    \ sum);\n        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long min = Long.MAX_VALUE;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long min = Long.MAX_VALUE;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long currSum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            currSum += nums.get(i);\n            minSum = Math.min(minSum, currSum);\n\
    \            if (currSum > 0) {\n                currSum = 0;\n            }\n\
    \        }\n        return minSum;", "        long min = Long.MAX_VALUE;\n   \
    \     long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     sum += nums.get(i);\n            min = Math.min(min, sum);\n           \
    \ if (sum > 0) {\n                sum = 0;\n            }\n        }\n       \
    \ return min;", "        long min = Long.MAX_VALUE;\n        long sum = 0;\n \
    \       for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long min = Long.MAX_VALUE;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long currSum = 0;\n        for (int i = 0;\
    \ i < nums.size(); i++) {\n            currSum += nums.get(i);\n            minSum\
    \ = Math.min(minSum, currSum);\n            if (currSum > 0) {\n             \
    \   currSum = 0;\n            }\n        }\n        return minSum;", "       \
    \ long min = nums.get(0);\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            if (sum <\
    \ min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n          \
    \  minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n             \
    \   sum = 0;\n            }\n        }\n        return minSum;", "        long\
    \ min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            sum += nums.get(i);\n            min = Math.min(min, sum);\n\
    \            if (sum > 0) {\n                sum = 0;\n            }\n       \
    \ }\n        return min;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long min = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            min = Math.min(min, sum);\n        \
    \    if (sum > 0) {\n                sum = 0;\n            }\n        }\n    \
    \    return min;", "        long min = Long.MAX_VALUE;\n        long sum = 0;\n\
    \        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long min = nums.get(0);\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = Long.MAX_VALUE;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            sum += nums.get(i);\n            min = Math.min(min, sum);\n\
    \            if (sum > 0) {\n                sum = 0;\n            }\n       \
    \ }\n        return min;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long minSum = Long.MAX_VALUE;\n        long currSum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            currSum += nums.get(i);\n      \
    \      minSum = Math.min(minSum, currSum);\n            if (currSum > 0) {\n \
    \               currSum = 0;\n            }\n        }\n        return minSum;",
  "        long minSum = 0;\n        long sum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            sum += nums.get(i);\n            if (i == 0 || sum < minSum)\
    \ {\n                minSum = sum;\n            }\n            if (sum > 0) {\n\
    \                sum = 0;\n            }\n        }\n        return minSum;",
  "        long minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n          \
    \  minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n             \
    \   sum = 0;\n            }\n        }\n        return minSum;", "        long\
    \ min = Long.MAX_VALUE;\n        long sum = 0;\n        for (long num : nums)\
    \ {\n            sum += num;\n            min = Math.min(min, sum);\n        \
    \    sum = Math.max(sum, 0);\n        }\n        return min;", "        long min\
    \ = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            sum += nums.get(i);\n            min = Math.min(min, sum);\n\
    \            if (sum > 0) {\n                sum = 0;\n            }\n       \
    \ }\n        return min;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n          \
    \  minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n             \
    \   sum = 0;\n            }\n        }\n        return minSum;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long currSum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n\
    \            currSum += nums.get(i);\n            minSum = Math.min(minSum, currSum);\n\
    \            if (currSum > 0) {\n                currSum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long minSum = Long.MAX_VALUE;\n        for\
    \ (int i = 0; i < nums.size(); i++) {\n            long sum = 0;\n           \
    \ for (int j = i; j < nums.size(); j++) {\n                sum += nums.get(j);\n\
    \                minSum = Math.min(minSum, sum);\n            }\n        }\n \
    \       return minSum;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long minSum = Long.MAX_VALUE;\n        long currSum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            currSum += nums.get(i);\n      \
    \      minSum = Math.min(minSum, currSum);\n            if (currSum > 0) {\n \
    \               currSum = 0;\n            }\n        }\n        return minSum;",
  "        long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long min = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            min = Math.min(min, sum);\n        \
    \    if (sum > 0) {\n                sum = 0;\n            }\n        }\n    \
    \    return min;", "        long minSum = Long.MAX_VALUE;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n   \
    \             sum = 0;\n            }\n        }\n        return minSum;", " \
    \       long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i\
    \ = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long min = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            min = Math.min(min, sum);\n        \
    \    if (sum > 0) {\n                sum = 0;\n            }\n        }\n    \
    \    return min;", "        long minSum = Long.MAX_VALUE;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n   \
    \             sum = 0;\n            }\n        }\n        return minSum;", " \
    \       long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i\
    \ = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long min_sum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            if (sum < min_sum) {\n             \
    \   min_sum = sum;\n            }\n            if (sum > 0) {\n              \
    \  sum = 0;\n            }\n        }\n        return min_sum;", "        long\
    \ min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            sum += nums.get(i);\n            min = Math.min(min, sum);\n\
    \            if (sum > 0) {\n                sum = 0;\n            }\n       \
    \ }\n        return min;", "        long min = Long.MAX_VALUE;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long currSum = 0;\n        for (int i = 0;\
    \ i < nums.size(); i++) {\n            currSum += nums.get(i);\n            minSum\
    \ = Math.min(minSum, currSum);\n            if (currSum > 0) {\n             \
    \   currSum = 0;\n            }\n        }\n        return minSum;", "       \
    \ long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            sum += nums.get(i);\n            min = Math.min(min,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return min;", "        // Your code here\n        return 0l;",
  "        long minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n          \
    \  minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n             \
    \   sum = 0;\n            }\n        }\n        return minSum;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long min = Long.MAX_VALUE;\n   \
    \     long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     sum += nums.get(i);\n            min = Math.min(min, sum);\n           \
    \ if (sum > 0) {\n                sum = 0;\n            }\n        }\n       \
    \ return min;", "        long minSum = Long.MAX_VALUE;\n        long currentSum\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            currentSum\
    \ += nums.get(i);\n            minSum = Math.min(minSum, currentSum);\n      \
    \      if (currentSum > 0) {\n                currentSum = 0;\n            }\n\
    \        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long minSum = Long.MAX_VALUE;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum +=\
    \ nums.get(i);\n            minSum = Math.min(minSum, sum);\n            if (sum\
    \ > 0) {\n                sum = 0;\n            }\n        }\n        return minSum;",
  "        long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long minSum = 0;\n \
    \       long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n     \
    \       sum += nums.get(i);\n            if (sum < minSum) {\n               \
    \ minSum = sum;\n            }\n            if (sum > 0) {\n                sum\
    \ = 0;\n            }\n        }\n        return minSum;", "        long minSum\
    \ = Long.MAX_VALUE;\n        long currSum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            currSum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ currSum);\n            if (currSum > 0) {\n                currSum = 0;\n  \
    \          }\n        }\n        return minSum;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long min = Long.MAX_VALUE;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;", "        long min = Long.MAX_VALUE;\n   \
    \     long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n       \
    \     sum += nums.get(i);\n            min = Math.min(min, sum);\n           \
    \ if (sum > 0) {\n                sum = 0;\n            }\n        }\n       \
    \ return min;", "        long min = Long.MAX_VALUE;\n        long sum = 0;\n \
    \       for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ min_sum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            sum += nums.get(i);\n            if (sum\
    \ < min_sum) {\n                min_sum = sum;\n            }\n            if\
    \ (sum > 0) {\n                sum = 0;\n            }\n        }\n        return\
    \ min_sum;", "        long minSum = Long.MAX_VALUE;\n        long sum = 0;\n \
    \       for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            minSum = Math.min(minSum, sum);\n            if (sum > 0) {\n   \
    \             sum = 0;\n            }\n        }\n        return minSum;", " \
    \       long min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i\
    \ = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n            min\
    \ = Math.min(min, sum);\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long minSum = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            minSum = Math.min(minSum, sum);\n  \
    \          if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return minSum;", "        long min = Long.MAX_VALUE;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ min = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            sum += nums.get(i);\n            min = Math.min(min, sum);\n\
    \            if (sum > 0) {\n                sum = 0;\n            }\n       \
    \ }\n        return min;", "        long min = Long.MAX_VALUE;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            min = Math.min(min, sum);\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = Long.MAX_VALUE;\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.size(); i++) {\n            sum += nums.get(i);\n            minSum = Math.min(minSum,\
    \ sum);\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return minSum;"]
stop_tokens:
- "\n    }\n"

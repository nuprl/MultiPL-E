name: HumanEval_24_largest_divisor
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // For a given number n, find the largest number that divides\
  \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    public\
  \ static long largestDivisor(long n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
  \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
  \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
  \ == (7l));\n    }\n\n}\n"
completions: ["        long largest = 0;\n        for (long i = 1; i < n; i++) {\n\
    \            if (n % i == 0) {\n                largest = i;\n            }\n\
    \        }\n        return largest;", "        long largest = 0;\n        for\
    \ (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n                largest\
    \ = i;\n            }\n        }\n        return largest;", "        for (long\
    \ i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n                return\
    \ i;\n            }\n        }\n        return 1;", "        long largestDivisor\
    \ = 1;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;", "        long largestDivisor = 1;\n        for (long i = 2;\
    \ i < n; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        for\
    \ (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n            \
    \    return i;\n            }\n        }\n        return 1;", "        long largestDivisor\
    \ = 1;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;", "        for (long i = n - 1; i > 0; i--) {\n            if\
    \ (n % i == 0) {\n                return i;\n            }\n        }\n      \
    \  return 0;", "        long largestDivisor = 1;\n        for (long i = 2; i <\
    \ n; i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;", "        long largestDivisor\
    \ = 1;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;", "        for (long i = n - 1; i > 0; i--) {\n            if\
    \ (n % i == 0) {\n                return i;\n            }\n        }\n      \
    \  return -1;", "        for (long i = n - 1; i > 0; i--) {\n            if (n\
    \ % i == 0) {\n                return i;\n            }\n        }\n        return\
    \ 1;", "        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0)\
    \ {\n                return i;\n            }\n        }\n        return 1;",
  "        for (long i = n - 1; i > 0; i--) {\n            if (n % i == 0) {\n   \
    \             return i;\n            }\n        }\n        return 1;", "     \
    \   long largestDivisor = 1;\n        for (long i = 2; i <= n; i++) {\n      \
    \      if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;", "        for (long i = n - 1; i >\
    \ 0; i--) {\n            if (n % i == 0) {\n                return i;\n      \
    \      }\n        }\n        return 1;", "        long largestDivisor = 1;\n \
    \       for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n      \
    \          largestDivisor = i;\n            }\n        }\n        return largestDivisor;",
  "        long largestDivisor = 1;\n        for (long i = 2; i < n; i++) {\n    \
    \        if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;", "        for (long i = n - 1; i >\
    \ 0; i--) {\n            if (n % i == 0) {\n                return i;\n      \
    \      }\n        }\n        return 0;", "        for (long i = n - 1; i > 0;\
    \ i--) {\n            if (n % i == 0) {\n                return i;\n         \
    \   }\n        }\n        return 1;"]
stop_tokens:
- "\n    }\n"

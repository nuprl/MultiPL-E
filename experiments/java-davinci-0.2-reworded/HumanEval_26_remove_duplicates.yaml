name: HumanEval_26_remove_duplicates
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // From an array array list of integers, remove all elements\
  \ that occur more than once.\n    // Keep order of elements left the same as in\
  \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
  \ numbers) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
  \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
  \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
  \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
  \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)4l, (long)5l)))));\n    }\n\n}\n"
completions: ["        // Your code here.\n        return null;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (Long number : numbers) {\n   \
    \         if (!result.contains(number)) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (map.get(number) == 1) {\n                result.add(number);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> counts = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (counts.containsKey(number))\
    \ {\n                counts.put(number, counts.get(number) + 1);\n           \
    \ } else {\n                counts.put(number, 1);\n            }\n        }\n\
    \        for (Long number : numbers) {\n            if (counts.get(number) ==\
    \ 1) {\n                result.add(number);\n            }\n        }\n      \
    \  return result;", '        return new ArrayList<Long>(new HashSet<Long>(numbers));',
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> counts = new HashMap<Long, Integer>();\n        for (Long number :\
    \ numbers) {\n            if (counts.containsKey(number)) {\n                counts.put(number,\
    \ counts.get(number) + 1);\n            } else {\n                counts.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (counts.get(number) == 1) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> counts = new HashMap<Long, Integer>();\n        for (Long number :\
    \ numbers) {\n            if (counts.containsKey(number)) {\n                counts.put(number,\
    \ counts.get(number) + 1);\n            } else {\n                counts.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (counts.get(number) == 1) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Long number : numbers) {\n          \
    \  if (!result.contains(number)) {\n                result.add(number);\n    \
    \        }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (map.get(number) == 1) {\n                result.add(number);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Long> map = new HashMap<Long,\
    \ Long>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1l);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (map.get(number) == 1) {\n                result.add(number);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Long> map = new HashMap<Long,\
    \ Long>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1l);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (!result.contains(number)) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Long number : numbers) {\n          \
    \  if (!result.contains(number)) {\n                result.add(number);\n    \
    \        }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Long> map = new HashMap<Long,\
    \ Long>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1l);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (int i = 0; i < numbers.size(); i++) {\n          \
    \  Long number = numbers.get(i);\n            if (map.containsKey(number)) {\n\
    \                map.put(number, map.get(number) + 1);\n            } else {\n\
    \                map.put(number, 1);\n            }\n        }\n        for (int\
    \ i = 0; i < numbers.size(); i++) {\n            Long number = numbers.get(i);\n\
    \            if (map.get(number) == 1) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", '        return new ArrayList<Long>(new
    HashSet<Long>(numbers));', "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        HashMap<Long, Long> map = new HashMap<Long, Long>();\n        for (Long\
    \ number : numbers) {\n            if (map.containsKey(number)) {\n          \
    \      map.put(number, map.get(number) + 1);\n            } else {\n         \
    \       map.put(number, 1l);\n            }\n        }\n        for (Long number\
    \ : numbers) {\n            if (map.get(number) == 1) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Long> map = new HashMap<Long,\
    \ Long>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1l);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            Long number = numbers.get(i);\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (int i = 0; i < numbers.size(); i++) {\n            Long number = numbers.get(i);\n\
    \            if (map.get(number) == 1) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Long> map = new HashMap<Long,\
    \ Long>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1l);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        for\
    \ (Long number : numbers) {\n            if (map.containsKey(number)) {\n    \
    \            map.put(number, map.get(number) + 1);\n            } else {\n   \
    \             map.put(number, 1);\n            }\n        }\n        for (Long\
    \ number : numbers) {\n            if (map.get(number) == 1) {\n             \
    \   result.add(number);\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long n : numbers) {\n \
    \           if (map.containsKey(n)) {\n                map.put(n, map.get(n) +\
    \ 1);\n            } else {\n                map.put(n, 1l);\n            }\n\
    \        }\n        for (Long n : numbers) {\n            if (map.get(n) == 1)\
    \ {\n                result.add(n);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ for (Long number : numbers) {\n            if (!result.contains(number)) {\n\
    \                result.add(number);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ for (Long number : numbers) {\n            if (!result.contains(number)) {\n\
    \                result.add(number);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        for (Long\
    \ number : numbers) {\n            if (map.containsKey(number)) {\n          \
    \      map.put(number, map.get(number) + 1);\n            } else {\n         \
    \       map.put(number, 1);\n            }\n        }\n        for (Long number\
    \ : numbers) {\n            if (map.get(number) == 1) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Long number : numbers) {\n          \
    \  if (!result.contains(number)) {\n                result.add(number);\n    \
    \        }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (!result.contains(number)) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Long number : numbers) {\n          \
    \  if (!result.contains(number)) {\n                result.add(number);\n    \
    \        }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (map.get(number) == 1) {\n                result.add(number);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Long number : numbers) {\n          \
    \  if (!result.contains(number)) {\n                result.add(number);\n    \
    \        }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Long number : numbers) {\n          \
    \  if (!result.contains(number)) {\n                result.add(number);\n    \
    \        }\n        }\n        return result;", '        return new ArrayList<Long>(new
    HashSet<Long>(numbers));', "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        for\
    \ (Long number : numbers) {\n            if (map.containsKey(number)) {\n    \
    \            map.put(number, map.get(number) + 1);\n            } else {\n   \
    \             map.put(number, 1);\n            }\n        }\n        for (Long\
    \ number : numbers) {\n            if (map.get(number) == 1) {\n             \
    \   result.add(number);\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (!result.contains(number)) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Long> map = new HashMap<Long,\
    \ Long>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1l);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (!result.contains(number)) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> counts = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (counts.containsKey(number)) {\n                counts.put(number,\
    \ counts.get(number) + 1l);\n            } else {\n                counts.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (counts.get(number) == 1l) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (map.get(number) == 1) {\n                result.add(number);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Long> map = new HashMap<Long,\
    \ Long>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1l);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", '        return new ArrayList<Long>(new
    HashSet<Long>(numbers));', "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        for\
    \ (Long number : numbers) {\n            if (map.containsKey(number)) {\n    \
    \            map.put(number, map.get(number) + 1);\n            } else {\n   \
    \             map.put(number, 1);\n            }\n        }\n        for (Long\
    \ number : numbers) {\n            if (map.get(number) == 1) {\n             \
    \   result.add(number);\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Long number : numbers) {\n          \
    \  if (!result.contains(number)) {\n                result.add(number);\n    \
    \        }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  '        return numbers.stream().distinct().collect(Collectors.toCollection(ArrayList::new));',
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (map.get(number) == 1) {\n                result.add(number);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        // Your code here\n\
    \        return null;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        HashMap<Long, Integer> counts = new HashMap<Long, Integer>();\n     \
    \   for (Long number : numbers) {\n            if (counts.containsKey(number))\
    \ {\n                counts.put(number, counts.get(number) + 1);\n           \
    \ } else {\n                counts.put(number, 1);\n            }\n        }\n\
    \        for (Long number : numbers) {\n            if (counts.get(number) ==\
    \ 1) {\n                result.add(number);\n            }\n        }\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Set<Long> set = new HashSet<Long>();\n        for (Long number : numbers)\
    \ {\n            if (!set.contains(number)) {\n                set.add(number);\n\
    \                result.add(number);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        for (Long\
    \ number : numbers) {\n            if (map.containsKey(number)) {\n          \
    \      map.put(number, map.get(number) + 1);\n            } else {\n         \
    \       map.put(number, 1);\n            }\n        }\n        for (Long number\
    \ : numbers) {\n            if (map.get(number) == 1) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Boolean> seen = new HashMap<Long,\
    \ Boolean>();\n        for (Long number : numbers) {\n            if (!seen.containsKey(number))\
    \ {\n                seen.put(number, true);\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", '        return new ArrayList<Long>(new
    HashSet<Long>(numbers));', "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        for\
    \ (Long number : numbers) {\n            if (map.containsKey(number)) {\n    \
    \            map.put(number, map.get(number) + 1);\n            } else {\n   \
    \             map.put(number, 1);\n            }\n        }\n        for (Long\
    \ number : numbers) {\n            if (map.get(number) == 1) {\n             \
    \   result.add(number);\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", '        return numbers.stream().distinct().collect(Collectors.toCollection(ArrayList::new));',
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (map.get(number) == 1) {\n                result.add(number);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> counts = new HashMap<Long, Integer>();\n        for (Long number :\
    \ numbers) {\n            if (counts.containsKey(number)) {\n                counts.put(number,\
    \ counts.get(number) + 1);\n            } else {\n                counts.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (counts.get(number) == 1) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (map.get(number) == 1) {\n                result.add(number);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long l : numbers) {\n            if (map.containsKey(l))\
    \ {\n                map.put(l, map.get(l) + 1);\n            } else {\n     \
    \           map.put(l, 1);\n            }\n        }\n        for (Long l : numbers)\
    \ {\n            if (map.get(l) == 1) {\n                result.add(l);\n    \
    \        }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Long number : numbers) {\n          \
    \  if (!result.contains(number)) {\n                result.add(number);\n    \
    \        }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Long> map = new HashMap<Long,\
    \ Long>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1l);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> counts = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (counts.containsKey(number)) {\n                counts.put(number,\
    \ counts.get(number) + 1);\n            } else {\n                counts.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (counts.get(number) == 1) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            Long number = numbers.get(i);\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (int i = 0; i < numbers.size(); i++) {\n            Long number = numbers.get(i);\n\
    \            if (map.get(number) == 1) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Long number : numbers) {\n          \
    \  if (!result.contains(number)) {\n                result.add(number);\n    \
    \        }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> count = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (count.containsKey(number))\
    \ {\n                count.put(number, count.get(number) + 1);\n            }\
    \ else {\n                count.put(number, 1);\n            }\n        }\n  \
    \      for (Long number : numbers) {\n            if (count.get(number) == 1)\
    \ {\n                result.add(number);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        for (Long\
    \ number : numbers) {\n            if (map.containsKey(number)) {\n          \
    \      map.put(number, map.get(number) + 1);\n            } else {\n         \
    \       map.put(number, 1);\n            }\n        }\n        for (Long number\
    \ : numbers) {\n            if (map.get(number) == 1) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", '        return new ArrayList<Long>(new
    HashSet<Long>(numbers));', "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        HashMap<Long, Long> map = new HashMap<Long, Long>();\n        for (Long\
    \ number : numbers) {\n            if (map.containsKey(number)) {\n          \
    \      map.put(number, map.get(number) + 1);\n            } else {\n         \
    \       map.put(number, 1l);\n            }\n        }\n        for (Long number\
    \ : numbers) {\n            if (map.get(number) == 1) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Boolean> map = new HashMap<Long,\
    \ Boolean>();\n        for (Long number : numbers) {\n            if (!map.containsKey(number))\
    \ {\n                map.put(number, true);\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Long number : numbers) {\n          \
    \  if (!result.contains(number)) {\n                result.add(number);\n    \
    \        }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        // Write your code here.\n        return null;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Long number : numbers) {\n          \
    \  if (!result.contains(number)) {\n                result.add(number);\n    \
    \        }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (map.get(number) == 1) {\n                result.add(number);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> counts = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (counts.containsKey(number))\
    \ {\n                counts.put(number, counts.get(number) + 1);\n           \
    \ } else {\n                counts.put(number, 1);\n            }\n        }\n\
    \        for (Long number : numbers) {\n            if (counts.get(number) ==\
    \ 1) {\n                result.add(number);\n            }\n        }\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        for\
    \ (Long number : numbers) {\n            if (map.containsKey(number)) {\n    \
    \            map.put(number, map.get(number) + 1);\n            } else {\n   \
    \             map.put(number, 1);\n            }\n        }\n        for (Long\
    \ number : numbers) {\n            if (map.get(number) == 1) {\n             \
    \   result.add(number);\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            Long count = map.get(number);\n            if (count == null)\
    \ {\n                map.put(number, (long)1l);\n            } else {\n      \
    \          map.put(number, count + (long)1l);\n            }\n        }\n    \
    \    for (Long number : numbers) {\n            Long count = map.get(number);\n\
    \            if (count == (long)1l) {\n                result.add(number);\n \
    \           }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (!result.contains(number)) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (!result.contains(number)) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> counts = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (counts.containsKey(number))\
    \ {\n                counts.put(number, counts.get(number) + 1);\n           \
    \ } else {\n                counts.put(number, 1);\n            }\n        }\n\
    \        for (Long number : numbers) {\n            if (counts.get(number) ==\
    \ 1) {\n                result.add(number);\n            }\n        }\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        for\
    \ (Long number : numbers) {\n            if (map.containsKey(number)) {\n    \
    \            map.put(number, map.get(number) + 1);\n            } else {\n   \
    \             map.put(number, 1);\n            }\n        }\n        for (Long\
    \ number : numbers) {\n            if (map.get(number) == 1) {\n             \
    \   result.add(number);\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", '        return null;', "   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long, Long>\
    \ map = new HashMap<Long, Long>();\n        for (Long number : numbers) {\n  \
    \          if (map.containsKey(number)) {\n                map.put(number, map.get(number)\
    \ + 1);\n            } else {\n                map.put(number, 1l);\n        \
    \    }\n        }\n        for (Long number : numbers) {\n            if (map.get(number)\
    \ == 1) {\n                result.add(number);\n            }\n        }\n   \
    \     return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        for\
    \ (Long number : numbers) {\n            if (map.containsKey(number)) {\n    \
    \            map.put(number, map.get(number) + 1);\n            } else {\n   \
    \             map.put(number, 1);\n            }\n        }\n        for (Long\
    \ number : numbers) {\n            if (map.get(number) == 1) {\n             \
    \   result.add(number);\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (!result.contains(number)) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (map.get(number) == 1) {\n                result.add(number);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (map.get(number) == 1) {\n                result.add(number);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (map.get(number) == 1) {\n                result.add(number);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (map.get(number) == 1) {\n                result.add(number);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (map.get(number) == 1) {\n                result.add(number);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (!result.contains(number)) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1l);\n            }\n        }\n        for (Long number : numbers) {\n    \
    \        if (map.get(number) == 1) {\n                result.add(number);\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> unique = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (!unique.contains(number)) {\n                unique.add(number);\n\
    \            }\n        }\n        return unique;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Long> map = new HashMap<Long,\
    \ Long>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1l);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (!result.contains(number)) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> counts = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (counts.containsKey(number))\
    \ {\n                counts.put(number, counts.get(number) + 1);\n           \
    \ } else {\n                counts.put(number, 1);\n            }\n        }\n\
    \        for (Long number : numbers) {\n            if (counts.get(number) ==\
    \ 1) {\n                result.add(number);\n            }\n        }\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        for\
    \ (Long number : numbers) {\n            if (map.containsKey(number)) {\n    \
    \            map.put(number, map.get(number) + 1);\n            } else {\n   \
    \             map.put(number, 1);\n            }\n        }\n        for (Long\
    \ number : numbers) {\n            if (map.get(number) == 1) {\n             \
    \   result.add(number);\n            }\n        }\n        return result;", " \
    \       // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        for\
    \ (Long number : numbers) {\n            if (map.containsKey(number)) {\n    \
    \            map.put(number, map.get(number) + 1);\n            } else {\n   \
    \             map.put(number, 1);\n            }\n        }\n        for (Long\
    \ number : numbers) {\n            if (map.get(number) == 1) {\n             \
    \   result.add(number);\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Long> map = new HashMap<Long,\
    \ Long>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1l);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        // Write your code here\n\
    \        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        // Your code here\n        return null;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Long> map = new HashMap<Long,\
    \ Long>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1l);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (!result.contains(number)) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (!result.contains(number)) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<Long, Integer>();\n        for (Long number : numbers)\
    \ {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                result.add(number);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Long> map = new HashMap<Long,\
    \ Long>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1l);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> counts = new HashMap<Long, Long>();\n        for (Long number : numbers)\
    \ {\n            Long count = counts.get(number);\n            if (count == null)\
    \ {\n                count = (long)0l;\n            }\n            counts.put(number,\
    \ count + (long)1l);\n        }\n        for (Long number : numbers) {\n     \
    \       Long count = counts.get(number);\n            if (count == (long)1l) {\n\
    \                result.add(number);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        for (Long\
    \ number : numbers) {\n            if (map.containsKey(number)) {\n          \
    \      map.put(number, map.get(number) + 1);\n            } else {\n         \
    \       map.put(number, 1);\n            }\n        }\n        for (Long number\
    \ : numbers) {\n            if (map.get(number) == 1) {\n                result.add(number);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1);\n            }\n        }\n        for\
    \ (Long number : numbers) {\n            if (map.get(number) == 1) {\n       \
    \         result.add(number);\n            }\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

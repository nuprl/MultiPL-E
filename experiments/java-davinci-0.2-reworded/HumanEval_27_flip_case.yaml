name: HumanEval_27_flip_case
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // For a given string, flip lowercase characters to uppercase\
  \ and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\"\
  )\n    public static String flipCase(String string) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(flipCase((\"\
  \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
  \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
  tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
completions: ["        StringBuilder sb = new StringBuilder();\n        for (int i\
    \ = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(Character.toLowerCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       return string.chars()\n            .mapToObj(i -> (char) i)\n        \
    \    .map(c -> Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c))\n\
    \            .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)\n\
    \            .toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n \
    \                   return Character.toLowerCase(c);\n                } else {\n\
    \                    return Character.toUpperCase(c);\n                }\n   \
    \         })\n            .map(c -> Character.toString((char) c))\n          \
    \  .collect(Collectors.joining());", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       return string.chars()\n            .mapToObj(c -> {\n                if\
    \ (Character.isUpperCase(c)) {\n                    return Character.toLowerCase(c);\n\
    \                } else {\n                    return Character.toUpperCase(c);\n\
    \                }\n            })\n            .map(c -> Character.toString((char)\
    \ c))\n            .collect(Collectors.joining());", "        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        String result\
    \ = \"\";\n        for (int i = 0; i < string.length(); i++) {\n            char\
    \ c = string.charAt(i);\n            if (Character.isUpperCase(c)) {\n       \
    \         result += Character.toLowerCase(c);\n            } else {\n        \
    \        result += Character.toUpperCase(c);\n            }\n        }\n     \
    \   return result;", "        return string.chars()\n            .mapToObj(c ->\
    \ (char) c)\n            .map(c -> Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c))\n            .collect(StringBuilder::new, StringBuilder::append,\
    \ StringBuilder::append)\n            .toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .map(c -> Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c))\n\
    \            .collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append)\n\
    \            .toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> (char) c)\n            .map(c -> Character.isLowerCase(c)\
    \ ? Character.toUpperCase(c) : Character.toLowerCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> {\n                if (Character.isLowerCase(c)) {\n\
    \                    return Character.toUpperCase(c);\n                } else\
    \ {\n                    return Character.toLowerCase(c);\n                }\n\
    \            })\n            .map(c -> Character.toString((char) c))\n       \
    \     .collect(Collectors.joining());", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(Character.toLowerCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       return string.chars()\n            .mapToObj(c -> (char) c)\n        \
    \    .map(c -> Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c))\n\
    \            .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)\n\
    \            .toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       return string.chars()\n            .mapToObj(c -> {\n                if\
    \ (Character.isUpperCase(c)) {\n                    return Character.toLowerCase(c);\n\
    \                } else {\n                    return Character.toUpperCase(c);\n\
    \                }\n            })\n            .map(c -> Character.toString((char)\
    \ c))\n            .collect(Collectors.joining());", '        return null;', " \
    \       return string.chars()\n            .mapToObj(c -> (char) c)\n        \
    \    .map(c -> Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c))\n\
    \            .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)\n\
    \            .toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isLowerCase(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(Character.toLowerCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isLowerCase(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(Character.toLowerCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       return string.chars()\n            .mapToObj(c -> (char) c)\n        \
    \    .map(c -> Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c))\n\
    \            .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)\n\
    \            .toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n \
    \                   return Character.toLowerCase(c);\n                } else {\n\
    \                    return Character.toUpperCase(c);\n                }\n   \
    \         })\n            .map(c -> c.toString())\n            .collect(Collectors.joining());",
  "        StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isLowerCase(c)\
    \ ? Character.toUpperCase(c) : Character.toLowerCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n \
    \                   return Character.toLowerCase(c);\n                } else {\n\
    \                    return Character.toUpperCase(c);\n                }\n   \
    \         })\n            .map(c -> c.toString())\n            .collect(Collectors.joining());",
  "        StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> {\n                if (Character.isLowerCase(c)) {\n \
    \                   return Character.toUpperCase(c);\n                } else {\n\
    \                    return Character.toLowerCase(c);\n                }\n   \
    \         })\n            .map(Object::toString)\n            .collect(Collectors.joining());",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> {\n                if (Character.isUpperCase(c)) {\n\
    \                    return Character.toLowerCase(c);\n                } else\
    \ {\n                    return Character.toUpperCase(c);\n                }\n\
    \            })\n            .map(c -> c.toString())\n            .collect(Collectors.joining());",
  "        StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                result.append(Character.toLowerCase(c));\n\
    \            } else {\n                result.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return result.toString();", "        return\
    \ string.chars()\n            .mapToObj(c -> (char) c)\n            .map(c ->\
    \ Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c))\n\
    \            .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)\n\
    \            .toString();", "        return string.chars()\n            .mapToObj(c\
    \ -> (char) c)\n            .map(c -> Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c))\n            .collect(StringBuilder::new, StringBuilder::append,\
    \ StringBuilder::append)\n            .toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        for (char c : string.toCharArray()) {\n    \
    \        if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        // >>> YOUR\
    \ CODE HERE <<<\n        return null;", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(Character.toLowerCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isLowerCase(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(Character.toLowerCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isLowerCase(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(Character.toLowerCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c))\n            .map(c -> Character.toString((char)\
    \ c))\n            .collect(Collectors.joining());", "        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       return string.chars()\n            .mapToObj(c -> (char) c)\n        \
    \    .map(c -> Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c))\n\
    \            .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)\n\
    \            .toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       return string.chars()\n            .mapToObj(c -> {\n                if\
    \ (Character.isUpperCase(c)) {\n                    return Character.toLowerCase(c);\n\
    \                } else {\n                    return Character.toUpperCase(c);\n\
    \                }\n            })\n            .map(c -> Character.toString((char)\
    \ c))\n            .collect(Collectors.joining());", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> {\n                if (Character.isLowerCase(c)) {\n \
    \                   return Character.toUpperCase(c);\n                } else {\n\
    \                    return Character.toLowerCase(c);\n                }\n   \
    \         })\n            .map(Object::toString)\n            .collect(Collectors.joining());",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isLowerCase(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(Character.toLowerCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(Character.toLowerCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(Character.toLowerCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isLowerCase(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(Character.toLowerCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : string.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        return string.chars()\n    \
    \        .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n \
    \           if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();", "        return string.chars()\n\
    \            .mapToObj(c -> (char) c)\n            .map(c -> Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c))\n            .collect(StringBuilder::new,\
    \ StringBuilder::append, StringBuilder::append)\n            .toString();", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();"]
stop_tokens:
- "\n    }\n"

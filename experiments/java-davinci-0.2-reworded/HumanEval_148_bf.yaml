name: HumanEval_148_bf
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // There are eight planets in our solar system: the closerst\
  \ to the Sun \n    // is Mercury, the next one is Venus, then Earth, Mars, Jupiter,\
  \ Saturn, \n    // Uranus, Neptune.\n    // Write a function that takes two planet\
  \ names as strings planet1 and planet2. \n    // The function should return a pair\
  \ containing all planets whose orbits are \n    // located between the orbit of\
  \ planet1 and the orbit of planet2, sorted by \n    // the proximity to the sun.\
  \ \n    // The function should return an empty pair if planet1 or planet2\n    //\
  \ are not correct planet names. \n    // Examples\n    // >>> bf((\"Jupiter\"),\
  \ (\"Neptune\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"Saturn\"\
  , (String)\"Uranus\")))\n    // >>> bf((\"Earth\"), (\"Mercury\"))\n    // (ArrayList<String>(\"\
  Venus\"))\n    // >>> bf((\"Mercury\"), (\"Uranus\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
  Venus\", (String)\"Earth\", (String)\"Mars\", (String)\"Jupiter\", (String)\"Saturn\"\
  )))\n    public static ArrayList<String> bf(String planet1, String planet2) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(bf((\"Jupiter\"\
  ), (\"Neptune\")).equals((new ArrayList<String>(Arrays.asList((String)\"Saturn\"\
  , (String)\"Uranus\")))));\n    assert(bf((\"Earth\"), (\"Mercury\")).equals((new\
  \ ArrayList<String>(Arrays.asList((String)\"Venus\")))));\n    assert(bf((\"Mercury\"\
  ), (\"Uranus\")).equals((new ArrayList<String>(Arrays.asList((String)\"Venus\",\
  \ (String)\"Earth\", (String)\"Mars\", (String)\"Jupiter\", (String)\"Saturn\")))));\n\
  \    assert(bf((\"Neptune\"), (\"Venus\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
  Earth\", (String)\"Mars\", (String)\"Jupiter\", (String)\"Saturn\", (String)\"Uranus\"\
  )))));\n    assert(bf((\"Earth\"), (\"Earth\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
  \    assert(bf((\"Mars\"), (\"Earth\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
  \    assert(bf((\"Jupiter\"), (\"Makemake\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
  \    }\n\n}\n"
completions: ["        ArrayList<String> planets = new ArrayList<String>(Arrays.asList(\"\
    Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\"));\n        int index1 = planets.indexOf(planet1);\n        int\
    \ index2 = planets.indexOf(planet2);\n        if (index1 == -1 || index2 == -1)\
    \ {\n            return new ArrayList<String>();\n        }\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        if (index1 > index2) {\n        \
    \    for (int i = index2 + 1; i < index1; i++) {\n                result.add(planets.get(i));\n\
    \            }\n        } else {\n            for (int i = index1 + 1; i < index2;\
    \ i++) {\n                result.add(planets.get(i));\n            }\n       \
    \ }\n        return result;", "        ArrayList<String> planets = new ArrayList<String>(Arrays.asList(\"\
    Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\"));\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int index1 = planets.indexOf(planet1);\n        int index2 = planets.indexOf(planet2);\n\
    \        if (index1 == -1 || index2 == -1) {\n            return result;\n   \
    \     }\n        if (index1 > index2) {\n            int temp = index1;\n    \
    \        index1 = index2;\n            index2 = temp;\n        }\n        for\
    \ (int i = index1 + 1; i < index2; i++) {\n            result.add(planets.get(i));\n\
    \        }\n        return result;", "        ArrayList<String> planets = new\
    \ ArrayList<String>(Arrays.asList(\"Mercury\", \"Venus\", \"Earth\", \"Mars\"\
    , \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"));\n        int p1 = planets.indexOf(planet1);\n\
    \        int p2 = planets.indexOf(planet2);\n        if (p1 == -1 || p2 == -1)\
    \ {\n            return new ArrayList<String>();\n        }\n        if (p1 >\
    \ p2) {\n            int tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n\
    \        }\n        return new ArrayList<String>(planets.subList(p1 + 1, p2));",
  "        ArrayList<String> planets = new ArrayList<String>(Arrays.asList(\"Mercury\"\
    , \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\
    ));\n        ArrayList<String> result = new ArrayList<String>();\n        int\
    \ index1 = planets.indexOf(planet1);\n        int index2 = planets.indexOf(planet2);\n\
    \        if (index1 == -1 || index2 == -1) {\n            return result;\n   \
    \     }\n        if (index1 < index2) {\n            for (int i = index1 + 1;\
    \ i < index2; i++) {\n                result.add(planets.get(i));\n          \
    \  }\n        } else {\n            for (int i = index2 + 1; i < index1; i++)\
    \ {\n                result.add(planets.get(i));\n            }\n        }\n \
    \       return result;", "        ArrayList<String> planets = new ArrayList<String>(Arrays.asList(\"\
    Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\"));\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int index1 = planets.indexOf(planet1);\n        int index2 = planets.indexOf(planet2);\n\
    \        if (index1 == -1 || index2 == -1) {\n            return result;\n   \
    \     }\n        int start = Math.min(index1, index2);\n        int end = Math.max(index1,\
    \ index2);\n        for (int i = start + 1; i < end; i++) {\n            result.add(planets.get(i));\n\
    \        }\n        return result;", "        ArrayList<String> planets = new\
    \ ArrayList<String>(Arrays.asList(\"Mercury\", \"Venus\", \"Earth\", \"Mars\"\
    , \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"));\n        int index1 = planets.indexOf(planet1);\n\
    \        int index2 = planets.indexOf(planet2);\n        if (index1 == -1 || index2\
    \ == -1) {\n            return new ArrayList<String>();\n        }\n        if\
    \ (index1 > index2) {\n            int temp = index1;\n            index1 = index2;\n\
    \            index2 = temp;\n        }\n        ArrayList<String> result = new\
    \ ArrayList<String>();\n        for (int i = index1 + 1; i < index2; i++) {\n\
    \            result.add(planets.get(i));\n        }\n        return result;",
  "        ArrayList<String> planets = new ArrayList<String>(Arrays.asList(\"Mercury\"\
    , \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\
    ));\n        ArrayList<String> result = new ArrayList<String>();\n        int\
    \ index1 = planets.indexOf(planet1);\n        int index2 = planets.indexOf(planet2);\n\
    \        if (index1 == -1 || index2 == -1) {\n            return result;\n   \
    \     }\n        if (index1 < index2) {\n            for (int i = index1 + 1;\
    \ i < index2; i++) {\n                result.add(planets.get(i));\n          \
    \  }\n        } else {\n            for (int i = index2 + 1; i < index1; i++)\
    \ {\n                result.add(planets.get(i));\n            }\n        }\n \
    \       return result;", "        ArrayList<String> planets = new ArrayList<String>(Arrays.asList(\"\
    Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\"));\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int index1 = planets.indexOf(planet1);\n        int index2 = planets.indexOf(planet2);\n\
    \        if (index1 == -1 || index2 == -1) {\n            return result;\n   \
    \     }\n        if (index1 < index2) {\n            for (int i = index1 + 1;\
    \ i < index2; i++) {\n                result.add(planets.get(i));\n          \
    \  }\n        } else {\n            for (int i = index2 + 1; i < index1; i++)\
    \ {\n                result.add(planets.get(i));\n            }\n        }\n \
    \       return result;", "        ArrayList<String> planets = new ArrayList<String>(Arrays.asList(\"\
    Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\"));\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int start = planets.indexOf(planet1);\n        int end = planets.indexOf(planet2);\n\
    \        if (start == -1 || end == -1) {\n            return result;\n       \
    \ }\n        if (start > end) {\n            int temp = start;\n            start\
    \ = end;\n            end = temp;\n        }\n        for (int i = start + 1;\
    \ i < end; i++) {\n            result.add(planets.get(i));\n        }\n      \
    \  return result;", "        ArrayList<String> planets = new ArrayList<String>(Arrays.asList(\"\
    Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\"));\n        int index1 = planets.indexOf(planet1);\n        int\
    \ index2 = planets.indexOf(planet2);\n        if (index1 == -1 || index2 == -1)\
    \ {\n            return new ArrayList<String>();\n        }\n        if (index1\
    \ > index2) {\n            int temp = index1;\n            index1 = index2;\n\
    \            index2 = temp;\n        }\n        ArrayList<String> result = new\
    \ ArrayList<String>();\n        for (int i = index1 + 1; i < index2; i++) {\n\
    \            result.add(planets.get(i));\n        }\n        return result;",
  "        ArrayList<String> planets = new ArrayList<String>(Arrays.asList(\"Mercury\"\
    , \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\
    ));\n        int index1 = planets.indexOf(planet1);\n        int index2 = planets.indexOf(planet2);\n\
    \        if (index1 == -1 || index2 == -1) {\n            return new ArrayList<String>();\n\
    \        }\n        ArrayList<String> result = new ArrayList<String>();\n    \
    \    if (index1 < index2) {\n            for (int i = index1 + 1; i < index2;\
    \ i++) {\n                result.add(planets.get(i));\n            }\n       \
    \ } else {\n            for (int i = index2 + 1; i < index1; i++) {\n        \
    \        result.add(planets.get(i));\n            }\n        }\n        return\
    \ result;", "        ArrayList<String> planets = new ArrayList<String>(Arrays.asList(\"\
    Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\"));\n        int index1 = planets.indexOf(planet1);\n        int\
    \ index2 = planets.indexOf(planet2);\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (index1 == -1 || index2 == -1) {\n            return result;\n   \
    \     }\n        if (index1 < index2) {\n            for (int i = index1 + 1;\
    \ i < index2; i++) {\n                result.add(planets.get(i));\n          \
    \  }\n        } else {\n            for (int i = index2 + 1; i < index1; i++)\
    \ {\n                result.add(planets.get(i));\n            }\n        }\n \
    \       return result;", "        ArrayList<String> planets = new ArrayList<String>(Arrays.asList(\"\
    Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\"));\n        int index1 = planets.indexOf(planet1);\n        int\
    \ index2 = planets.indexOf(planet2);\n        if (index1 == -1 || index2 == -1)\
    \ {\n            return new ArrayList<String>();\n        }\n        if (index1\
    \ > index2) {\n            int temp = index1;\n            index1 = index2;\n\
    \            index2 = temp;\n        }\n        ArrayList<String> result = new\
    \ ArrayList<String>();\n        for (int i = index1 + 1; i < index2; i++) {\n\
    \            result.add(planets.get(i));\n        }\n        return result;",
  "        ArrayList<String> planets = new ArrayList<String>(Arrays.asList(\"Mercury\"\
    , \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\
    ));\n        int index1 = planets.indexOf(planet1);\n        int index2 = planets.indexOf(planet2);\n\
    \        ArrayList<String> result = new ArrayList<String>();\n        if (index1\
    \ == -1 || index2 == -1) {\n            return result;\n        }\n        if\
    \ (index1 < index2) {\n            for (int i = index1 + 1; i < index2; i++) {\n\
    \                result.add(planets.get(i));\n            }\n        } else {\n\
    \            for (int i = index2 + 1; i < index1; i++) {\n                result.add(planets.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<String>\
    \ planets = new ArrayList<String>(Arrays.asList(\"Mercury\", \"Venus\", \"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"));\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        int index1 = planets.indexOf(planet1);\n\
    \        int index2 = planets.indexOf(planet2);\n        if (index1 == -1 || index2\
    \ == -1) {\n            return result;\n        }\n        if (index1 < index2)\
    \ {\n            for (int i = index1 + 1; i < index2; i++) {\n               \
    \ result.add(planets.get(i));\n            }\n        } else {\n            for\
    \ (int i = index2 + 1; i < index1; i++) {\n                result.add(planets.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<String>\
    \ planets = new ArrayList<String>(Arrays.asList(\"Mercury\", \"Venus\", \"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"));\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        int index1 = planets.indexOf(planet1);\n\
    \        int index2 = planets.indexOf(planet2);\n        if (index1 == -1 || index2\
    \ == -1) {\n            return result;\n        }\n        if (index1 < index2)\
    \ {\n            for (int i = index1 + 1; i < index2; i++) {\n               \
    \ result.add(planets.get(i));\n            }\n        } else {\n            for\
    \ (int i = index2 + 1; i < index1; i++) {\n                result.add(planets.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<String>\
    \ planets = new ArrayList<String>(Arrays.asList(\"Mercury\", \"Venus\", \"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"));\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        int index1 = planets.indexOf(planet1);\n\
    \        int index2 = planets.indexOf(planet2);\n        if (index1 == -1 || index2\
    \ == -1) {\n            return result;\n        }\n        if (index1 < index2)\
    \ {\n            for (int i = index1 + 1; i < index2; i++) {\n               \
    \ result.add(planets.get(i));\n            }\n        } else {\n            for\
    \ (int i = index2 + 1; i < index1; i++) {\n                result.add(planets.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<String>\
    \ planets = new ArrayList<String>(Arrays.asList(\"Mercury\", \"Venus\", \"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"));\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        int index1 = planets.indexOf(planet1);\n\
    \        int index2 = planets.indexOf(planet2);\n        if (index1 == -1 || index2\
    \ == -1) {\n            return result;\n        }\n        if (index1 < index2)\
    \ {\n            for (int i = index1 + 1; i < index2; i++) {\n               \
    \ result.add(planets.get(i));\n            }\n        } else {\n            for\
    \ (int i = index2 + 1; i < index1; i++) {\n                result.add(planets.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<String>\
    \ planets = new ArrayList<String>(Arrays.asList(\"Mercury\", \"Venus\", \"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"));\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        int index1 = planets.indexOf(planet1);\n\
    \        int index2 = planets.indexOf(planet2);\n        if (index1 == -1 || index2\
    \ == -1) {\n            return result;\n        }\n        if (index1 < index2)\
    \ {\n            for (int i = index1 + 1; i < index2; i++) {\n               \
    \ result.add(planets.get(i));\n            }\n        } else {\n            for\
    \ (int i = index2 + 1; i < index1; i++) {\n                result.add(planets.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<String>\
    \ planets = new ArrayList<String>(Arrays.asList(\"Mercury\", \"Venus\", \"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"));\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        int index1 = planets.indexOf(planet1);\n\
    \        int index2 = planets.indexOf(planet2);\n        if (index1 == -1 || index2\
    \ == -1) {\n            return result;\n        }\n        if (index1 > index2)\
    \ {\n            int temp = index1;\n            index1 = index2;\n          \
    \  index2 = temp;\n        }\n        for (int i = index1 + 1; i < index2; i++)\
    \ {\n            result.add(planets.get(i));\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

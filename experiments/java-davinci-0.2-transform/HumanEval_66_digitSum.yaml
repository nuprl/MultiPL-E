name: HumanEval_66_digitSum
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Task\n    // Write a function that takes a string as input\
  \ and returns the sum of the upper characters only'\n    // ASCII codes.\n    //\
  \ Examples:\n    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"\
  ))\n    // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
  helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n  \
  \  // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    public static long digitSum(String\
  \ s) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(digitSum((\"\
  \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
  abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
  woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
  \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\")) ==\
  \ (327l));\n    }\n\n}\n"
completions: ['        return s.chars().filter(c -> c >= 65 && c <= 90).sum();', '        return
    s.chars().filter(Character::isUpperCase).sum();', '        return s.chars().filter(x
    -> x >= 65 && x <= 90).sum();', '        return s.chars().filter(x -> x >= 65
    && x <= 90).sum();', '        return s.chars().filter(c -> c >= 65 && c <= 90).sum();',
  '        return s.chars().filter(Character::isUpperCase).sum();', "        return\
    \ s.chars().filter(c -> c >= 'A' && c <= 'Z').sum();", '        return s.chars().filter(c
    -> c >= 65 && c <= 90).sum();', '        return s.chars().filter(x -> x >= 65
    && x <= 90).sum();', '        return s.chars().filter(Character::isUpperCase).sum();',
  "        return s.chars().filter(c -> c >= 'A' && c <= 'Z').sum();", "        return\
    \ s.chars().filter(c -> c >= 'A' && c <= 'Z').sum();", '        return s.chars().filter(c
    -> c >= 65 && c <= 90).sum();', '        return s.chars().filter(Character::isUpperCase).sum();',
  '        return s.chars().filter(Character::isUpperCase).sum();', '        return
    s.chars().filter(Character::isUpperCase).sum();', '        return s.chars().filter(Character::isUpperCase).sum();',
  '        return s.chars().filter(c -> c >= 65 && c <= 90).sum();', '        return
    s.chars().filter(Character::isUpperCase).sum();', "        return s.chars().filter(c\
    \ -> c >= 'A' && c <= 'Z').sum();"]
stop_tokens:
- "\n    }\n"

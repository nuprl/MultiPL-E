language: java
name: HumanEval_94_skjkasdkd
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        long largestPrime = 0;\n        for (long i : lst) {\n     \
    \       if (isPrime(i)) {\n                largestPrime = i;\n            }\n\
    \        }\n        return sumDigits(largestPrime);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpipa96wto.java:27: error: cannot find symbol\n            if (isPrime(i))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    /tmp/tmpipa96wto.java:31: error: cannot find symbol\n        return sumDigits(largestPrime);\n\
    \               ^\n  symbol:   method sumDigits(long)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        long max = 0;\n        for (long i : lst) {\n            if\
    \ (isPrime(i)) {\n                max = Math.max(max, i);\n            }\n   \
    \     }\n        return sumDigits(max);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l,\
    \ (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l,\
    \ (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l,\
    \ (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwz8slby2.java:27: error: cannot find symbol\n            if (isPrime(i))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    /tmp/tmpwz8slby2.java:31: error: cannot find symbol\n        return sumDigits(max);\n\
    \               ^\n  symbol:   method sumDigits(long)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> isPrime(x)).mapToLong(x -> sumDigits(x)).max().getAsLong();\n\
    \    }\n    public static void main(String[] args) {\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l, (long)1l, (long)3l,\
    \ (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l, (long)2l, (long)181l,\
    \ (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l, (long)324l, (long)4l,\
    \ (long)3l)))) == (10l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)0l, (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l,\
    \ (long)40l, (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l,\
    \ (long)1l)))) == (25l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l)))) == (13l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l, (long)0l, (long)5l, (long)6l)))) == (11l));\n\
    \    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)81l,\
    \ (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwba6vr1j.java:25: error: cannot find symbol\n        return lst.stream().filter(x\
    \ -> isPrime(x)).mapToLong(x -> sumDigits(x)).max().getAsLong();\n           \
    \                             ^\n  symbol:   method isPrime(Long)\n  location:\
    \ class Problem\n/tmp/tmpwba6vr1j.java:25: error: cannot find symbol\n       \
    \ return lst.stream().filter(x -> isPrime(x)).mapToLong(x -> sumDigits(x)).max().getAsLong();\n\
    \                                                                   ^\n  symbol:\
    \   method sumDigits(Long)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        // Your code here\n        long largest_prime = 0;\n       \
    \ for (long i : lst) {\n            if (isPrime(i)) {\n                if (i >\
    \ largest_prime) {\n                    largest_prime = i;\n                }\n\
    \            }\n        }\n        return sum_digits(largest_prime);\n    }\n\
    \    public static void main(String[] args) {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnjokz7k0.java:28: error: cannot find symbol\n            if (isPrime(i))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    /tmp/tmpnjokz7k0.java:34: error: cannot find symbol\n        return sum_digits(largest_prime);\n\
    \               ^\n  symbol:   method sum_digits(long)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> isPrime(x)).max(Comparator.naturalOrder()).get().toString().chars().map(x\
    \ -> x - '0').sum();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)0l, (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l,\
    \ (long)40l, (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l,\
    \ (long)1l)))) == (25l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l)))) == (13l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l, (long)0l, (long)5l, (long)6l)))) == (11l));\n\
    \    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)81l,\
    \ (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk5ppa2zh.java:25: error: cannot find symbol\n        return lst.stream().filter(x\
    \ -> isPrime(x)).max(Comparator.naturalOrder()).get().toString().chars().map(x\
    \ -> x - '0').sum();\n                                        ^\n  symbol:   method\
    \ isPrime(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        long largestPrime = 0;\n        for (long i : lst) {\n     \
    \       if (isPrime(i)) {\n                largestPrime = i;\n            }\n\
    \        }\n        return sumDigits(largestPrime);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpipa96wto.java:27: error: cannot find symbol\n            if (isPrime(i))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    /tmp/tmpipa96wto.java:31: error: cannot find symbol\n        return sumDigits(largestPrime);\n\
    \               ^\n  symbol:   method sumDigits(long)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        long max = 0;\n        for (long i : lst) {\n            if\
    \ (isPrime(i)) {\n                max = Math.max(max, i);\n            }\n   \
    \     }\n        return sumDigits(max);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l,\
    \ (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l,\
    \ (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l,\
    \ (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwz8slby2.java:27: error: cannot find symbol\n            if (isPrime(i))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    /tmp/tmpwz8slby2.java:31: error: cannot find symbol\n        return sumDigits(max);\n\
    \               ^\n  symbol:   method sumDigits(long)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        // Your code here\n        return 0l;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp5207z6a.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l)))))\n        // (10l)\n\
    \        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l,\
    \ (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l,\
    \ (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))))\n\
    \        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l)))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)\n    }\n    public static void main(String[] args)\
    \ {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l,\
    \ (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l,\
    \ (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l,\
    \ (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4m2ghc08.java:32: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        long max = 0;\n        for (long i : lst) {\n            if\
    \ (isPrime(i)) {\n                max = Math.max(max, i);\n            }\n   \
    \     }\n        return sumDigits(max);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l,\
    \ (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l,\
    \ (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l,\
    \ (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwz8slby2.java:27: error: cannot find symbol\n            if (isPrime(i))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    /tmp/tmpwz8slby2.java:31: error: cannot find symbol\n        return sumDigits(max);\n\
    \               ^\n  symbol:   method sumDigits(long)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        long max = 0;\n        for (long i : lst) {\n            if\
    \ (isPrime(i)) {\n                max = Math.max(max, i);\n            }\n   \
    \     }\n        return sumDigits(max);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l,\
    \ (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l,\
    \ (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l,\
    \ (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwz8slby2.java:27: error: cannot find symbol\n            if (isPrime(i))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    /tmp/tmpwz8slby2.java:31: error: cannot find symbol\n        return sumDigits(max);\n\
    \               ^\n  symbol:   method sumDigits(long)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        long max = 0;\n        for (long i : lst) {\n            if\
    \ (isPrime(i)) {\n                max = Math.max(max, i);\n            }\n   \
    \     }\n        return sumDigits(max);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l,\
    \ (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l,\
    \ (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l,\
    \ (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwz8slby2.java:27: error: cannot find symbol\n            if (isPrime(i))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    /tmp/tmpwz8slby2.java:31: error: cannot find symbol\n        return sumDigits(max);\n\
    \               ^\n  symbol:   method sumDigits(long)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        // Your code here\n        return (long)0l;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3wxo5_o3.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        long largestPrime = 0;\n        for (long i : lst) {\n     \
    \       if (isPrime(i)) {\n                largestPrime = i;\n            }\n\
    \        }\n        return sumDigits(largestPrime);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpipa96wto.java:27: error: cannot find symbol\n            if (isPrime(i))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    /tmp/tmpipa96wto.java:31: error: cannot find symbol\n        return sumDigits(largestPrime);\n\
    \               ^\n  symbol:   method sumDigits(long)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> {\n            if (x == 0l)\
    \ {\n                return false;\n            }\n            for (long i = 2l;\
    \ i < x; i += 1l) {\n                if (x % i == 0l) {\n                    return\
    \ false;\n                }\n            }\n            return true;\n       \
    \ }).max(Comparator.naturalOrder()).get().toString().chars().map(x -> x - 48).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l, (long)1l, (long)3l,\
    \ (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l, (long)2l, (long)181l,\
    \ (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l, (long)324l, (long)4l,\
    \ (long)3l)))) == (10l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)0l, (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l,\
    \ (long)40l, (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l,\
    \ (long)1l)))) == (25l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l)))) == (13l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)83l, (long)0l, (long)5l, (long)6l)))) == (11l));\n\
    \    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)81l,\
    \ (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        // Your code here\n        return (long)0l;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3wxo5_o3.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l)))))\n        // (10l)\n\
    \        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l,\
    \ (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l,\
    \ (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))))\n\
    \        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l)))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)\n    }\n    public static void main(String[] args)\
    \ {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l,\
    \ (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l,\
    \ (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l,\
    \ (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4m2ghc08.java:32: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        long max = 0;\n        for (long i : lst) {\n            if\
    \ (isPrime(i)) {\n                max = Math.max(max, i);\n            }\n   \
    \     }\n        return sumDigits(max);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l,\
    \ (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l,\
    \ (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l,\
    \ (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwz8slby2.java:27: error: cannot find symbol\n            if (isPrime(i))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    /tmp/tmpwz8slby2.java:31: error: cannot find symbol\n        return sumDigits(max);\n\
    \               ^\n  symbol:   method sumDigits(long)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        long max = 0;\n        for (long i : lst) {\n            if\
    \ (isPrime(i)) {\n                max = i;\n            }\n        }\n       \
    \ return sumOfDigits(max);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l,\
    \ (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l,\
    \ (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l,\
    \ (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpekcl61fq.java:27: error: cannot find symbol\n            if (isPrime(i))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    /tmp/tmpekcl61fq.java:31: error: cannot find symbol\n        return sumOfDigits(max);\n\
    \               ^\n  symbol:   method sumOfDigits(long)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a list of integers.\n    // You need to\
    \ find the largest prime value and return the sum of its digits.\n    // Examples:\n\
    \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l))))\n    // (25l)\n    // >>>\
    \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l,\
    \ (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l,\
    \ (long)32l, (long)30l, (long)1l, (long)9l, (long)3l))))\n    // (13l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l,\
    \ (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l,\
    \ (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l))))\n    // (3l)\n    //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l,\
    \ (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public static long skjkasdkd(ArrayList<Long>\
    \ lst) {\n        long largestPrime = 0;\n        for (long i : lst) {\n     \
    \       if (isPrime(i)) {\n                largestPrime = i;\n            }\n\
    \        }\n        return sumOfDigits(largestPrime);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l)))) == (10l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))) == (25l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)1l, (long)32l, (long)5107l,\
    \ (long)34l, (long)83278l, (long)109l, (long)163l, (long)23l, (long)2323l, (long)32l,\
    \ (long)30l, (long)1l, (long)9l, (long)3l)))) == (13l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)724l, (long)32l, (long)71l, (long)99l,\
    \ (long)32l, (long)6l, (long)0l, (long)5l, (long)91l, (long)83l, (long)0l, (long)5l,\
    \ (long)6l)))) == (11l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)81l, (long)12l, (long)3l, (long)1l, (long)21l)))) == (3l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)8l, (long)1l, (long)2l, (long)1l,\
    \ (long)7l)))) == (7l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l))))\
    \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)8191l,\
    \ (long)123456l, (long)127l, (long)7l)))) == (19l));\n    assert(skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)127l, (long)97l, (long)8192l)))) == (10l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6vji6p9f.java:27: error: cannot find symbol\n            if (isPrime(i))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    /tmp/tmp6vji6p9f.java:31: error: cannot find symbol\n        return sumOfDigits(largestPrime);\n\
    \               ^\n  symbol:   method sumOfDigits(long)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''

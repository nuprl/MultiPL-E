language: java
name: HumanEval_131_digits
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Your code here\n        return 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp66zqdy86.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) {\n                prod *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return prod;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbuwh_2og.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) {\n                prod *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return prod;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbuwh_2og.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Your code here\n        return 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp66zqdy86.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long res = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) {\n                res *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return res;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsf5j3_7i.java:36)\n"
  stdout: ''
  timestamp: 1659799151
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long ans = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) {\n                ans *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return ans;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptd1ok9ga.java:36)\n"
  stdout: ''
  timestamp: 1659799151
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) {\n                prod *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return prod;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbuwh_2og.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) {\n                prod *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return prod;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbuwh_2og.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) {\n                prod *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return prod;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbuwh_2og.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) {\n                prod *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return prod;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbuwh_2og.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) {\n                prod *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return prod;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbuwh_2og.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Your code here.\n        return 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvs4wpih0.java:23)\n"
  stdout: ''
  timestamp: 1659799125
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // YOUR CODE HERE\n        return 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdy2hgbu9.java:23)\n"
  stdout: ''
  timestamp: 1659799125
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Your code here.\n        return 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvs4wpih0.java:23)\n"
  stdout: ''
  timestamp: 1659799125
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu6eqi4y.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl81dlsq.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6yxiwyn.java:22)\n"
  stdout: ''

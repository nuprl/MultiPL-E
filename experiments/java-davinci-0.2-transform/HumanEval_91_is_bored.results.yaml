language: java
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Arrays.stream(S.split(\"\
    \\\\.|\\\\?|\\\\!\"))\n                .filter(s -> s.trim().startsWith(\"I\"\
    ))\n                .count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp438efi_e.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Arrays.stream(S.split(\"\
    [.?!]\"))\n            .filter(s -> s.startsWith(\"I\"))\n            .count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeqqctk48.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Arrays.stream(S.split(\"\
    [.?!]\"))\n            .filter(s -> s.trim().startsWith(\"I\"))\n            .count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp61qej3wh.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Stream.of(S.split(\"\
    [.?!]\"))\n            .filter(s -> s.startsWith(\"I\"))\n            .count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2av8xt67.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Arrays.stream(S.split(\"\
    [.?!]\")).filter(s -> s.trim().startsWith(\"I\")).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp20d0n20f.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Arrays.stream(S.split(\"\
    [.?!]\"))\n            .filter(s -> s.trim().startsWith(\"I\"))\n            .count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp61qej3wh.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] sentences\
    \ = S.split(\"[.?!]\");\n        long boredoms = 0;\n        for (String sentence\
    \ : sentences) {\n            if (sentence.trim().startsWith(\"I\")) {\n     \
    \           boredoms++;\n            }\n        }\n        return boredoms;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpogphbtng.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Arrays.stream(S.split(\"\
    [.?!]\"))\n            .filter(s -> s.startsWith(\"I\"))\n            .count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeqqctk48.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Arrays.stream(S.split(\"\
    \\\\.|\\\\?|\\\\!\"))\n            .filter(s -> s.trim().startsWith(\"I\"))\n\
    \            .count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyqqhwxwq.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] sentences\
    \ = S.split(\"[.?!]\");\n        long boredoms = 0;\n        for (String sentence\
    \ : sentences) {\n            if (sentence.startsWith(\"I\")) {\n            \
    \    boredoms++;\n            }\n        }\n        return boredoms;\n    }\n\
    \    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprctgpohz.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Arrays.stream(S.split(\"\
    [.?!]\"))\n            .filter(s -> s.startsWith(\"I\"))\n            .count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeqqctk48.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Arrays.stream(S.split(\"\
    [.?!]\"))\n            .filter(s -> s.startsWith(\"I\"))\n            .count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeqqctk48.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Arrays.stream(S.split(\"\
    [.?!]\"))\n            .filter(s -> s.trim().startsWith(\"I\"))\n            .count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp61qej3wh.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        String[] sentences\
    \ = S.split(\"[.?!]\");\n        long boredoms = 0;\n        for (String sentence\
    \ : sentences) {\n            if (sentence.startsWith(\"I\")) {\n            \
    \    boredoms++;\n            }\n        }\n        return boredoms;\n    }\n\
    \    public static void main(String[] args) {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprctgpohz.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Arrays.stream(S.split(\"\
    [.?!]\"))\n            .filter(s -> s.trim().startsWith(\"I\"))\n            .count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp61qej3wh.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Arrays.stream(S.split(\"\
    [.?!]\")).filter(s -> s.startsWith(\"I\")).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyl7w0cl4.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Arrays.stream(S.split(\"\
    [.?!]\"))\n            .filter(s -> s.trim().startsWith(\"I\"))\n            .count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(isBored((\"Hello\
    \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp61qej3wh.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Arrays.stream(S.split(\"\
    [.?!]\")).filter(s -> s.startsWith(\"I\")).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyl7w0cl4.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Arrays.stream(S.split(\"\
    [.?!]\")).filter(s -> s.startsWith(\"I\")).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyl7w0cl4.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>>\
    \ isBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1l)\n    public static long isBored(String S) {\n        return Arrays.stream(S.split(\"\
    [.?!]\")).filter(s -> s.startsWith(\"I\")).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyl7w0cl4.java:22)\n"
  stdout: ''

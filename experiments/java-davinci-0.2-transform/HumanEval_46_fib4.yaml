name: HumanEval_46_fib4
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // The Fib4 number sequence is a sequence similar to the Fibbonacci\
  \ sequnece that's defined as follows:\n    // fib4(0) -> 0\n    // fib4(1) -> 0\n\
  \    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1) + fib4(n-2)\
  \ + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently compute\
  \ the n-th element of the fib4 number sequence.  Do not use recursion.\n    // >>>\
  \ fib4((5l))\n    // (4l)\n    // >>> fib4((6l))\n    // (8l)\n    // >>> fib4((7l))\n\
  \    // (14l)\n    public static long fib4(long n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(fib4((5l))\
  \ == (4l));\n    assert(fib4((8l)) == (28l));\n    assert(fib4((10l)) == (104l));\n\
  \    assert(fib4((12l)) == (386l));\n    }\n\n}\n"
completions: ["        // Write your code here.\n        return 0l;", "        long\
    \ a = 0;\n        long b = 0;\n        long c = 2;\n        long d = 0;\n    \
    \    long e = 0;\n        for (long i = 4; i <= n; i++) {\n            e = a +\
    \ b + c + d;\n            a = b;\n            b = c;\n            c = d;\n   \
    \         d = e;\n        }\n        return e;", "        long[] arr = new long[4];\n\
    \        arr[0] = 0;\n        arr[1] = 0;\n        arr[2] = 2;\n        arr[3]\
    \ = 0;\n        for (int i = 4; i <= n; i++) {\n            long temp = arr[0]\
    \ + arr[1] + arr[2] + arr[3];\n            arr[0] = arr[1];\n            arr[1]\
    \ = arr[2];\n            arr[2] = arr[3];\n            arr[3] = temp;\n      \
    \  }\n        return arr[3];", '        return 0;', '        return 0;', "   \
    \     // Your code here.\n        return 0;", "        long a = 0;\n        long\
    \ b = 0;\n        long c = 2;\n        long d = 0;\n        long e = 0;\n    \
    \    for (long i = 4; i <= n; i++) {\n            e = a + b + c + d;\n       \
    \     a = b;\n            b = c;\n            c = d;\n            d = e;\n   \
    \     }\n        return e;", "        long a = 0, b = 0, c = 2, d = 0;\n     \
    \   for (int i = 4; i <= n; i++) {\n            d = a + b + c;\n            a\
    \ = b;\n            b = c;\n            c = d;\n        }\n        return d;",
  "        // >>> fib4((5l))\n        // (4l)\n        // >>> fib4((6l))\n       \
    \ // (8l)\n        // >>> fib4((7l))\n        // (14l)\n        long a = 0;\n\
    \        long b = 0;\n        long c = 2;\n        long d = 0;\n        long e\
    \ = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n      \
    \  long i = 0;\n        long j = 0;\n        long k = 0;\n        long l = 0;\n\
    \        long m = 0;\n        long o = 0;\n        long p = 0;\n        long q\
    \ = 0;\n        long r = 0;\n        long s = 0;\n        long t = 0;\n      \
    \  long u = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n\
    \        long y = 0;\n        long z = 0;\n        long A = 0;\n        long B\
    \ = 0;\n        long C = 0;\n        long D = 0;\n        long E = 0;\n      \
    \  long F = 0;\n        long G = 0;\n        long H = 0;\n        long I = 0;\n\
    \        long J = 0;\n        long K = 0;\n        long L = 0;\n        long M\
    \ = 0;\n        long O = 0;\n        long P = 0;\n        long Q = 0;\n      \
    \  long R = 0;\n        long S = 0;\n        long T = 0;\n        long U = 0;\n\
    \        long V = 0;\n        long W = 0;\n        long X = 0;\n        long Y\
    \ = 0;\n        long Z = 0;\n        long AA = 0;\n        long AB = 0;\n    \
    \    long AC = 0;\n        long AD = 0;\n        long AE = 0;\n        long AF\
    \ = 0;\n        long AG = 0;\n        long AH = 0;\n        long AI = 0;\n   \
    \     long AJ = 0;\n        long AK = 0;\n        long AL = 0;\n        long AM\
    \ = 0;\n        long AO = 0;\n        long AP = 0;\n        long AQ =", "    \
    \    // >>> fib4((5l))\n        // (4l)\n        // >>> fib4((6l))\n        //\
    \ (8l)\n        // >>> fib4((7l))\n        // (14l)\n        // >>> fib4((8l))\n\
    \        // (24l)\n        // >>> fib4((9l))\n        // (42l)\n        // >>>\
    \ fib4((10l))\n        // (72l)\n        // >>> fib4((11l))\n        // (120l)\n\
    \        // >>> fib4((12l))\n        // (200l)\n        // >>> fib4((13l))\n \
    \       // (328l)\n        // >>> fib4((14l))\n        // (536l)\n        // >>>\
    \ fib4((15l))\n        // (864l)\n        // >>> fib4((16l))\n        // (1400l)\n\
    \        // >>> fib4((17l))\n        // (2264l)\n        // >>> fib4((18l))\n\
    \        // (3664l)\n        // >>> fib4((19l))\n        // (5928l)\n        //\
    \ >>> fib4((20l))\n        // (9632l)\n        // >>> fib4((21l))\n        //\
    \ (15600l)\n        // >>> fib4((22l))\n        // (25232l)\n        // >>> fib4((23l))\n\
    \        // (40936l)\n        // >>> fib4((24l))\n        // (66272l)\n      \
    \  // >>> fib4((25l))\n        // (107216l)\n        // >>> fib4((26l))\n    \
    \    // (173488l)\n        // >>> fib4((27l))\n        // (280160l)\n        //\
    \ >>> fib4((28l))\n        // (453616l)\n        // >>> fib4((29l))\n        //\
    \ (732864l)\n        // >>> fib4((30l))\n        // (1189440l)\n        // >>>\
    \ fib4((31l))\n        // (1922304l)\n        // >>> fib4((32l))\n        // (3114752l)\n\
    \        // >>> fib4((33l))\n", "        long a = 0;\n        long b = 0;\n  \
    \      long c = 2;\n        long d = 0;\n        long e = 0;\n        for (long\
    \ i = 3; i <= n; i++) {\n            e = a + b + c + d;\n            a = b;\n\
    \            b = c;\n            c = d;\n            d = e;\n        }\n     \
    \   return e;", "        long[] fibs = new long[4];\n        fibs[0] = 0;\n  \
    \      fibs[1] = 0;\n        fibs[2] = 2;\n        fibs[3] = 0;\n        for (int\
    \ i = 4; i <= n; i++) {\n            long tmp = fibs[3];\n            fibs[3]\
    \ = fibs[2] + fibs[1] + fibs[0] + fibs[3];\n            fibs[0] = fibs[1];\n \
    \           fibs[1] = fibs[2];\n            fibs[2] = tmp;\n        }\n      \
    \  return fibs[3];", "        // Fill in the code here\n        return 0;", " \
    \       // BEGIN SOLUTION\n        if (n < 4) {\n            return (n == 0) ?\
    \ 0 : (n == 1) ? 0 : (n == 2) ? 2 : 0;\n        }\n        long a = 0;\n     \
    \   long b = 0;\n        long c = 2;\n        long d = 0;\n        for (long i\
    \ = 4; i <= n; i++) {\n            d = a + b + c;\n            a = b;\n      \
    \      b = c;\n            c = d;\n        }\n        return d;\n        // END\
    \ SOLUTION", "        // >>> fib4((5l))\n        // (4l)\n        // >>> fib4((6l))\n\
    \        // (8l)\n        // >>> fib4((7l))\n        // (14l)\n        // >>>\
    \ fib4((8l))\n        // (22l)\n        // >>> fib4((9l))\n        // (36l)\n\
    \        // >>> fib4((10l))\n        // (58l)\n        // >>> fib4((11l))\n  \
    \      // (94l)\n        // >>> fib4((12l))\n        // (152l)\n        // >>>\
    \ fib4((13l))\n        // (246l)\n        // >>> fib4((14l))\n        // (400l)\n\
    \        // >>> fib4((15l))\n        // (646l)\n        // >>> fib4((16l))\n \
    \       // (1046l)\n        // >>> fib4((17l))\n        // (1692l)\n        //\
    \ >>> fib4((18l))\n        // (2738l)\n        // >>> fib4((19l))\n        //\
    \ (4430l)\n        // >>> fib4((20l))\n        // (7168l)\n        // >>> fib4((21l))\n\
    \        // (11598l)\n        // >>> fib4((22l))\n        // (18776l)\n      \
    \  // >>> fib4((23l))\n        // (30374l)\n        // >>> fib4((24l))\n     \
    \   // (49150l)\n        // >>> fib4((25l))\n        // (79924l)\n        // >>>\
    \ fib4((26l))\n        // (129070l)\n        // >>> fib4((27l))\n        // (209094l)\n\
    \        // >>> fib4((28l))\n        // (338214l)\n        // >>> fib4((29l))\n\
    \        // (547308l)\n        // >>> fib4((30l))\n        // (885622l)\n    \
    \    // >>> fib4((31l))\n        // (1433230l)\n        // >>> fib4((32l))\n \
    \       // (2318852l)\n        // >>> fib4((33l))\n       ", '        return 0;',
  '        return 0;', "        if (n == 0) {\n            return 0;\n        }\n\
    \        if (n == 1) {\n            return 0;\n        }\n        if (n == 2)\
    \ {\n            return 2;\n        }\n        if (n == 3) {\n            return\
    \ 0;\n        }\n        long[] fib4 = new long[(int) n + 1];\n        fib4[0]\
    \ = 0;\n        fib4[1] = 0;\n        fib4[2] = 2;\n        fib4[3] = 0;\n   \
    \     for (int i = 4; i <= n; i++) {\n            fib4[i] = fib4[i - 1] + fib4[i\
    \ - 2] + fib4[i - 3] + fib4[i - 4];\n        }\n        return fib4[(int) n];",
  "        long[] fib4 = new long[4];\n        fib4[0] = 0;\n        fib4[1] = 0;\n\
    \        fib4[2] = 2;\n        fib4[3] = 0;\n        for (int i = 4; i <= n; i++)\
    \ {\n            fib4[i % 4] = fib4[(i - 1) % 4] + fib4[(i - 2) % 4] + fib4[(i\
    \ - 3) % 4] + fib4[(i - 4) % 4];\n        }\n        return fib4[(int) (n % 4)];",
  "        // >>> fib4((5l))\n        // (4l)\n        // >>> fib4((6l))\n       \
    \ // (8l)\n        // >>> fib4((7l))\n        // (14l)\n        long[] fib = new\
    \ long[4];\n        fib[0] = 0;\n        fib[1] = 0;\n        fib[2] = 2;\n  \
    \      fib[3] = 0;\n        if (n <= 3) {\n            return fib[(int) n];\n\
    \        }\n        for (int i = 4; i <= n; i++) {\n            long temp = fib[0]\
    \ + fib[1] + fib[2] + fib[3];\n            fib[0] = fib[1];\n            fib[1]\
    \ = fib[2];\n            fib[2] = fib[3];\n            fib[3] = temp;\n      \
    \  }\n        return fib[3];"]
stop_tokens:
- "\n    }\n"

name: HumanEval_88_sort_array
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given an array of non-negative integers, return a copy of\
  \ the given array after sorting,\n    // you will sort the given array in ascending\
  \ order if the sum( first index value, last index value) is odd,\n    // or sort\
  \ it in descending order if the sum( first index value, last index value) is even.\n\
  \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
  \ >>> sortArray((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
  \    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)5l))))\n    // (new\
  \ ArrayList<Long>(Arrays.asList((long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
  \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
  \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))\n    public static ArrayList<Long>\
  \ sortArray(ArrayList<Long> array) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(sortArray((new\
  \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
  \    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
  \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
  \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
  \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
  \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
  \    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<Long>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        if (array.size() == 0) {\n            return array;\n        }\n      \
    \  if (array.size() == 1) {\n            return array;\n        }\n        if\
    \ (array.size() == 2) {\n            if (array.get(0) > array.get(1)) {\n    \
    \            long temp = array.get(0);\n                array.set(0, array.get(1));\n\
    \                array.set(1, temp);\n            }\n            return array;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.size() == 2) {\n           \
    \ if (array.get(0) > array.get(1)) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n            } else {\n           \
    \     result.add(array.get(0));\n                result.add(array.get(1));\n \
    \           }\n            return result;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            for (int i = array.size()\
    \ - 1; i >= 0; i--) {\n                result.add(array.get(i));\n           \
    \ }\n        } else {\n            for (int i = 0; i < array.size(); i++) {\n\
    \                result.add(array.get(i));\n            }\n        }\n       \
    \ return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < array.size(); i++) {\n            result.add(array.get(i));\n\
    \        }\n        if (array.size() > 1) {\n            if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n                Collections.sort(result, Collections.reverseOrder());\n\
    \            } else {\n                Collections.sort(result);\n           \
    \ }\n        }\n        return result;", "        if (array.size() == 0) {\n \
    \           return array;\n        }\n        else if (array.size() == 1) {\n\
    \            return array;\n        }\n        else {\n            long first\
    \ = array.get(0);\n            long last = array.get(array.size() - 1);\n    \
    \        if ((first + last) % 2 == 0) {\n                Collections.sort(array,\
    \ Collections.reverseOrder());\n            }\n            else {\n          \
    \      Collections.sort(array);\n            }\n            return array;\n  \
    \      }", "        ArrayList<Long> result = new ArrayList<Long>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        if (array.size() == 0) {\n            return array;\n        }\n      \
    \  if (array.size() == 1) {\n            return array;\n        }\n        if\
    \ (array.size() == 2) {\n            if (array.get(0) > array.get(1)) {\n    \
    \            long temp = array.get(0);\n                array.set(0, array.get(1));\n\
    \                array.set(1, temp);\n            }\n            return array;\n\
    \        }\n        long first = array.get(0);\n        long last = array.get(array.size()\
    \ - 1);\n        if ((first + last) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        if (array.size() == 0) {\n      \
    \      return array;\n        }\n        if (array.size() == 1) {\n          \
    \  return array;\n        }\n        if (array.size() == 2) {\n            if\
    \ (array.get(0) > array.get(1)) {\n                long temp = array.get(0);\n\
    \                array.set(0, array.get(1));\n                array.set(1, temp);\n\
    \            }\n            return array;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        if (array.size() == 0) {\n      \
    \      return array;\n        }\n        if (array.size() == 1) {\n          \
    \  return array;\n        }\n        if (array.size() == 2) {\n            if\
    \ (array.get(0) > array.get(1)) {\n                long temp = array.get(0);\n\
    \                array.set(0, array.get(1));\n                array.set(1, temp);\n\
    \            }\n            return array;\n        }\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long first = array.get(0);\n      \
    \  long last = array.get(array.size() - 1);\n        if ((first + last) % 2 ==\
    \ 0) {\n            Collections.sort(array, Collections.reverseOrder());\n   \
    \     } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        if (array.size() == 0) {\n            return array;\n    \
    \    }\n        if (array.size() == 1) {\n            return array;\n        }\n\
    \        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                long temp = array.get(0);\n                array.set(0, array.get(1));\n\
    \                array.set(1, temp);\n            }\n            return array;\n\
    \        }\n        ArrayList<Long> left = new ArrayList<Long>();\n        ArrayList<Long>\
    \ right = new ArrayList<Long>();\n        for (int i = 0; i < array.size(); i++)\
    \ {\n            if (i < array.size() / 2) {\n                left.add(array.get(i));\n\
    \            } else {\n                right.add(array.get(i));\n            }\n\
    \        }\n        left = sortArray(left);\n        right = sortArray(right);\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        int leftIndex\
    \ = 0;\n        int rightIndex = 0;\n        while (leftIndex < left.size() &&\
    \ rightIndex < right.size()) {\n            if (left.get(leftIndex) < right.get(rightIndex))\
    \ {\n                result.add(left.get(leftIndex));\n                leftIndex++;\n\
    \            } else {\n                result.add(right.get(rightIndex));\n  \
    \              rightIndex++;\n            }\n        }\n        while (leftIndex\
    \ < left.size()) {\n            result.add(left.get(leftIndex));\n           \
    \ leftIndex++;\n        }\n        while (rightIndex < right.size()) {\n     \
    \       result.add(right.get(rightIndex));\n            rightIndex++;\n      \
    \  }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n \
    \           Collections.reverse(result);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        if (array.size() == 0) {\n            return array;\n        }\n      \
    \  if (array.size() == 1) {\n            return array;\n        }\n        if\
    \ (array.size() == 2) {\n            if (array.get(0) > array.get(1)) {\n    \
    \            Long temp = array.get(0);\n                array.set(0, array.get(1));\n\
    \                array.set(1, temp);\n            }\n            return array;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  '        return array;', '        return array;', "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (array.size() == 0) {\n            return\
    \ result;\n        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        if (array.size() == 0) {\n            return array;\n    \
    \    }\n        if (array.size() == 1) {\n            return array;\n        }\n\
    \        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                long temp = array.get(0);\n                array.set(0, array.get(1));\n\
    \                array.set(1, temp);\n            }\n            return array;\n\
    \        }\n        ArrayList<Long> left = new ArrayList<Long>();\n        ArrayList<Long>\
    \ right = new ArrayList<Long>();\n        for (int i = 0; i < array.size(); i++)\
    \ {\n            if (i < array.size() / 2) {\n                left.add(array.get(i));\n\
    \            } else {\n                right.add(array.get(i));\n            }\n\
    \        }\n        left = sortArray(left);\n        right = sortArray(right);\n\
    \        return merge(left, right);", '        return array;', "        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return array;", "        // Write your code here\n        // To print\
    \ results to the standard output you can use System.out.println()\n        //\
    \ Example: System.out.println(\"Hello world!\");\n        return array;", "  \
    \      ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            for (int i = array.size() - 1; i >= 0; i--) {\n                result.add(array.get(i));\n\
    \            }\n        } else {\n            for (int i = 0; i < array.size();\
    \ i++) {\n                result.add(array.get(i));\n            }\n        }\n\
    \        return result;", '        return array;', "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (array.size() == 0) {\n            return\
    \ result;\n        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        if (array.size() == 0) {\n            return array;\n    \
    \    }\n        if (array.size() == 1) {\n            return array;\n        }\n\
    \        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                long temp = array.get(0);\n                array.set(0, array.get(1));\n\
    \                array.set(1, temp);\n            }\n            return array;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  '        return array;', '        return array;', '        return array;', "   \
    \     if (array.size() <= 1) {\n            return array;\n        }\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        if ((array.get(0) +\
    \ array.get(array.size() - 1)) % 2 == 0) {\n            for (int i = array.size()\
    \ - 1; i >= 0; i--) {\n                result.add(array.get(i));\n           \
    \ }\n        } else {\n            for (int i = 0; i < array.size(); i++) {\n\
    \                result.add(array.get(i));\n            }\n        }\n       \
    \ return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        if (array.size() == 0) {\n            return array;\n    \
    \    }\n        if (array.size() == 1) {\n            return array;\n        }\n\
    \        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                long temp = array.get(0);\n                array.set(0, array.get(1));\n\
    \                array.set(1, temp);\n            }\n            return array;\n\
    \        }\n        int first = 0;\n        int last = array.size() - 1;\n   \
    \     if ((array.get(first) + array.get(last)) % 2 == 0) {\n            for (int\
    \ i = 0; i < array.size() / 2; i++) {\n                long temp = array.get(i);\n\
    \                array.set(i, array.get(array.size() - 1 - i));\n            \
    \    array.set(array.size() - 1 - i, temp);\n            }\n        }\n      \
    \  return array;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        long first = array.get(0);\n       \
    \ long last = array.get(array.size() - 1);\n        if ((first + last) % 2 ==\
    \ 0) {\n            array.sort(Collections.reverseOrder());\n        } else {\n\
    \            array.sort(null);\n        }\n        return array;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        int size = array.size();\n        if\
    \ (size == 0) {\n            return result;\n        }\n        if (size == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        int sum = array.get(0).intValue() + array.get(size - 1).intValue();\n\
    \        if (sum % 2 == 0) {\n            for (int i = size - 1; i >= 0; i--)\
    \ {\n                result.add(array.get(i));\n            }\n        } else\
    \ {\n            for (int i = 0; i < size; i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", '        return null;', " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i :\
    \ array) {\n            result.add(i);\n        }\n        if (array.size() >\
    \ 0) {\n            if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n                Collections.sort(result, Collections.reverseOrder());\n \
    \           } else {\n                Collections.sort(result);\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            array.sort(Collections.reverseOrder());\n   \
    \     } else {\n            array.sort(null);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  '        return array;', '        return null;', "        ArrayList<Long> sortedArray\
    \ = new ArrayList<Long>();\n        if (array.size() == 0) {\n            return\
    \ sortedArray;\n        }\n        if (array.size() == 1) {\n            sortedArray.add(array.get(0));\n\
    \            return sortedArray;\n        }\n        if (array.size() == 2) {\n\
    \            if (array.get(0) > array.get(1)) {\n                sortedArray.add(array.get(1));\n\
    \                sortedArray.add(array.get(0));\n            } else {\n      \
    \          sortedArray.add(array.get(0));\n                sortedArray.add(array.get(1));\n\
    \            }\n            return sortedArray;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            sortedArray = sortArrayDescending(array);\n\
    \        } else {\n            sortedArray = sortArrayAscending(array);\n    \
    \    }\n        return sortedArray;", '        return null;', "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", '        return new ArrayList<Long>();', " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        if (array.size() == 0) {\n            return array;\n        }\n      \
    \  if (array.size() == 1) {\n            return array;\n        }\n        if\
    \ (array.size() == 2) {\n            if (array.get(0) > array.get(1)) {\n    \
    \            Long temp = array.get(0);\n                array.set(0, array.get(1));\n\
    \                array.set(1, temp);\n            }\n            return array;\n\
    \        }\n        int sum = array.get(0).intValue() + array.get(array.size()\
    \ - 1).intValue();\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", '        return array;', "        if (array.size()\
    \ == 0) {\n            return array;\n        }\n        if (array.size() == 1)\
    \ {\n            return array;\n        }\n        if (array.size() == 2) {\n\
    \            if (array.get(0) > array.get(1)) {\n                long temp = array.get(0);\n\
    \                array.set(0, array.get(1));\n                array.set(1, temp);\n\
    \            }\n            return array;\n        }\n        ArrayList<Long>\
    \ left = new ArrayList<Long>();\n        ArrayList<Long> right = new ArrayList<Long>();\n\
    \        for (int i = 0; i < array.size(); i++) {\n            if (i < array.size()\
    \ / 2) {\n                left.add(array.get(i));\n            } else {\n    \
    \            right.add(array.get(i));\n            }\n        }\n        left\
    \ = sortArray(left);\n        right = sortArray(right);\n        return merge(left,\
    \ right);", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if ((array.get(0) + array.get(array.size() - 1))\
    \ % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n   \
    \             result.add(array.get(i));\n            }\n        } else {\n   \
    \         for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Long i : array) {\n            result.add(i);\n\
    \        }\n        if (array.size() > 0) {\n            if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n                Collections.sort(result, Collections.reverseOrder());\n\
    \            } else {\n                Collections.sort(result);\n           \
    \ }\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Long> result = new ArrayList<Long>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            for (int i = array.size() - 1; i >= 0; i--) {\n                result.add(array.get(i));\n\
    \            }\n        } else {\n            for (int i = 0; i < array.size();\
    \ i++) {\n                result.add(array.get(i));\n            }\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Long> result = new ArrayList<Long>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> sortedArray = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return sortedArray;\n        }\n        if (array.size()\
    \ == 1) {\n            sortedArray.add(array.get(0));\n            return sortedArray;\n\
    \        }\n        if (array.size() == 2) {\n            if (array.get(0) < array.get(1))\
    \ {\n                sortedArray.add(array.get(0));\n                sortedArray.add(array.get(1));\n\
    \            } else {\n                sortedArray.add(array.get(1));\n      \
    \          sortedArray.add(array.get(0));\n            }\n            return sortedArray;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            for (int i = array.size() - 1; i >= 0; i--) {\n             \
    \   sortedArray.add(array.get(i));\n            }\n        } else {\n        \
    \    for (int i = 0; i < array.size(); i++) {\n                sortedArray.add(array.get(i));\n\
    \            }\n        }\n        return sortedArray;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", '        return array;', "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        // Write your code here\n        // To print results to the\
    \ standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.size() == 2) {\n           \
    \ if (array.get(0) < array.get(1)) {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n            } else {\n           \
    \     result.add(array.get(1));\n                result.add(array.get(0));\n \
    \           }\n            return result;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            for (int i = array.size()\
    \ - 1; i >= 0; i--) {\n                result.add(array.get(i));\n           \
    \ }\n        } else {\n            for (int i = 0; i < array.size(); i++) {\n\
    \                result.add(array.get(i));\n            }\n        }\n       \
    \ return result;", "        if (array.size() == 0) {\n            return array;\n\
    \        }\n        if (array.size() == 1) {\n            return array;\n    \
    \    }\n        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                Long temp = array.get(0);\n                array.set(0, array.get(1));\n\
    \                array.set(1, temp);\n            }\n            return array;\n\
    \        }\n        ArrayList<Long> left = new ArrayList<Long>();\n        ArrayList<Long>\
    \ right = new ArrayList<Long>();\n        for (int i = 0; i < array.size(); i++)\
    \ {\n            if (i < array.size() / 2) {\n                left.add(array.get(i));\n\
    \            } else {\n                right.add(array.get(i));\n            }\n\
    \        }\n        left = sortArray(left);\n        right = sortArray(right);\n\
    \        return merge(left, right);", "        if (array.size() == 0) {\n    \
    \        return array;\n        }\n        if (array.size() == 1) {\n        \
    \    return array;\n        }\n        if (array.size() == 2) {\n            if\
    \ (array.get(0) > array.get(1)) {\n                long temp = array.get(0);\n\
    \                array.set(0, array.get(1));\n                array.set(1, temp);\n\
    \            }\n            return array;\n        }\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n\
    \                result.add(array.get(i));\n            }\n        } else {\n\
    \            for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (array.size() == 0) {\n            return\
    \ result;\n        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Long> result = new ArrayList<Long>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        if (array.size() == 0) {\n            return array;\n        }\n      \
    \  if (array.size() == 1) {\n            return array;\n        }\n        if\
    \ (array.size() == 2) {\n            if (array.get(0) > array.get(1)) {\n    \
    \            Collections.swap(array, 0, 1);\n            }\n            return\
    \ array;\n        }\n        if ((array.get(0) + array.get(array.size() - 1))\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Long> result = new ArrayList<Long>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            for (int i = array.size() - 1; i >= 0; i--) {\n                result.add(array.get(i));\n\
    \            }\n        } else {\n            for (int i = 0; i < array.size();\
    \ i++) {\n                result.add(array.get(i));\n            }\n        }\n\
    \        return result;", "        if (array.size() == 0) {\n            return\
    \ array;\n        }\n        if (array.size() == 1) {\n            return array;\n\
    \        }\n        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                long temp = array.get(0);\n                array.set(0, array.get(1));\n\
    \                array.set(1, temp);\n            }\n            return array;\n\
    \        }\n        ArrayList<Long> left = new ArrayList<Long>();\n        ArrayList<Long>\
    \ right = new ArrayList<Long>();\n        for (int i = 0; i < array.size(); i++)\
    \ {\n            if (i < array.size() / 2) {\n                left.add(array.get(i));\n\
    \            } else {\n                right.add(array.get(i));\n            }\n\
    \        }\n        left = sortArray(left);\n        right = sortArray(right);\n\
    \        return merge(left, right);", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() == 2) {\n         \
    \   if (array.get(0) < array.get(1)) {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n            } else {\n           \
    \     result.add(array.get(1));\n                result.add(array.get(0));\n \
    \           }\n            return result;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            result.add(array.get(array.size()\
    \ - 1));\n            result.addAll(sortArray(new ArrayList<Long>(array.subList(1,\
    \ array.size() - 1))));\n            result.add(array.get(0));\n        } else\
    \ {\n            result.add(array.get(0));\n            result.addAll(sortArray(new\
    \ ArrayList<Long>(array.subList(1, array.size() - 1))));\n            result.add(array.get(array.size()\
    \ - 1));\n        }\n        return result;", '        return array;', "     \
    \   ArrayList<Long> result = new ArrayList<Long>();\n        if(array.size() ==\
    \ 0) {\n            return result;\n        }\n        if(array.size() == 1) {\n\
    \            result.add(array.get(0));\n            return result;\n        }\n\
    \        if(array.size() == 2) {\n            if(array.get(0) > array.get(1))\
    \ {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \            } else {\n                result.add(array.get(0));\n           \
    \     result.add(array.get(1));\n            }\n            return result;\n \
    \       }\n        if((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            for(int i = array.size() - 1; i >= 0; i--) {\n                result.add(array.get(i));\n\
    \            }\n        } else {\n            for(int i = 0; i < array.size();\
    \ i++) {\n                result.add(array.get(i));\n            }\n        }\n\
    \        return result;", "        if (array.size() == 0) {\n            return\
    \ array;\n        }\n        if (array.size() == 1) {\n            return array;\n\
    \        }\n        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                long temp = array.get(0);\n                array.set(0, array.get(1));\n\
    \                array.set(1, temp);\n            }\n            return array;\n\
    \        }\n        ArrayList<Long> left = new ArrayList<Long>();\n        ArrayList<Long>\
    \ right = new ArrayList<Long>();\n        for (int i = 0; i < array.size(); i++)\
    \ {\n            if (i < array.size() / 2) {\n                left.add(array.get(i));\n\
    \            } else {\n                right.add(array.get(i));\n            }\n\
    \        }\n        left = sortArray(left);\n        right = sortArray(right);\n\
    \        return merge(left, right);", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() > 1) {\n          \
    \  if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n            \
    \    Collections.sort(array, Collections.reverseOrder());\n            } else\
    \ {\n                Collections.sort(array);\n            }\n            return\
    \ array;\n        }\n        return result;", '        return new ArrayList<Long>();',
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < array.size(); i++) {\n\
    \            if (array.get(i) % 2 == 0) {\n                even.add(array.get(i));\n\
    \            } else {\n                odd.add(array.get(i));\n            }\n\
    \        }\n        Collections.sort(odd);\n        Collections.sort(even);\n\
    \        if (array.size() > 0) {\n            if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n                Collections.reverse(even);\n            }\n\
    \        }\n        result.addAll(odd);\n        result.addAll(even);\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() == 2) {\n         \
    \   if (array.get(0) < array.get(1)) {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n            } else {\n           \
    \     result.add(array.get(1));\n                result.add(array.get(0));\n \
    \           }\n            return result;\n        }\n        ArrayList<Long>\
    \ left = new ArrayList<Long>();\n        ArrayList<Long> right = new ArrayList<Long>();\n\
    \        for (int i = 0; i < array.size(); i++) {\n            if (i < array.size()\
    \ / 2) {\n                left.add(array.get(i));\n            } else {\n    \
    \            right.add(array.get(i));\n            }\n        }\n        left\
    \ = sortArray(left);\n        right = sortArray(right);\n        return merge(left,\
    \ right);", '        return array;', "        if (array.size() == 0) {\n     \
    \       return array;\n        }\n        if (array.size() == 1) {\n         \
    \   return array;\n        }\n        if (array.size() == 2) {\n            if\
    \ (array.get(0) > array.get(1)) {\n                Long temp = array.get(0);\n\
    \                array.set(0, array.get(1));\n                array.set(1, temp);\n\
    \            }\n            return array;\n        }\n        ArrayList<Long>\
    \ left = new ArrayList<Long>();\n        ArrayList<Long> right = new ArrayList<Long>();\n\
    \        for (int i = 0; i < array.size(); i++) {\n            if (i < array.size()\
    \ / 2) {\n                left.add(array.get(i));\n            } else {\n    \
    \            right.add(array.get(i));\n            }\n        }\n        left\
    \ = sortArray(left);\n        right = sortArray(right);\n        return merge(left,\
    \ right);", '        return array;', "        // Your code goes here.\n      \
    \  return array;", "        if (array.size() == 0 || array.size() == 1) {\n  \
    \          return array;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        if (array.size() == 0) {\n            return array;\n    \
    \    }\n        if (array.size() == 1) {\n            return array;\n        }\n\
    \        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                Long temp = array.get(0);\n                array.set(0, array.get(1));\n\
    \                array.set(1, temp);\n            }\n            return array;\n\
    \        }\n        ArrayList<Long> left = new ArrayList<Long>();\n        ArrayList<Long>\
    \ right = new ArrayList<Long>();\n        for (int i = 0; i < array.size(); i++)\
    \ {\n            if (i < array.size() / 2) {\n                left.add(array.get(i));\n\
    \            } else {\n                right.add(array.get(i));\n            }\n\
    \        }\n        left = sortArray(left);\n        right = sortArray(right);\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        int i = 0;\n\
    \        int j = 0;\n        while (i < left.size() && j < right.size()) {\n \
    \           if (left.get(i) < right.get(j)) {\n                result.add(left.get(i));\n\
    \                i++;\n            } else {\n                result.add(right.get(j));\n\
    \                j++;\n            }\n        }\n        while (i < left.size())\
    \ {\n            result.add(left.get(i));\n            i++;\n        }\n     \
    \   while (j < right.size()) {\n            result.add(right.get(j));\n      \
    \      j++;\n        }\n        if ((array.get(0) + array.get(array.size() - 1))\
    \ % 2 == 0) {\n            Collections.reverse(result);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if (array.size() == 2) {\n            if (array.get(0)\
    \ < array.get(1)) {\n                result.add(array.get(0));\n             \
    \   result.add(array.get(1));\n            } else {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n            }\n            return\
    \ result;\n        }\n        if ((array.get(0) + array.get(array.size() - 1))\
    \ % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n   \
    \             result.add(array.get(i));\n            }\n        } else {\n   \
    \         for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", '        return array;', " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \            } else {\n                result.add(array.get(0));\n           \
    \     result.add(array.get(1));\n            }\n            return result;\n \
    \       }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            for (int i = array.size() - 1; i >= 0; i--) {\n             \
    \   result.add(array.get(i));\n            }\n        } else {\n            for\
    \ (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (array.size() == 0) {\n            return\
    \ result;\n        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if (array.get(0) > array.get(1)) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n            } else {\n           \
    \     result.add(array.get(0));\n                result.add(array.get(1));\n \
    \           }\n            return result;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() == 2) {\n         \
    \   if (array.get(0) < array.get(1)) {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n            } else {\n           \
    \     result.add(array.get(1));\n                result.add(array.get(0));\n \
    \           }\n            return result;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            result.add(array.get(array.size()\
    \ - 1));\n            result.addAll(sortArray(new ArrayList<Long>(array.subList(1,\
    \ array.size() - 1))));\n            result.add(array.get(0));\n        } else\
    \ {\n            result.add(array.get(0));\n            result.addAll(sortArray(new\
    \ ArrayList<Long>(array.subList(1, array.size() - 1))));\n            result.add(array.get(array.size()\
    \ - 1));\n        }\n        return result;", "        if (array.size() == 0)\
    \ {\n            return array;\n        }\n        if (array.size() == 1) {\n\
    \            return array;\n        }\n        if (array.size() == 2) {\n    \
    \        if (array.get(0) > array.get(1)) {\n                long temp = array.get(0);\n\
    \                array.set(0, array.get(1));\n                array.set(1, temp);\n\
    \            }\n            return array;\n        }\n        if (array.get(0)\
    \ + array.get(array.size() - 1) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() == 2) {\n         \
    \   if (array.get(0) < array.get(1)) {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n            } else {\n           \
    \     result.add(array.get(1));\n                result.add(array.get(0));\n \
    \           }\n            return result;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        if (array.size() <= 1) {\n      \
    \      return array;\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        result.addAll(array);\n        Collections.sort(result);\n        if\
    \ ((result.get(0) + result.get(result.size() - 1)) % 2 == 0) {\n            Collections.reverse(result);\n\
    \        }\n        return result;", "        // Write your code here\n      \
    \  // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ (array.size() == 2) {\n            if (array.get(0) < array.get(1)) {\n    \
    \            result.add(array.get(0));\n                result.add(array.get(1));\n\
    \            } else {\n                result.add(array.get(1));\n           \
    \     result.add(array.get(0));\n            }\n            return result;\n \
    \       }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long item\
    \ : array) {\n            result.add(item);\n        }\n        if (result.size()\
    \ > 0) {\n            if ((result.get(0) + result.get(result.size() - 1)) % 2\
    \ == 0) {\n                Collections.sort(result, Collections.reverseOrder());\n\
    \            } else {\n                Collections.sort(result);\n           \
    \ }\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        ArrayList<Long> odd = new ArrayList<Long>();\n \
    \       ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : array)\
    \ {\n            if (i % 2 == 0) {\n                even.add(i);\n           \
    \ } else {\n                odd.add(i);\n            }\n        }\n        Collections.sort(odd);\n\
    \        Collections.sort(even);\n        Collections.reverse(even);\n       \
    \ result.addAll(odd);\n        result.addAll(even);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        int sum = 0;\n\
    \        for (int i = 0; i < array.size(); i++) {\n            sum += array.get(i);\n\
    \        }\n        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        if (array.size() == 0) {\n            return array;\n    \
    \    }\n        if (array.size() == 1) {\n            return array;\n        }\n\
    \        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                return new ArrayList<Long>(Arrays.asList(array.get(1), array.get(0)));\n\
    \            }\n            return array;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return sorted;\n        }\n   \
    \     if (array.size() == 1) {\n            sorted.add(array.get(0));\n      \
    \      return sorted;\n        }\n        if (array.size() == 2) {\n         \
    \   if (array.get(0) < array.get(1)) {\n                sorted.add(array.get(0));\n\
    \                sorted.add(array.get(1));\n            } else {\n           \
    \     sorted.add(array.get(1));\n                sorted.add(array.get(0));\n \
    \           }\n            return sorted;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            for (int i = 0; i <\
    \ array.size(); i++) {\n                sorted.add(array.get(array.size() - 1\
    \ - i));\n            }\n        } else {\n            for (int i = 0; i < array.size();\
    \ i++) {\n                sorted.add(array.get(i));\n            }\n        }\n\
    \        return sorted;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        // Write your code here\n        // To print results to the\
    \ standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return array;", '        return array;', "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() > 0) {\n            result.add(array.get(0));\n    \
    \        if (array.size() > 1) {\n                result.add(array.get(array.size()\
    \ - 1));\n                if (array.size() > 2) {\n                    ArrayList<Long>\
    \ temp = new ArrayList<Long>();\n                    for (int i = 1; i < array.size()\
    \ - 1; i++) {\n                        temp.add(array.get(i));\n             \
    \       }\n                    if ((array.get(0) + array.get(array.size() - 1))\
    \ % 2 == 0) {\n                        Collections.sort(temp, Collections.reverseOrder());\n\
    \                    } else {\n                        Collections.sort(temp);\n\
    \                    }\n                    result.addAll(temp);\n           \
    \     }\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (array.size() == 0) {\n            return\
    \ result;\n        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if (array.get(0) < array.get(1)) {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n            } else {\n           \
    \     result.add(array.get(1));\n                result.add(array.get(0));\n \
    \           }\n            return result;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            result.add(array.get(array.size()\
    \ - 1));\n            result.addAll(sortArray(new ArrayList<>(array.subList(1,\
    \ array.size() - 1))));\n            result.add(array.get(0));\n        } else\
    \ {\n            result.add(array.get(0));\n            result.addAll(sortArray(new\
    \ ArrayList<>(array.subList(1, array.size() - 1))));\n            result.add(array.get(array.size()\
    \ - 1));\n        }\n        return result;", '        return array;', "     \
    \   ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return array;", "        // Write your code here\n \
    \       // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ (array.size() == 2) {\n            if (array.get(0) < array.get(1)) {\n    \
    \            result.add(array.get(0));\n                result.add(array.get(1));\n\
    \            } else {\n                result.add(array.get(1));\n           \
    \     result.add(array.get(0));\n            }\n            return result;\n \
    \       }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(array.size()\
    \ - 1 - i));\n            }\n        } else {\n            for (int i = 0; i <\
    \ array.size(); i++) {\n                result.add(array.get(i));\n          \
    \  }\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        for (Long i : array) {\n            result.add(i);\n\
    \        }\n        if (result.size() > 0) {\n            if ((result.get(0) +\
    \ result.get(result.size() - 1)) % 2 == 0) {\n                Collections.sort(result,\
    \ Collections.reverseOrder());\n            } else {\n                Collections.sort(result);\n\
    \            }\n        }\n        return result;", "        if (array.size()\
    \ == 0) {\n            return array;\n        }\n        if (array.size() == 1)\
    \ {\n            return array;\n        }\n        if (array.size() == 2) {\n\
    \            if (array.get(0) > array.get(1)) {\n                Collections.swap(array,\
    \ 0, 1);\n            }\n            return array;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Long> result = new ArrayList<Long>();\n        if(array.size()\
    \ == 0) {\n            return result;\n        }\n        if(array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        if(array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n   \
    \         Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            for (int i = array.size() - 1; i >= 0; i--) {\n                result.add(array.get(i));\n\
    \            }\n        } else {\n            for (int i = 0; i < array.size();\
    \ i++) {\n                result.add(array.get(i));\n            }\n        }\n\
    \        return result;", '        return array;', "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (array.size() == 0) {\n            return\
    \ result;\n        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n\
    \                result.add(array.get(i));\n            }\n        } else {\n\
    \            for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        if (array.size()\
    \ == 0) {\n            return array;\n        }\n        if (array.size() == 1)\
    \ {\n            return array;\n        }\n        if (array.size() == 2) {\n\
    \            if (array.get(0) > array.get(1)) {\n                Long temp = array.get(0);\n\
    \                array.set(0, array.get(1));\n                array.set(1, temp);\n\
    \            }\n            return array;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        ArrayList<Long> sortedArray = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return sortedArray;\n\
    \        }\n        if (array.size() == 1) {\n            sortedArray.add(array.get(0));\n\
    \            return sortedArray;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Long> sortedArray = new ArrayList<Long>();\n   \
    \     if (array.size() == 0) {\n            return sortedArray;\n        }\n \
    \       if (array.size() == 1) {\n            sortedArray.add(array.get(0));\n\
    \            return sortedArray;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", '        return null;', "        // Write your code here\n        //\
    \ To print results to the standard output you can use System.out.println()\n \
    \       // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ (array.size() == 2) {\n            if (array.get(0) < array.get(1)) {\n    \
    \            result.add(array.get(0));\n                result.add(array.get(1));\n\
    \            } else {\n                result.add(array.get(1));\n           \
    \     result.add(array.get(0));\n            }\n            return result;\n \
    \       }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            for (int i = array.size() - 1; i >= 0; i--) {\n             \
    \   result.add(array.get(i));\n            }\n        } else {\n            for\
    \ (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (array.size() == 0) {\n            return\
    \ result;\n        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Long> result = new ArrayList<Long>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> sortedArray = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return sortedArray;\n        }\n        if (array.size()\
    \ == 1) {\n            sortedArray.add(array.get(0));\n            return sortedArray;\n\
    \        }\n        if (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return array;", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        // Write your code here\n        // To print results to the\
    \ standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.size() == 2) {\n           \
    \ if (array.get(0) > array.get(1)) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n            } else {\n           \
    \     result.add(array.get(0));\n                result.add(array.get(1));\n \
    \           }\n            return result;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            for (int i = array.size()\
    \ - 1; i >= 0; i--) {\n                result.add(array.get(i));\n           \
    \ }\n        } else {\n            for (int i = 0; i < array.size(); i++) {\n\
    \                result.add(array.get(i));\n            }\n        }\n       \
    \ return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n\
    \                result.add(array.get(i));\n            }\n        } else {\n\
    \            for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        // Write your code\
    \ here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ (array.size() == 2) {\n            if (array.get(0) < array.get(1)) {\n    \
    \            result.add(array.get(0));\n                result.add(array.get(1));\n\
    \            } else {\n                result.add(array.get(1));\n           \
    \     result.add(array.get(0));\n            }\n            return result;\n \
    \       }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            result = sortArrayDescending(array);\n        } else {\n    \
    \        result = sortArrayAscending(array);\n        }\n        return result;",
  "        if (array.size() == 0) {\n            return array;\n        }\n      \
    \  if (array.size() == 1) {\n            return array;\n        }\n        if\
    \ (array.size() == 2) {\n            if (array.get(0) > array.get(1)) {\n    \
    \            long temp = array.get(0);\n                array.set(0, array.get(1));\n\
    \                array.set(1, temp);\n            }\n            return array;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  '        return array;', "        if (array.size() == 0) {\n            return array;\n\
    \        }\n        if (array.size() == 1) {\n            return array;\n    \
    \    }\n        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                Long temp = array.get(0);\n                array.set(0, array.get(1));\n\
    \                array.set(1, temp);\n            }\n            return array;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            for (int i = 0; i < array.size() / 2; i++) {\n              \
    \  Long temp = array.get(i);\n                array.set(i, array.get(array.size()\
    \ - 1 - i));\n                array.set(array.size() - 1 - i, temp);\n       \
    \     }\n        }\n        for (int i = 0; i < array.size() - 1; i++) {\n   \
    \         for (int j = i + 1; j < array.size(); j++) {\n                if (array.get(i)\
    \ > array.get(j)) {\n                    Long temp = array.get(i);\n         \
    \           array.set(i, array.get(j));\n                    array.set(j, temp);\n\
    \                }\n            }\n        }\n        return array;", "      \
    \  if (array.size() == 0) {\n            return array;\n        }\n        if\
    \ (array.size() == 1) {\n            return array;\n        }\n        if (array.size()\
    \ == 2) {\n            if (array.get(0) > array.get(1)) {\n                Long\
    \ temp = array.get(0);\n                array.set(0, array.get(1));\n        \
    \        array.set(1, temp);\n            }\n            return array;\n     \
    \   }\n        ArrayList<Long> left = new ArrayList<Long>();\n        ArrayList<Long>\
    \ right = new ArrayList<Long>();\n        for (int i = 0; i < array.size(); i++)\
    \ {\n            if (i < array.size() / 2) {\n                left.add(array.get(i));\n\
    \            } else {\n                right.add(array.get(i));\n            }\n\
    \        }\n        left = sortArray(left);\n        right = sortArray(right);\n\
    \        return merge(left, right);", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n\
    \                result.add(array.get(i));\n            }\n        } else {\n\
    \            for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        if (array.size()\
    \ == 0) {\n            return array;\n        }\n        if (array.size() == 1)\
    \ {\n            return array;\n        }\n        if (array.size() == 2) {\n\
    \            if (array.get(0) > array.get(1)) {\n                return array;\n\
    \            } else {\n                return new ArrayList<Long>(Arrays.asList(array.get(1),\
    \ array.get(0)));\n            }\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Long> result = new ArrayList<Long>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return null;", '        return array;', '        return
    array;', "        ArrayList<Long> result = new ArrayList<Long>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        if (array.size() == 0) {\n            return array;\n        }\n      \
    \  if (array.size() == 1) {\n            return array;\n        }\n        if\
    \ (array.size() == 2) {\n            if (array.get(0) > array.get(1)) {\n    \
    \            return new ArrayList<Long>(Arrays.asList(array.get(1), array.get(0)));\n\
    \            }\n            return array;\n        }\n        ArrayList<Long>\
    \ left = new ArrayList<Long>();\n        ArrayList<Long> right = new ArrayList<Long>();\n\
    \        for (int i = 0; i < array.size(); i++) {\n            if (i < array.size()\
    \ / 2) {\n                left.add(array.get(i));\n            } else {\n    \
    \            right.add(array.get(i));\n            }\n        }\n        left\
    \ = sortArray(left);\n        right = sortArray(right);\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        int i = 0;\n        int j = 0;\n  \
    \      while (i < left.size() && j < right.size()) {\n            if (left.get(i)\
    \ < right.get(j)) {\n                result.add(left.get(i));\n              \
    \  i++;\n            } else {\n                result.add(right.get(j));\n   \
    \             j++;\n            }\n        }\n        while (i < left.size())\
    \ {\n            result.add(left.get(i));\n            i++;\n        }\n     \
    \   while (j < right.size()) {\n            result.add(right.get(j));\n      \
    \      j++;\n        }\n        if ((array.get(0) + array.get(array.size() - 1))\
    \ % 2 == 0) {\n            Collections.reverse(result);\n        }\n        return\
    \ result;", '        return array;', "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        for (int i = 0; i < array.size(); i++)\
    \ {\n            if (array.get(i) % 2 == 0) {\n                even.add(array.get(i));\n\
    \            } else {\n                odd.add(array.get(i));\n            }\n\
    \        }\n        Collections.sort(odd);\n        Collections.sort(even);\n\
    \        Collections.reverse(even);\n        for (int i = 0; i < odd.size(); i++)\
    \ {\n            result.add(odd.get(i));\n        }\n        for (int i = 0; i\
    \ < even.size(); i++) {\n            result.add(even.get(i));\n        }\n   \
    \     return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Long> result = new ArrayList<Long>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      for (int i = 0; i < array.size(); i++) {\n            result.add(array.get(i));\n\
    \        }\n        if (array.size() > 1) {\n            if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n                Collections.sort(result, Collections.reverseOrder());\n\
    \            } else {\n                Collections.sort(result);\n           \
    \ }\n        }\n        return result;", "        // Write your code here\n  \
    \      // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if(array.size() == 0) {\n         \
    \   return result;\n        }\n        if(array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if(array.size() == 2) {\n    \
    \        if(array.get(0) > array.get(1)) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n            } else {\n           \
    \     result.add(array.get(0));\n                result.add(array.get(1));\n \
    \           }\n            return result;\n        }\n        if((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            for(int i = array.size()\
    \ - 1; i >= 0; i--) {\n                result.add(array.get(i));\n           \
    \ }\n        } else {\n            for(int i = 0; i < array.size(); i++) {\n \
    \               result.add(array.get(i));\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if ((array.get(0) + array.get(array.size() - 1))\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Long> result = new ArrayList<Long>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  '        return array;', "        // Write your code here\n        // To print results\
    \ to the standard output you can use System.out.println()\n        // Example:\
    \ System.out.println(\"Hello world!\");\n        return array;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : array) {\n            result.add(i);\n        }\n     \
    \   if (result.size() > 0) {\n            if ((result.get(0) + result.get(result.size()\
    \ - 1)) % 2 == 0) {\n                Collections.sort(result, Collections.reverseOrder());\n\
    \            } else {\n                Collections.sort(result);\n           \
    \ }\n        }\n        return result;", "        if (array.size() == 0) {\n \
    \           return array;\n        }\n        if (array.size() == 1) {\n     \
    \       return array;\n        }\n        if (array.size() == 2) {\n         \
    \   if (array.get(0) > array.get(1)) {\n                long temp = array.get(0);\n\
    \                array.set(0, array.get(1));\n                array.set(1, temp);\n\
    \            }\n            return array;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        if (array.size() == 0) {\n            return array;\n    \
    \    }\n        if (array.size() == 1) {\n            return array;\n        }\n\
    \        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                ArrayList<Long> newArray = new ArrayList<Long>();\n     \
    \           newArray.add(array.get(1));\n                newArray.add(array.get(0));\n\
    \                return newArray;\n            }\n            return array;\n\
    \        }\n        ArrayList<Long> newArray = new ArrayList<Long>();\n      \
    \  for (int i = 0; i < array.size(); i++) {\n            newArray.add(array.get(i));\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(newArray, Collections.reverseOrder());\n   \
    \     } else {\n            Collections.sort(newArray);\n        }\n        return\
    \ newArray;", "        // Write your code here\n        // To print results to\
    \ the standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.size() == 2) {\n           \
    \ if (array.get(0) > array.get(1)) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n            } else {\n           \
    \     result.add(array.get(0));\n                result.add(array.get(1));\n \
    \           }\n            return result;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", '        return null;', "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n\
    \                result.add(array.get(i));\n            }\n        } else {\n\
    \            for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (Long i : array) {\n            result.add(i);\n\
    \        }\n        if (result.size() > 0) {\n            if ((result.get(0) +\
    \ result.get(result.size() - 1)) % 2 == 0) {\n                Collections.sort(result,\
    \ Collections.reverseOrder());\n            } else {\n                Collections.sort(result);\n\
    \            }\n        }\n        return result;", '        return array;', '        return
    array;', '        return array;', '        return array;', "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", "        if (array.size() == 0) {\n      \
    \      return array;\n        }\n        if (array.size() == 1) {\n          \
    \  return array;\n        }\n        if (array.size() == 2) {\n            if\
    \ (array.get(0) > array.get(1)) {\n                ArrayList<Long> newArray =\
    \ new ArrayList<Long>();\n                newArray.add(array.get(1));\n      \
    \          newArray.add(array.get(0));\n                return newArray;\n   \
    \         }\n            return array;\n        }\n        if ((array.get(0) +\
    \ array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n            return array;\n        }\n       \
    \ Collections.sort(array);\n        return array;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (array.size() == 0) {\n            return\
    \ result;\n        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Long> result = new ArrayList<Long>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            for (int i = array.size() - 1; i >= 0; i--) {\n             \
    \   result.add(array.get(i));\n            }\n        } else {\n            for\
    \ (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        // Write your code\
    \ here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        return array;",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.size() == 2) {\n           \
    \ if (array.get(0) < array.get(1)) {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n            } else {\n           \
    \     result.add(array.get(1));\n                result.add(array.get(0));\n \
    \           }\n            return result;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            result = sortArrayDescending(array);\n\
    \        } else {\n            result = sortArrayAscending(array);\n        }\n\
    \        return result;", "        // Write your code here\n        // To print\
    \ results to the standard output you can use System.out.println()\n        //\
    \ Example: System.out.println(\"Hello world!\");\n        return array;", "  \
    \      if (array.size() == 0) {\n            return array;\n        }\n      \
    \  if (array.size() == 1) {\n            return array;\n        }\n        if\
    \ (array.size() == 2) {\n            if (array.get(0) > array.get(1)) {\n    \
    \            Collections.swap(array, 0, 1);\n            }\n            return\
    \ array;\n        }\n        if ((array.get(0) + array.get(array.size() - 1))\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", '        return array;', "        if (array.size() == 0) {\n      \
    \      return array;\n        }\n        if (array.size() == 1) {\n          \
    \  return array;\n        }\n        if (array.size() == 2) {\n            if\
    \ (array.get(0) > array.get(1)) {\n                return array;\n           \
    \ } else {\n                ArrayList<Long> result = new ArrayList<Long>();\n\
    \                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            }\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;", '        return array;', "        // Your\
    \ code here\n        return array;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        // Write your code here\n        // To print results to the\
    \ standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.size() == 2) {\n           \
    \ if (array.get(0) > array.get(1)) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n            } else {\n           \
    \     result.add(array.get(0));\n                result.add(array.get(1));\n \
    \           }\n            return result;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            for (int i = array.size()\
    \ - 1; i >= 0; i--) {\n                result.add(array.get(i));\n           \
    \ }\n        } else {\n            for (int i = 0; i < array.size(); i++) {\n\
    \                result.add(array.get(i));\n            }\n        }\n       \
    \ return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        // Write your code here\n        // To print results to the\
    \ standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.size() == 2) {\n           \
    \ if (array.get(0) > array.get(1)) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n            } else {\n           \
    \     result.add(array.get(0));\n                result.add(array.get(1));\n \
    \           }\n            return result;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            for (int i = array.size()\
    \ - 1; i >= 0; i--) {\n                result.add(array.get(i));\n           \
    \ }\n        } else {\n            for (int i = 0; i < array.size(); i++) {\n\
    \                result.add(array.get(i));\n            }\n        }\n       \
    \ return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;", "        ArrayList<Long> result = new ArrayList<Long>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            for (int i = array.size() - 1; i >= 0; i--) {\n             \
    \   result.add(array.get(i));\n            }\n        } else {\n            for\
    \ (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (array.size() == 0) {\n            return\
    \ result;\n        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n\
    \                result.add(array.get(i));\n            }\n        } else {\n\
    \            for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;", "        // Write your code\
    \ here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        return array;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;",
  '        return array;', "        // Write your code here\n        // To print results\
    \ to the standard output you can use System.out.println()\n        // Example:\
    \ System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if (array.get(0) > array.get(1)) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n            } else {\n           \
    \     result.add(array.get(0));\n                result.add(array.get(1));\n \
    \           }\n            return result;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            for (int i = array.size()\
    \ - 1; i >= 0; i--) {\n                result.add(array.get(i));\n           \
    \ }\n        } else {\n            for (int i = 0; i < array.size(); i++) {\n\
    \                result.add(array.get(i));\n            }\n        }\n       \
    \ return result;"]
stop_tokens:
- "\n    }\n"

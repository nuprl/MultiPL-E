name: HumanEval_101_words_string
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You will be given a string of words separated by commas\
  \ or spaces. Your task is\n    // to split the string into words and return an array\
  \ of the words.\n    // For example:\n    // >>> wordsString((\"Hi, my name is John\"\
  ))\n    // (new ArrayList<String>(Arrays.asList((String)\"Hi\", (String)\"my\",\
  \ (String)\"name\", (String)\"is\", (String)\"John\")))\n    // >>> wordsString((\"\
  One, two, three, four, five, six\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
  One\", (String)\"two\", (String)\"three\", (String)\"four\", (String)\"five\", (String)\"\
  six\")))\n    public static ArrayList<String> wordsString(String s) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(wordsString((\"\
  Hi, my name is John\")).equals((new ArrayList<String>(Arrays.asList((String)\"Hi\"\
  , (String)\"my\", (String)\"name\", (String)\"is\", (String)\"John\")))));\n   \
  \ assert(wordsString((\"One, two, three, four, five, six\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
  One\", (String)\"two\", (String)\"three\", (String)\"four\", (String)\"five\", (String)\"\
  six\")))));\n    assert(wordsString((\"Hi, my name\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
  Hi\", (String)\"my\", (String)\"name\")))));\n    assert(wordsString((\"One,, two,\
  \ three, four, five, six,\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
  One\", (String)\"two\", (String)\"three\", (String)\"four\", (String)\"five\", (String)\"\
  six\")))));\n    assert(wordsString((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
  \    assert(wordsString((\"ahmed     , gamal\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
  ahmed\", (String)\"gamal\")))));\n    }\n\n}\n"
completions: ['        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[
    ,]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  "        ArrayList<String> words = new ArrayList<String>();\n        String[] wordsArray\
    \ = s.split(\"[, ]+\");\n        for (String word : wordsArray) {\n          \
    \  words.add(word);\n        }\n        return words;", '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  "        ArrayList<String> result = new ArrayList<String>();\n        String[] words\
    \ = s.split(\"\\\\s|,\");\n        for (String word : words) {\n            result.add(word);\n\
    \        }\n        return result;", "        String[] words = s.split(\"[, ]+\"\
    );\n        return new ArrayList<String>(Arrays.asList(words));", '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', "    \
    \    String[] words = s.split(\"[, ]+\");\n        return new ArrayList<String>(Arrays.asList(words));",
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("\\s|,")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("\\s|,")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("\\s|,")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("\\s|,")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("\\s|,")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[
    ,]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split(" |,")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', "        ArrayList<String>\
    \ words = new ArrayList<String>();\n        String[] wordsArray = s.split(\"[,\
    \ ]+\");\n        for (String word : wordsArray) {\n            words.add(word);\n\
    \        }\n        return words;", '        return new ArrayList<String>(Arrays.asList(s.split("[
    ,]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("\\s|,")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("\\s|,")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("\\s|,")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[
    ,]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("\\s|,")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("\\s|,")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("\\s|,")));', '        return new ArrayList<String>(Arrays.asList(s.split("[
    ,]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,\\s]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("\\s|,")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("\\s|,")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', "    \
    \    ArrayList<String> words = new ArrayList<String>();\n        String[] split\
    \ = s.split(\"[, ]+\");\n        for (String word : split) {\n            words.add(word);\n\
    \        }\n        return words;", '        return new ArrayList<String>(Arrays.asList(s.split("[
    ,]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("\\s|,")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', "        ArrayList<String> words = new ArrayList<String>();\n      \
    \  String[] wordsArray = s.split(\"[, ]+\");\n        for (String word : wordsArray)\
    \ {\n            words.add(word);\n        }\n        return words;", '        return
    new ArrayList<String>(Arrays.asList(s.split("\\s|,")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[
    ,]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,\\s]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("\\s*,\\s*")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("\\s|,")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("\\s|,")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("\\s|,")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("\\s|,")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[ ,]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  "        ArrayList<String> words = new ArrayList<String>();\n        String[] wordsArray\
    \ = s.split(\"[, ]+\");\n        for (String word : wordsArray) {\n          \
    \  words.add(word);\n        }\n        return words;", '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("\\s|,")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', "        ArrayList<String>\
    \ words = new ArrayList<String>();\n        String[] wordsArray = s.split(\"[,\
    \ ]+\");\n        for (String word : wordsArray) {\n            words.add(word);\n\
    \        }\n        return words;", '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("\\s*(,|\\s)\\s*")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[ ,]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[ ,]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));',
  '        return new ArrayList<String>(Arrays.asList(s.split("\\s|,")));', '        return
    new ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new
    ArrayList<String>(Arrays.asList(s.split("[, ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[,
    ]+")));', '        return new ArrayList<String>(Arrays.asList(s.split("[, ]+")));']
stop_tokens:
- "\n    }\n"

name: HumanEval_155_even_odd_count
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given an integer. return a tuple that has the number of\
  \ even and odd digits respectively.\n    // Example:\n    // >>> evenOddCount((-12l))\n\
  \    // (Pair.with(1l, 1l))\n    // >>> evenOddCount((123l))\n    // (Pair.with(1l,\
  \ 2l))\n    public static Pair<Long, Long> evenOddCount(long num) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
  \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l,\
  \ 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n  \
  \  assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l,\
  \ 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l, 3l))));\n  \
  \  assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\n}\n"
completions: ["        long even = 0;\n        long odd = 0;\n        while (num !=\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 10;\n  \
    \      }\n        return Pair.with(even, odd);", "        // Fill in your code\
    \ here\n        return null;", "        // Write your code here.\n        return\
    \ null;", "        long even = 0;\n        long odd = 0;\n        while (num !=\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 10;\n  \
    \      }\n        return Pair.with(even, odd);", "        // Your code here\n\
    \        return null;", "        // Write your code here\n        return null;",
  "        long evenCount = 0;\n        long oddCount = 0;\n        while (num !=\
    \ 0) {\n            long digit = num % 10;\n            if (digit % 2 == 0) {\n\
    \                evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            num /= 10;\n        }\n        return Pair.with(evenCount,\
    \ oddCount);", "        long even = 0;\n        long odd = 0;\n        while (num\
    \ != 0) {\n            if (num % 2 == 0) {\n                even++;\n        \
    \    } else {\n                odd++;\n            }\n            num /= 10;\n\
    \        }\n        return Pair.with(even, odd);", '        return null;', '        return
    null;', "        long even = 0;\n        long odd = 0;\n        while (num !=\
    \ 0) {\n            if (num % 2 == 0) {\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n            num /= 10;\n  \
    \      }\n        return Pair.with(even, odd);", '        return null;', "   \
    \     // Write your code here\n        return null;", "        // Write your code\
    \ here\n        return null;", "        long even = 0;\n        long odd = 0;\n\
    \        while (num != 0) {\n            if (num % 2 == 0) {\n               \
    \ even++;\n            } else {\n                odd++;\n            }\n     \
    \       num /= 10;\n        }\n        return Pair.with(even, odd);", "      \
    \  long even = 0;\n        long odd = 0;\n        while (num != 0) {\n       \
    \     if (num % 2 == 0) {\n                even++;\n            } else {\n   \
    \             odd++;\n            }\n            num /= 10;\n        }\n     \
    \   return Pair.with(even, odd);", "        long even = 0;\n        long odd =\
    \ 0;\n        while (num != 0) {\n            long digit = num % 10;\n       \
    \     if (digit % 2 == 0) {\n                even++;\n            } else {\n \
    \               odd++;\n            }\n            num /= 10;\n        }\n   \
    \     return Pair.with(even, odd);", "        // Write your code here\n      \
    \  return null;", "        // Write your code here\n        return null;", " \
    \       // Write your code here\n        return null;"]
stop_tokens:
- "\n    }\n"

language: java
name: HumanEval_97_multiply
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a%10)*(b%10);\n\
    \    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp08ti56dy.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a%10)*(b%10);\n\
    \    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp08ti56dy.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Complete the function that takes two integers and returns\
    \ \n    // the product of their unit digits.\n    // Assume the input is always\
    \ valid.\n    // Examples:\n    // >>> multiply((148l), (412l))\n    // (16l)\n\
    \    // >>> multiply((19l), (28l))\n    // (72l)\n    // >>> multiply((2020l),\
    \ (1851l))\n    // (0l)\n    // >>> multiply((14l), (-15l))\n    // (20l)\n  \
    \  public static long multiply(long a, long b) {\n        return (a % 10) * (b\
    \ % 10);\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l),\
    \ (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l),\
    \ (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l),\
    \ (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l),\
    \ (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oh4092n.java:28)\n"
  stdout: ''

language: java
name: HumanEval_146_specialFilter
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10).filter(x -> x % 2\
    \ == 1).filter(x -> x % 10 == 1 || x % 10 == 3 || x % 10 == 5 || x % 10 == 7 ||\
    \ x % 10 == 9).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7e_s13ss.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        // Write your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvgq0n6s6.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && (x\
    \ % 10 == 1 || x % 10 == 3 || x % 10 == 5 || x % 10 == 7 || x % 10 == 9)).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq6yt0y61.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && (x\
    \ % 10) % 2 == 1).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi7v8l2jv.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfbzimsr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfbzimsr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        // Write your code here\n        return 0l;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptz2rxu1p.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && (x\
    \ / 10) % 2 == 1).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp4rmscdh.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && (x % 10) % 2 ==\
    \ 1 && (x / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwlvdd4n.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && (x % 10) % 2 ==\
    \ 1 && (x / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwlvdd4n.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && (n % 10) % 2 ==\
    \ 1 && (n / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplf8raylp.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfbzimsr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(Problem::isGreaterThan10).filter(Problem::isFirstAndLastDigitOdd).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi_18y3og.java:18: error: invalid method reference\n        return\
    \ nums.stream().filter(Problem::isGreaterThan10).filter(Problem::isFirstAndLastDigitOdd).count();\n\
    \                                    ^\n  cannot find symbol\n    symbol:   method\
    \ isGreaterThan10(T)\n    location: class Problem\n  where T is a type-variable:\n\
    \    T extends Object declared in interface Stream\n/tmp/tmpi_18y3og.java:18:\
    \ error: invalid method reference\n        return nums.stream().filter(Problem::isGreaterThan10).filter(Problem::isFirstAndLastDigitOdd).count();\n\
    \                                                                     ^\n  cannot\
    \ find symbol\n    symbol:   method isFirstAndLastDigitOdd()\n    location: class\
    \ Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && (x % 10) % 2 ==\
    \ 1 && (x / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwlvdd4n.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfbzimsr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        // Write your code here\n        // To print results to the\
    \ standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp09kibq83.java:25)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && (x % 10) % 2 ==\
    \ 1 && (x / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwlvdd4n.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && (x\
    \ / 10) % 2 == 1).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp4rmscdh.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfbzimsr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && (x % 10) % 2 ==\
    \ 1 && (x / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwlvdd4n.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        // Write your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvgq0n6s6.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        long count = 0;\n        for (long num : nums) {\n        \
    \    if (num > 10) {\n                long first = num % 10;\n               \
    \ long last = num;\n                while (last >= 10) {\n                   \
    \ last /= 10;\n                }\n                if (first % 2 != 0 && last %\
    \ 2 != 0) {\n                    count++;\n                }\n            }\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && (n\
    \ / 10) % 2 == 1).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1t1da24c.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10).filter(x -> x % 2\
    \ == 1).filter(x -> x / 10 % 2 == 1).filter(x -> x % 10 == 1 || x % 10 == 3 ||\
    \ x % 10 == 5 || x % 10 == 7 || x % 10 == 9).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpft4vaf5m.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && (n\
    \ / 10) % 2 == 1).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1t1da24c.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(num -> num > 10 && num % 2 == 1\
    \ && num / 10 % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3dra_zog.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && (n % 2 == 1) &&\
    \ (n / 10 % 2 == 1)).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm3l0on2l.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && (x % 10) % 2 ==\
    \ 1 && (x / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwlvdd4n.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        long count = 0;\n        for (long num : nums) {\n        \
    \    if (num > 10) {\n                String numStr = Long.toString(num);\n  \
    \              if (numStr.charAt(0) % 2 != 0 && numStr.charAt(numStr.length()\
    \ - 1) % 2 != 0) {\n                    count++;\n                }\n        \
    \    }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && (n\
    \ / 10) % 2 == 1).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1t1da24c.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && (n\
    \ / 10) % 2 == 1).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1t1da24c.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && (x % 10) % 2 ==\
    \ 1 && (x / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwlvdd4n.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10).filter(x -> x % 2\
    \ == 1).filter(x -> {\n            long firstDigit = x;\n            while (firstDigit\
    \ >= 10) {\n                firstDigit /= 10;\n            }\n            long\
    \ lastDigit = x % 10;\n            return firstDigit % 2 == 1 && lastDigit % 2\
    \ == 1;\n        }).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && (x % 10) % 2 ==\
    \ 1 && (x / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwlvdd4n.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        // Write your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvgq0n6s6.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        // Write your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvgq0n6s6.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        long count = 0;\n        for (long num : nums) {\n        \
    \    if (num > 10) {\n                String numString = Long.toString(num);\n\
    \                if (numString.charAt(0) % 2 != 0 && numString.charAt(numString.length()\
    \ - 1) % 2 != 0) {\n                    count++;\n                }\n        \
    \    }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        long count = 0;\n        for (long num : nums) {\n        \
    \    if (num > 10 && (num % 2 != 0) && (num % 10 != 0)) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd39wzxoc.java:29)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && (x % 10) % 2 ==\
    \ 1 && (x / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwlvdd4n.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        long count = 0;\n        for (long num : nums) {\n        \
    \    if (num > 10 && isFirstAndLastDigitOdd(num)) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6wkky41t.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && isFirstAndLastDigitOdd(num)) {\n                            ^\n  symbol:\
    \   method isFirstAndLastDigitOdd(long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && (x % 10) % 2 ==\
    \ 1 && (x / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwlvdd4n.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && (x % 10) % 2 ==\
    \ 1 && (x / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwlvdd4n.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && (x % 10) % 2 ==\
    \ 1 && (x / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwlvdd4n.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && (x\
    \ / 10) % 2 == 1).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp4rmscdh.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        long count = 0;\n        for (long num : nums) {\n        \
    \    if (num > 10) {\n                long firstDigit = num % 10;\n          \
    \      long lastDigit = num / 10;\n                if (firstDigit % 2 != 0 &&\
    \ lastDigit % 2 != 0) {\n                    count++;\n                }\n   \
    \         }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1r6kxc6a.java:33)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(num -> num > 10 && num % 2 == 1\
    \ && num % 10 == 1).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_qj7jujv.java:22)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && (n % 10) % 2 ==\
    \ 1 && (n / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplf8raylp.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && (n % 10) % 2 ==\
    \ 1 && (n / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplf8raylp.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        long count = 0;\n        for (Long num : nums) {\n        \
    \    if (num > 10 && num % 2 == 1 && num % 10 == 1) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxsgs5urp.java:28)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && (n % 2 != 0) &&\
    \ (n % 10 != 0)).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8qrcdik9.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfbzimsr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfbzimsr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfbzimsr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        long count = 0;\n        for (long num : nums) {\n        \
    \    if (num > 10) {\n                long firstDigit = num % 10;\n          \
    \      long lastDigit = num;\n                while (lastDigit > 10) {\n     \
    \               lastDigit /= 10;\n                }\n                if (firstDigit\
    \ % 2 != 0 && lastDigit % 2 != 0) {\n                    count++;\n          \
    \      }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj60yznfn.java:36)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfbzimsr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10).filter(n -> n % 2\
    \ == 1).filter(n -> n % 10 == 1 || n % 10 == 3 || n % 10 == 5 || n % 10 == 7 ||\
    \ n % 10 == 9).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_4lwv3mu.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfbzimsr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && (x % 10) % 2 ==\
    \ 1 && (x / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwlvdd4n.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && (n % 2 == 1) &&\
    \ (n / 10 % 2 == 1)).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm3l0on2l.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        // Write your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvgq0n6s6.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        // Write your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvgq0n6s6.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && (x % 10) % 2 ==\
    \ 1 && (x / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwlvdd4n.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && (x\
    \ % 10) % 2 == 1).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi7v8l2jv.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && (x\
    \ / 10) % 2 == 1).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp4rmscdh.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        // Write your code here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvgq0n6s6.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4tgmdtc.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && (x % 10) % 2 ==\
    \ 1 && (x / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwlvdd4n.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && (n\
    \ / 10) % 2 == 1).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1t1da24c.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfbzimsr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && n % 2 == 1 && n\
    \ / 10 % 2 == 1).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0xnro.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && (x % 10) % 2 ==\
    \ 1 && (x / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwlvdd4n.java:23)\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        long count = 0;\n        for (long num : nums) {\n        \
    \    if (num > 10 && isFirstDigitOdd(num) && isLastDigitOdd(num)) {\n        \
    \        count++;\n            }\n        }\n        return count;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4qr6mri9.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && isFirstDigitOdd(num) && isLastDigitOdd(num)) {\n                   \
    \         ^\n  symbol:   method isFirstDigitOdd(long)\n  location: class Problem\n\
    /tmp/tmp4qr6mri9.java:20: error: cannot find symbol\n            if (num > 10\
    \ && isFirstDigitOdd(num) && isLastDigitOdd(num)) {\n                        \
    \                            ^\n  symbol:   method isLastDigitOdd(long)\n  location:\
    \ class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659799829
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 == 1).count();\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjopvy759.java:22)\n"
  stdout: ''

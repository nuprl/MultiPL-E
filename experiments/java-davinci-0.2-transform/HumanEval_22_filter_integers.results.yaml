language: java
name: HumanEval_22_filter_integers
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(x -> x instanceof Long).map(x -> (Long)x).collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1a2votdr.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(x -> x instanceof Long).map(x -> (Long)x).collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1a2votdr.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(x -> x instanceof Long).map(x -> (Long)x).collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1a2votdr.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(x -> x instanceof Long).map(x -> (Long)x).collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1a2votdr.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(x -> x instanceof Long).map(x -> (Long)x).collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1a2votdr.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return new ArrayList<Long>(values.stream().filter(x -> x instanceof Long).map(x\
    \ -> (Long)x).collect(Collectors.toList()));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795229
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(x -> x instanceof Long).map(x -> (Long)x).collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1a2votdr.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(x -> x instanceof Long).map(x -> (Long)x).collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1a2votdr.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(x -> x instanceof Long).map(x -> (Long)x).collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1a2votdr.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"a\"\
    , (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaxpv6le.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''

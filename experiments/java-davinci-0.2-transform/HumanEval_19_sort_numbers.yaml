name: HumanEval_19_sort_numbers
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
  \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
  \ 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted\
  \ from smallest to largest\n    // >>> sortNumbers((\"three one five\"))\n    //\
  \ (\"one three five\")\n    public static String sortNumbers(String numbers) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
  \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
  \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
  \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero four\
  \ five seven eight nine\")));\n    assert(sortNumbers((\"six five four three two\
  \ one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n}\n"
completions: ["        String[] nums = numbers.split(\" \");\n        int[] numsInt\
    \ = new int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n \
    \           switch (nums[i]) {\n                case \"zero\":\n             \
    \       numsInt[i] = 0;\n                    break;\n                case \"one\"\
    :\n                    numsInt[i] = 1;\n                    break;\n         \
    \       case \"two\":\n                    numsInt[i] = 2;\n                 \
    \   break;\n                case \"three\":\n                    numsInt[i] =\
    \ 3;\n                    break;\n                case \"four\":\n           \
    \         numsInt[i] = 4;\n                    break;\n                case \"\
    five\":\n                    numsInt[i] = 5;\n                    break;\n   \
    \             case \"six\":\n                    numsInt[i] = 6;\n           \
    \         break;\n                case \"seven\":\n                    numsInt[i]\
    \ = 7;\n                    break;\n                case \"eight\":\n        \
    \            numsInt[i] = 8;\n                    break;\n                case\
    \ \"nine\":\n                    numsInt[i] = 9;\n                    break;\n\
    \            }\n        }\n        Arrays.sort(numsInt);\n        String[] numsStr\
    \ = new String[numsInt.length];\n        for (int i = 0; i < numsInt.length; i++)\
    \ {\n            switch (numsInt[i]) {\n                case 0:\n            \
    \        numsStr[i] = \"zero\";\n                    break;\n                case\
    \ 1:\n                    numsStr[i] = \"one\";\n                    break;\n\
    \                case 2:\n                    numsStr[i] = \"two\";\n        \
    \            break;\n                case 3:\n                    numsStr[i] =\
    \ \"three\";\n                    break;\n                case 4:\n          \
    \          numsStr[i] = \"four\";\n                    break;\n              \
    \  case 5:\n                    numsStr[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    numsStr[i] = \"six\";\n        \
    \            break;\n                case 7:\n                    numsStr[i] =\
    \ \"seven\";\n                    break;\n                case 8:\n          \
    \          numsStr[", '        return "";', "        String[] nums = numbers.split(\"\
    \ \");\n        Arrays.sort(nums);\n        return String.join(\" \", nums);",
  "        String[] nums = numbers.split(\" \");\n        int[] numsInt = new int[nums.length];\n\
    \        for (int i = 0; i < nums.length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    numsInt[i] = 0;\n   \
    \                 break;\n                case \"one\":\n                    numsInt[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          numsInt[i] = 2;\n                    break;\n                case \"\
    three\":\n                    numsInt[i] = 3;\n                    break;\n  \
    \              case \"four\":\n                    numsInt[i] = 4;\n         \
    \           break;\n                case \"five\":\n                    numsInt[i]\
    \ = 5;\n                    break;\n                case \"six\":\n          \
    \          numsInt[i] = 6;\n                    break;\n                case \"\
    seven\":\n                    numsInt[i] = 7;\n                    break;\n  \
    \              case \"eight\":\n                    numsInt[i] = 8;\n        \
    \            break;\n                case \"nine\":\n                    numsInt[i]\
    \ = 9;\n                    break;\n            }\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            switch (numsInt[i]) {\n                case\
    \ 0:\n                    sb.append(\"zero\");\n                    break;\n \
    \               case 1:\n                    sb.append(\"one\");\n           \
    \         break;\n                case 2:\n                    sb.append(\"two\"\
    );\n                    break;\n                case 3:\n                    sb.append(\"\
    three\");\n                    break;\n                case 4:\n             \
    \       sb.append(\"four\");\n                    break;\n                case\
    \ 5:\n                    sb.append(\"five\");\n                    break;\n \
    \               case 6:\n                    sb.append(\"six\");\n           \
    \         break;\n                case 7:\n                    sb.append(\"seven\"\
    );\n                    break;\n                case 8:\n                    sb.append(\"\
    eight\");\n                    break;\n                case 9:\n             \
    \       sb.append(\"nine\");\n                    break;\n            }\n    \
    \       ", "        String[] nums = numbers.split(\" \");\n        int[] numsInt\
    \ = new int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n \
    \           switch (nums[i]) {\n                case \"zero\":\n             \
    \       numsInt[i] = 0;\n                    break;\n                case \"one\"\
    :\n                    numsInt[i] = 1;\n                    break;\n         \
    \       case \"two\":\n                    numsInt[i] = 2;\n                 \
    \   break;\n                case \"three\":\n                    numsInt[i] =\
    \ 3;\n                    break;\n                case \"four\":\n           \
    \         numsInt[i] = 4;\n                    break;\n                case \"\
    five\":\n                    numsInt[i] = 5;\n                    break;\n   \
    \             case \"six\":\n                    numsInt[i] = 6;\n           \
    \         break;\n                case \"seven\":\n                    numsInt[i]\
    \ = 7;\n                    break;\n                case \"eight\":\n        \
    \            numsInt[i] = 8;\n                    break;\n                case\
    \ \"nine\":\n                    numsInt[i] = 9;\n                    break;\n\
    \            }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++)\
    \ {\n            switch (numsInt[i]) {\n                case 0:\n            \
    \        sb.append(\"zero\");\n                    break;\n                case\
    \ 1:\n                    sb.append(\"one\");\n                    break;\n  \
    \              case 2:\n                    sb.append(\"two\");\n            \
    \        break;\n                case 3:\n                    sb.append(\"three\"\
    );\n                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           ", "        String[]\
    \ nums = numbers.split(\" \");\n        int[] numsInt = new int[nums.length];\n\
    \        for (int i = 0; i < nums.length; i++) {\n            numsInt[i] = Integer.parseInt(nums[i]);\n\
    \        }\n        Arrays.sort(numsInt);\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < numsInt.length; i++) {\n            sb.append(numsInt[i]);\n\
    \            if (i < numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();", "        String[] nums\
    \ = numbers.split(\" \");\n        Arrays.sort(nums);\n        return String.join(\"\
    \ \", nums);", "        String[] nums = numbers.split(\" \");\n        int[] numsInt\
    \ = new int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n \
    \           numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String[] numsSorted = new String[nums.length];\n        for (int i =\
    \ 0; i < nums.length; i++) {\n            numsSorted[i] = intToNum(numsInt[i]);\n\
    \        }\n        return String.join(\" \", numsSorted);", "        String[]\
    \ nums = numbers.split(\" \");\n        int[] numsInt = new int[nums.length];\n\
    \        for (int i = 0; i < nums.length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    numsInt[i] = 0;\n   \
    \                 break;\n                case \"one\":\n                    numsInt[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          numsInt[i] = 2;\n                    break;\n                case \"\
    three\":\n                    numsInt[i] = 3;\n                    break;\n  \
    \              case \"four\":\n                    numsInt[i] = 4;\n         \
    \           break;\n                case \"five\":\n                    numsInt[i]\
    \ = 5;\n                    break;\n                case \"six\":\n          \
    \          numsInt[i] = 6;\n                    break;\n                case \"\
    seven\":\n                    numsInt[i] = 7;\n                    break;\n  \
    \              case \"eight\":\n                    numsInt[i] = 8;\n        \
    \            break;\n                case \"nine\":\n                    numsInt[i]\
    \ = 9;\n                    break;\n            }\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            switch (numsInt[i]) {\n                case\
    \ 0:\n                    sb.append(\"zero\");\n                    break;\n \
    \               case 1:\n                    sb.append(\"one\");\n           \
    \         break;\n                case 2:\n                    sb.append(\"two\"\
    );\n                    break;\n                case 3:\n                    sb.append(\"\
    three\");\n                    break;\n                case 4:\n             \
    \       sb.append(\"four\");\n                    break;\n                case\
    \ 5:\n                    sb.append(\"five\");\n                    break;\n \
    \               case 6:\n                    sb.append(\"six\");\n           \
    \         break;\n                case 7:\n                    sb.append(\"seven\"\
    );\n                    break;\n                case 8:\n                    sb.append(\"\
    eight\");\n                    break;\n                case 9:\n             \
    \       sb.append(\"nine\");\n                    break;\n            }\n    \
    \       ", "        String[] nums = numbers.split(\" \");\n        int[] numsInt\
    \ = new int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n \
    \           numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();", "        String[] nums = numbers.split(\"\
    \ \");\n        Arrays.sort(nums);\n        return String.join(\" \", nums);",
  "        String[] nums = numbers.split(\" \");\n        int[] numsInt = new int[nums.length];\n\
    \        for (int i = 0; i < nums.length; i++) {\n            numsInt[i] = numToInt(nums[i]);\n\
    \        }\n        Arrays.sort(numsInt);\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();", "        int[] nums\
    \ = new int[10];\n        String[] numsStr = numbers.split(\" \");\n        for\
    \ (String num : numsStr) {\n            switch (num) {\n                case \"\
    zero\":\n                    nums[0]++;\n                    break;\n        \
    \        case \"one\":\n                    nums[1]++;\n                    break;\n\
    \                case \"two\":\n                    nums[2]++;\n             \
    \       break;\n                case \"three\":\n                    nums[3]++;\n\
    \                    break;\n                case \"four\":\n                \
    \    nums[4]++;\n                    break;\n                case \"five\":\n\
    \                    nums[5]++;\n                    break;\n                case\
    \ \"six\":\n                    nums[6]++;\n                    break;\n     \
    \           case \"seven\":\n                    nums[7]++;\n                \
    \    break;\n                case \"eight\":\n                    nums[8]++;\n\
    \                    break;\n                case \"nine\":\n                \
    \    nums[9]++;\n                    break;\n            }\n        }\n      \
    \  StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < 10; i++)\
    \ {\n            for (int j = 0; j < nums[i]; j++) {\n                switch (i)\
    \ {\n                    case 0:\n                        sb.append(\"zero \"\
    );\n                        break;\n                    case 1:\n            \
    \            sb.append(\"one \");\n                        break;\n          \
    \          case 2:\n                        sb.append(\"two \");\n           \
    \             break;\n                    case 3:\n                        sb.append(\"\
    three \");\n                        break;\n                    case 4:\n    \
    \                    sb.append(\"four \");\n                        break;\n \
    \                   case 5:\n                        sb.append(\"five \");\n \
    \                       break;\n                    case 6:\n                \
    \        sb.append(\"six \");\n                        break;\n              \
    \      case 7:\n                        sb.append(\"seven \");\n             \
    \           break;\n                    case 8:\n                        sb.append(\"\
    eight \");\n                        break;\n                    case 9:\n    \
    \                    sb.append(\"nine \");\n                        break;\n \
    \               }\n            }\n        }\n        return sb.toString().trim();",
  "        String[] nums = numbers.split(\" \");\n        int[] nums_int = new int[nums.length];\n\
    \        for (int i = 0; i < nums.length; i++) {\n            nums_int[i] = Integer.parseInt(nums[i]);\n\
    \        }\n        Arrays.sort(nums_int);\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < nums_int.length; i++) {\n            sb.append(nums_int[i]);\n\
    \            if (i != nums_int.length - 1) {\n                sb.append(\" \"\
    );\n            }\n        }\n        return sb.toString();", "        String[]\
    \ nums = numbers.split(\" \");\n        int[] numsInt = new int[nums.length];\n\
    \        for (int i = 0; i < nums.length; i++) {\n            numsInt[i] = numToInt(nums[i]);\n\
    \        }\n        Arrays.sort(numsInt);\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();", "        // TODO: Implement\
    \ me\n        return \"\";", "        String[] nums = numbers.split(\" \");\n\
    \        Arrays.sort(nums);\n        return String.join(\" \", nums);", "    \
    \    String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n     \
    \   return String.join(\" \", nums);", "        String[] nums = numbers.split(\"\
    \ \");\n        Arrays.sort(nums);\n        return String.join(\" \", nums);",
  "        String[] nums = numbers.split(\" \");\n        int[] numsInt = new int[nums.length];\n\
    \        for (int i = 0; i < nums.length; i++) {\n            numsInt[i] = convert(nums[i]);\n\
    \        }\n        Arrays.sort(numsInt);\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();"]
stop_tokens:
- "\n    }\n"

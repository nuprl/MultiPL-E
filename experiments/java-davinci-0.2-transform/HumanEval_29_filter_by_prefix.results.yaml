language: java
name: HumanEval_29_filter_by_prefix
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bcd\", (String)\"\
    cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"array\")))\n    public static ArrayList<String> filterByPrefix(ArrayList<String>\
    \ strings, String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''

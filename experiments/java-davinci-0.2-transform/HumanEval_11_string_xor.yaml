name: HumanEval_11_string_xor
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Input are two strings a and b consisting only of 1s and\
  \ 0s.\n    // Perform binary XOR on these inputs and return result also as a string.\n\
  \    // >>> stringXor((\"010\"), (\"110\"))\n    // (\"100\")\n    public static\
  \ String stringXor(String a, String b) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(stringXor((\"\
  111000\"), (\"101010\")).equals((\"010010\")));\n    assert(stringXor((\"1\"), (\"\
  1\")).equals((\"0\")));\n    assert(stringXor((\"0101\"), (\"0000\")).equals((\"\
  0101\")));\n    }\n\n}\n"
completions: ["        // Your code here\n        return null;", "        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            int ai = a.charAt(i) - '0';\n            int\
    \ bi = b.charAt(i) - '0';\n            sb.append(ai ^ bi);\n        }\n      \
    \  return sb.toString();", "        // Your code here.\n        return \"\";",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n     \
    \   return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                sb.append(\"0\");\n            } else {\n  \
    \              sb.append(\"1\");\n            }\n        }\n        return sb.toString();",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        StringBuilder sb = new StringBuilder();\n        for\
    \ (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) == b.charAt(i))\
    \ {\n                sb.append(\"0\");\n            } else {\n               \
    \ sb.append(\"1\");\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? \"0\" : \"1\");\n        }\n        return sb.toString();",
  "        int n = a.length();\n        int m = b.length();\n        if (n != m) {\n\
    \            throw new IllegalArgumentException(\"Strings must be of equal length\"\
    );\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int\
    \ i = 0; i < n; i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n      \
    \          sb.append(\"0\");\n            } else {\n                sb.append(\"\
    1\");\n            }\n        }\n        return sb.toString();", '        return
    "";', "        StringBuilder sb = new StringBuilder();\n        for (int i = 0;\
    \ i < a.length(); i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0'\
    \ : '1');\n        }\n        return sb.toString();", "        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n    \
    \    return sb.toString();", '        return "";', "        StringBuilder sb =\
    \ new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n     \
    \       sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n      \
    \  return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? \"0\" : \"1\");\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"\
    0\");\n            } else {\n                sb.append(\"1\");\n            }\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ ^ b.charAt(i));\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return\
    \ sb.toString();", "        // TODO: Implement this function\n        return null;",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"\
    0\");\n            } else {\n                sb.append(\"1\");\n            }\n\
    \        }\n        return sb.toString();"]
stop_tokens:
- "\n    }\n"

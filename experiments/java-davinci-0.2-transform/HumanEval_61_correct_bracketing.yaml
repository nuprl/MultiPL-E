name: HumanEval_61_correct_bracketing
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
  \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
  \ correctBracketing((\"(\"))\n    // (false)\n    // >>> correctBracketing((\"()\"\
  ))\n    // (true)\n    // >>> correctBracketing((\"(()())\"))\n    // (true)\n \
  \   // >>> correctBracketing((\")(()\"))\n    // (false)\n    public static boolean\
  \ correctBracketing(String brackets) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(correctBracketing((\"\
  ()\")) == (true));\n    assert(correctBracketing((\"(()())\")) == (true));\n   \
  \ assert(correctBracketing((\"()()(()())()\")) == (true));\n    assert(correctBracketing((\"\
  ()()((()()())())(()()(()))\")) == (true));\n    assert(correctBracketing((\"((()())))\"\
  )) == (false));\n    assert(correctBracketing((\")(()\")) == (false));\n    assert(correctBracketing((\"\
  (\")) == (false));\n    assert(correctBracketing((\"((((\")) == (false));\n    assert(correctBracketing((\"\
  )\")) == (false));\n    assert(correctBracketing((\"(()\")) == (false));\n    assert(correctBracketing((\"\
  ()()(()())())(()\")) == (false));\n    assert(correctBracketing((\"()()(()())()))()\"\
  )) == (false));\n    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"

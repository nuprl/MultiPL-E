name: HumanEval_122_add_elements
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a non-empty array of integers arr and an integer k,\
  \ return\n    // the sum of the elements with at most two digits from the first\
  \ k elements of arr.\n    // Example:\n    // >>> addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
  \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
  \ (4l))\n    // (24l)\n    // Constraints:\n    // 1. 1 <= len(arr) <= 100\n   \
  \ // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long> arr,\
  \ long k) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(addElements((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
  \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
  \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l, (long)5l,\
  \ (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
  \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
  \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
  \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
  \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
  \ (1l)) == (1l));\n    }\n\n}\n"
completions: ["        long sum = 0;\n        for (int i = 0; i < k; i++) {\n    \
    \        if (arr.get(i) < 100) {\n                sum += arr.get(i);\n       \
    \     }\n        }\n        return sum;", "        long sum = 0;\n        for\
    \ (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n           \
    \     sum += arr.get(i);\n            }\n        }\n        return sum;", '        return
    arr.stream().filter(x -> x < 100).limit(k).mapToLong(x -> x).sum();', "      \
    \  long sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l,
    (x, y) -> x + y);', "        long sum = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < k; i++) {\n            long n = arr.get(i);\n       \
    \     if (n < 100) {\n                sum += n;\n            }\n        }\n  \
    \      return sum;", '        return arr.stream().limit(k).filter(x -> x < 100).mapToLong(x
    -> x).sum();', '        return 0;', '        return arr.stream().limit(k).filter(x
    -> x < 100).mapToLong(x -> x).sum();', '        return arr.stream().limit(k).filter(x
    -> x < 100).reduce(0l, (x, y) -> x + y);', '        return arr.stream().limit(k).filter(x
    -> x < 100).mapToLong(x -> x).sum();', "        long sum = 0;\n        for (int\
    \ i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n                sum\
    \ += arr.get(i);\n            }\n        }\n        return sum;", '        return
    arr.stream().limit(k).filter(x -> x < 100).mapToLong(x -> x).sum();', '        return
    arr.stream().limit(k).filter(x -> x < 100).mapToLong(x -> x).sum();', '        return
    arr.stream().limit(k).filter(x -> x < 100).reduce(0l, (x, y) -> x + y);', "  \
    \      long sum = 0;\n        for (int i = 0; i < k; i++) {\n            long\
    \ num = arr.get(i);\n            if (num < 100) {\n                sum += num;\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n    \
    \            sum += arr.get(i);\n            }\n        }\n        return sum;",
  '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l, (x, y) ->
    x + y);', "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n    \
    \        long num = arr.get(i);\n            if (num < 100) {\n              \
    \  sum += num;\n            }\n        }\n        return sum;", '        return
    arr.stream().filter(x -> x < 100).limit(k).mapToLong(x -> x).sum();', "      \
    \  long sum = 0;\n        for (int i = 0; i < k; i++) {\n            long n =\
    \ arr.get(i);\n            if (n < 100) {\n                sum += n;\n       \
    \     }\n        }\n        return sum;", '        return arr.stream().limit(k).filter(x
    -> x < 100).mapToLong(x -> x).sum();', "        long sum = 0;\n        for (int\
    \ i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n                sum\
    \ += arr.get(i);\n            }\n        }\n        return sum;", "        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", '        return arr.stream().limit(k).filter(x -> x < 100).mapToLong(x
    -> x).sum();', '        return arr.stream().limit(k).filter(x -> x < 100).mapToLong(x
    -> x).sum();', "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n   \
    \         }\n        }\n        return sum;", '        return arr.stream().limit(k).filter(x
    -> x < 100).reduce(0l, (x, y) -> x + y);', "        long sum = 0;\n        for\
    \ (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n           \
    \     sum += arr.get(i);\n            }\n        }\n        return sum;", '        return
    arr.stream().limit(k).filter(x -> x < 100).reduce(0l, (x, y) -> x + y);', '        return
    arr.stream().filter(x -> x < 100).limit(k).mapToLong(x -> x).sum();', "      \
    \  long result = 0;\n        for (int i = 0; i < k; i++) {\n            long num\
    \ = arr.get(i);\n            if (num < 100) {\n                result += num;\n\
    \            }\n        }\n        return result;", "        long sum = 0;\n \
    \       for (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n \
    \               sum += arr.get(i);\n            }\n        }\n        return sum;",
  '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l, (x, y) ->
    x + y);', "        long result = 0l;\n        for (int i = 0; i < k; i++) {\n\
    \            long n = arr.get(i);\n            if (n < 100) {\n              \
    \  result += n;\n            }\n        }\n        return result;", "        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            long n = arr.get(i);\n\
    \            if (n < 100) {\n                sum += n;\n            }\n      \
    \  }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i\
    \ < k; i++) {\n            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < k; i++) {\n            long num = arr.get(i);\n     \
    \       if (num < 100) {\n                sum += num;\n            }\n       \
    \ }\n        return sum;", '        return arr.stream().filter(x -> x < 100).limit(k).mapToLong(x
    -> x).sum();', '        return arr.stream().limit(k).filter(x -> x < 100).mapToLong(x
    -> x).sum();', '        return arr.stream().limit(k).filter(x -> x < 100).mapToLong(x
    -> x).sum();', '        return 0;', '        return arr.stream().limit(k).filter(x
    -> x < 100).reduce(0l, (x, y) -> x + y);', "        long sum = 0;\n        for\
    \ (int i = 0; i < k; i++) {\n            long num = arr.get(i);\n            if\
    \ (num < 100) {\n                sum += num;\n            }\n        }\n     \
    \   return sum;", "        long sum = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n\
    \            }\n        }\n        return sum;", '        return arr.stream().limit(k).filter(x
    -> x < 100).reduce(0l, (x, y) -> x + y);', '        return arr.stream().limit(k).filter(x
    -> x < 100).mapToLong(x -> x).sum();', '        return arr.stream().limit(k).filter(x
    -> x < 100).reduce(0l, (x, y) -> x + y);', "        long sum = 0;\n        for\
    \ (int i = 0; i < k; i++) {\n            long num = arr.get(i);\n            if\
    \ (num < 100) {\n                sum += num;\n            }\n        }\n     \
    \   return sum;", "        long sum = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < k; i++) {\n            long num = arr.get(i);\n     \
    \       if (num < 100) {\n                sum += num;\n            }\n       \
    \ }\n        return sum;", '        return arr.stream().limit(k).filter(x -> x
    < 100).mapToLong(Long::longValue).sum();', '        return arr.stream().limit(k).filter(x
    -> x < 100).mapToLong(x -> x).sum();', '        return arr.stream().limit(k).filter(x
    -> x < 100).reduce(0l, (x, y) -> x + y);', "        long sum = 0;\n        for\
    \ (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n           \
    \     sum += arr.get(i);\n            }\n        }\n        return sum;", '        return
    arr.stream().limit(k).filter(x -> x < 100).mapToLong(x -> x).sum();', '        return
    arr.stream().filter(x -> x < 100).limit(k).mapToLong(x -> x).sum();', "      \
    \  long sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l,
    (x, y) -> x + y);', "        long sum = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n    \
    \            sum += arr.get(i);\n            }\n        }\n        return sum;",
  "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", "        long sum = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            long num = arr.get(i);\n            if (num < 100) {\n      \
    \          sum += num;\n            }\n        }\n        return sum;", "    \
    \    long sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", "        // Write your code here\n        return 0;", '        return
    arr.stream().limit(k).filter(x -> x < 100).mapToLong(x -> x).sum();', "      \
    \  long sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l,
    (x, y) -> x + y);', "        // Write your code here\n        return 0;", "  \
    \      // Write your code here\n        return 0;", '        return arr.stream().filter(x
    -> x < 100).limit(k).reduce(0l, (x, y) -> x + y);', '        return arr.stream().limit(k).filter(x
    -> x < 100).reduce(0l, (x, y) -> x + y);', "        long sum = 0;\n        for\
    \ (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n           \
    \     sum += arr.get(i);\n            }\n        }\n        return sum;", '        return
    arr.stream().limit(k).filter(x -> x < 100).reduce(0l, (x, y) -> x + y);', '        return
    arr.stream().limit(k).filter(x -> x < 100).reduce(0l, (x, y) -> x + y);', '        return
    arr.stream().filter(x -> x.toString().length() <= 2).limit(k).mapToLong(x -> x).sum();',
  "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", "        long sum = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            long num = arr.get(i);\n            if (num < 100) {\n      \
    \          sum += num;\n            }\n        }\n        return sum;", '        return
    arr.stream().filter(x -> x < 100).limit(k).reduce(0l, (x, y) -> x + y);', "  \
    \      long sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l,
    (x, y) -> x + y);', '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l,
    (x, y) -> x + y);', '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l,
    (x, y) -> x + y);', "        long sum = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < k; i++) {\n            long n = arr.get(i);\n       \
    \     if (n < 100) {\n                sum += n;\n            }\n        }\n  \
    \      return sum;", "        long sum = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n\
    \            }\n        }\n        return sum;", '        return arr.stream().limit(k).filter(x
    -> x < 100).mapToLong(x -> x).sum();', '        return arr.stream().limit(k).filter(x
    -> x < 100).mapToLong(x -> x).sum();', '        return arr.stream().limit(k).filter(x
    -> x < 100).reduce(0l, (x, y) -> x + y);', '        return arr.stream().limit(k).filter(x
    -> x < 100).reduce(0l, (a, b) -> a + b);', "        long sum = 0;\n        for\
    \ (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n           \
    \     sum += arr.get(i);\n            }\n        }\n        return sum;", "  \
    \      long sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", "        long sum = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < k; i++) {\n            long num = arr.get(i);\n     \
    \       if (num < 100) {\n                sum += num;\n            }\n       \
    \ }\n        return sum;", '        return arr.stream().limit(k).filter(x -> x
    < 100).reduce(0l, (x, y) -> x + y);', "        long sum = 0;\n        for (int\
    \ i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n                sum\
    \ += arr.get(i);\n            }\n        }\n        return sum;", '        return
    arr.stream().limit(k).filter(x -> x < 100).mapToLong(x -> x).sum();', "      \
    \  // Write your code here\n        return 0;", "        long sum = 0;\n     \
    \   for (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n     \
    \           sum += arr.get(i);\n            }\n        }\n        return sum;",
  '        return arr.stream().limit(k).filter(x -> x < 100).mapToLong(x -> x).sum();',
  "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n            long\
    \ num = arr.get(i);\n            if (num < 100) {\n                sum += num;\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < k; i++) {\n            long num = arr.get(i);\n     \
    \       if (num < 100) {\n                sum += num;\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ k; i++) {\n            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n\
    \            }\n        }\n        return sum;", '        return arr.stream().limit(k).filter(x
    -> x < 100).mapToLong(x -> x).sum();', "        long sum = 0;\n        for (int\
    \ i = 0; i < k; i++) {\n            long num = arr.get(i);\n            if (num\
    \ < 100) {\n                sum += num;\n            }\n        }\n        return\
    \ sum;", "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n     \
    \       if (arr.get(i) < 100) {\n                sum += arr.get(i);\n        \
    \    }\n        }\n        return sum;", "        long sum = 0;\n        for (int\
    \ i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n                sum\
    \ += arr.get(i);\n            }\n        }\n        return sum;", "        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", "        long sum = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < k; i++) {\n            String s = arr.get(i).toString();\n\
    \            if (s.length() <= 2) {\n                sum += arr.get(i);\n    \
    \        }\n        }\n        return sum;", '        return arr.stream().limit(k).filter(x
    -> x < 100).mapToLong(x -> x).sum();', "        long sum = 0;\n        for (int\
    \ i = 0; i < k; i++) {\n            long num = arr.get(i);\n            if (num\
    \ < 100) {\n                sum += num;\n            }\n        }\n        return\
    \ sum;", '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l,
    (x, y) -> x + y);', '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l,
    (x, y) -> x + y);', "        long sum = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n    \
    \            sum += arr.get(i);\n            }\n        }\n        return sum;",
  "        long sum = 0l;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100l) {\n                sum += arr.get(i);\n            }\n        }\n  \
    \      return sum;", "        // >>> arr.stream().filter(x -> x.toString().length()\
    \ <= 2).limit(k).mapToLong(x -> x).sum()\n        // (24l)\n        return arr.stream().filter(x\
    \ -> x.toString().length() <= 2).limit(k).mapToLong(x -> x).sum();", "       \
    \ long sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l,
    (x, y) -> x + y);', '        return arr.stream().limit(k).filter(x -> x < 100).mapToLong(x
    -> x).sum();', '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l,
    (a, b) -> a + b);', '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l,
    (x, y) -> x + y);', '        return arr.stream().limit(k).filter(x -> x < 100).mapToLong(x
    -> x).sum();', "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n   \
    \         }\n        }\n        return sum;", "        long sum = 0;\n       \
    \ for (int i = 0; i < k; i++) {\n            long num = arr.get(i);\n        \
    \    if (num < 100) {\n                sum += num;\n            }\n        }\n\
    \        return sum;", "        long sum = 0;\n        for (int i = 0; i < k;\
    \ i++) {\n            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n\
    \            }\n        }\n        return sum;", '        return arr.stream().limit(k).filter(x
    -> x < 100).mapToLong(x -> x).sum();', "        long sum = 0;\n        for (int\
    \ i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n                sum\
    \ += arr.get(i);\n            }\n        }\n        return sum;", "        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l,
    (a, b) -> a + b);', '        return arr.stream().filter(x -> x < 100).limit(k).reduce(0l,
    (x, y) -> x + y);', '        return arr.stream().limit(k).filter(x -> x < 100).mapToLong(x
    -> x).sum();', '        return 0;', "        // Your code here\n        return\
    \ 0;", "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n       \
    \     if (arr.get(i) < 100) {\n                sum += arr.get(i);\n          \
    \  }\n        }\n        return sum;", "        // Write your code here\n    \
    \    return 0;", '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l,
    (x, y) -> x + y);', '        return arr.stream().limit(k).filter(x -> x < 100).mapToLong(x
    -> x).sum();', "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            long n = arr.get(i);\n            if (n < 100) {\n              \
    \  sum += n;\n            }\n        }\n        return sum;", '        return
    arr.stream().filter(x -> x < 100).limit(k).mapToLong(x -> x).sum();', '        return
    arr.stream().limit(k).filter(x -> x < 100).reduce(0l, (x, y) -> x + y);', '        return
    arr.stream().limit(k).filter(x -> x < 100).mapToLong(x -> x).sum();', "      \
    \  long sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", "        long sum = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n    \
    \            sum += arr.get(i);\n            }\n        }\n        return sum;",
  "        long sum = 0;\n        for (long i = 0; i < k; i++) {\n            if (arr.get((int)i)\
    \ >= 10 && arr.get((int)i) < 100) {\n                sum += arr.get((int)i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n    \
    \            sum += arr.get(i);\n            }\n        }\n        return sum;",
  "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", "        long sum = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n    \
    \            sum += arr.get(i);\n            }\n        }\n        return sum;",
  '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l, (x, y) ->
    x + y);', '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l,
    (x, y) -> x + y);', '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l,
    (x, y) -> x + y);', "        // Your code here\n        return 0;", '        return
    0;', "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n         \
    \   if (arr.get(i) < 100) {\n                sum += arr.get(i);\n            }\n\
    \        }\n        return sum;", '        return arr.stream().limit(k).filter(x
    -> x < 100).reduce(0l, (x, y) -> x + y);', "        long sum = 0;\n        for\
    \ (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n           \
    \     sum += arr.get(i);\n            }\n        }\n        return sum;", '        return
    0l;', "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n        \
    \    long num = arr.get(i);\n            if (num < 100) {\n                sum\
    \ += num;\n            }\n        }\n        return sum;", '        return arr.stream().limit(k).filter(x
    -> x < 100).reduce(0l, (x, y) -> x + y);', "        long sum = 0;\n        for\
    \ (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n           \
    \     sum += arr.get(i);\n            }\n        }\n        return sum;", "  \
    \      long sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", '        return arr.stream().limit(k).filter(x -> x < 100).mapToLong(x
    -> x).sum();', "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n   \
    \         }\n        }\n        return sum;", "        long sum = 0;\n       \
    \ for (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n       \
    \         sum += arr.get(i);\n            }\n        }\n        return sum;",
  "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", '        return arr.stream().filter(x -> x < 100).limit(k).mapToLong(x
    -> x).sum();', "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n   \
    \         }\n        }\n        return sum;", '        return arr.stream().limit(k).filter(x
    -> x < 100).reduce(0l, (x, y) -> x + y);', '        return arr.stream().filter(x
    -> x < 100).limit(k).reduce(0l, (x, y) -> x + y);', '        return arr.stream().limit(k).filter(x
    -> x < 100).reduce(0l, (x, y) -> x + y);', '        return 0l;', "        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", "        long sum = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            long num = arr.get(i);\n            if (num < 100) {\n      \
    \          sum += num;\n            }\n        }\n        return sum;", '        return
    arr.stream().limit(k).filter(x -> x < 100).mapToLong(x -> x).sum();', "      \
    \  long sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", '        return arr.stream().limit(k).filter(x -> x < 100).mapToLong(x
    -> x).sum();', "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n   \
    \         }\n        }\n        return sum;", "        long sum = 0;\n       \
    \ for (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n       \
    \         sum += arr.get(i);\n            }\n        }\n        return sum;",
  '        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l, (x, y) ->
    x + y);', "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n    \
    \        long num = arr.get(i);\n            if (num < 100) {\n              \
    \  sum += num;\n            }\n        }\n        return sum;", "        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;", "        long sum = 0;\n        for (int i = 0; i < k; i++)\
    \ {\n            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < k; i++) {\n            long num = arr.get(i);\n     \
    \       if (num < 100) {\n                sum += num;\n            }\n       \
    \ }\n        return sum;", "        long sum = 0;\n        for (int i = 0; i <\
    \ k; i++) {\n            if (arr.get(i) < 100) {\n                sum += arr.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n    \
    \            sum += arr.get(i);\n            }\n        }\n        return sum;",
  "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n            long\
    \ num = arr.get(i);\n            if (num < 100) {\n                sum += num;\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (int i = 0; i < k; i++) {\n            long num = arr.get(i);\n     \
    \       if (num < 100) {\n                sum += num;\n            }\n       \
    \ }\n        return sum;", '        return arr.stream().limit(k).filter(x -> x
    < 100).reduce(0l, (x, y) -> x + y);', "        long sum = 0;\n        for (int\
    \ i = 0; i < k; i++) {\n            if (arr.get(i) < 100) {\n                sum\
    \ += arr.get(i);\n            }\n        }\n        return sum;", '        return
    0;', "        long sum = 0;\n        for (int i = 0; i < k; i++) {\n         \
    \   if (arr.get(i) < 100) {\n                sum += arr.get(i);\n            }\n\
    \        }\n        return sum;", '        return arr.stream().limit(k).filter(x
    -> x < 100).reduce(0l, (x, y) -> x + y);', '        return arr.stream().limit(k).filter(x
    -> x < 100).reduce(0l, (x, y) -> x + y);', "        long result = 0;\n       \
    \ for (int i = 0; i < k; i++) {\n            long num = arr.get(i);\n        \
    \    if (num < 100) {\n                result += num;\n            }\n       \
    \ }\n        return result;", '        return arr.stream().limit(k).filter(x ->
    x < 100).mapToLong(x -> x).sum();', '        return arr.stream().limit(k).filter(x
    -> x < 100).mapToLong(x -> x).sum();']
stop_tokens:
- "\n    }\n"

name: HumanEval_94_skjkasdkd
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given a list of integers.\n    // You need to find\
  \ the largest prime value and return the sum of its digits.\n    // Examples:\n\
  \    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
  \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
  \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
  \ (long)324l, (long)4l, (long)3l))))\n    // (10l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)0l, (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l,\
  \ (long)40l, (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l,\
  \ (long)1l))))\n    // (25l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
  \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
  \ (long)3l))))\n    // (13l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l,\
  \ (long)91l, (long)83l, (long)0l, (long)5l, (long)6l))))\n    // (11l)\n    // >>>\
  \ skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)81l, (long)12l, (long)3l,\
  \ (long)1l, (long)21l))))\n    // (3l)\n    // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)8l, (long)1l, (long)2l, (long)1l, (long)7l))))\n    // (7l)\n    public\
  \ static long skjkasdkd(ArrayList<Long> lst) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(skjkasdkd((new\
  \ ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l, (long)1l, (long)3l,\
  \ (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l, (long)2l, (long)181l,\
  \ (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l, (long)324l, (long)4l,\
  \ (long)3l)))) == (10l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)0l, (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l,\
  \ (long)40l, (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l,\
  \ (long)1l)))) == (25l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
  \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
  \ (long)3l)))) == (13l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l, (long)5l,\
  \ (long)91l, (long)83l, (long)0l, (long)5l, (long)6l)))) == (11l));\n    assert(skjkasdkd((new\
  \ ArrayList<Long>(Arrays.asList((long)0l, (long)81l, (long)12l, (long)3l, (long)1l,\
  \ (long)21l)))) == (3l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)8l, (long)1l, (long)2l, (long)1l, (long)7l)))) == (7l));\n    assert(skjkasdkd((new\
  \ ArrayList<Long>(Arrays.asList((long)8191l)))) == (19l));\n    assert(skjkasdkd((new\
  \ ArrayList<Long>(Arrays.asList((long)8191l, (long)123456l, (long)127l, (long)7l))))\
  \ == (19l));\n    assert(skjkasdkd((new ArrayList<Long>(Arrays.asList((long)127l,\
  \ (long)97l, (long)8192l)))) == (10l));\n    }\n\n}\n"
completions: ["        long largestPrime = 0;\n        for (long i : lst) {\n    \
    \        if (isPrime(i)) {\n                largestPrime = i;\n            }\n\
    \        }\n        return sumDigits(largestPrime);", "        long max = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  '        return lst.stream().filter(x -> isPrime(x)).mapToLong(x -> sumDigits(x)).max().getAsLong();',
  "        // Your code here\n        long largest_prime = 0;\n        for (long i\
    \ : lst) {\n            if (isPrime(i)) {\n                if (i > largest_prime)\
    \ {\n                    largest_prime = i;\n                }\n            }\n\
    \        }\n        return sum_digits(largest_prime);", "        return lst.stream().filter(x\
    \ -> isPrime(x)).max(Comparator.naturalOrder()).get().toString().chars().map(x\
    \ -> x - '0').sum();", "        long largestPrime = 0;\n        for (long i :\
    \ lst) {\n            if (isPrime(i)) {\n                largestPrime = i;\n \
    \           }\n        }\n        return sumDigits(largestPrime);", "        long\
    \ max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n    \
    \            max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        // Your code here\n        return 0l;", "       \
    \ // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l,\
    \ (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l,\
    \ (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l,\
    \ (long)324l, (long)4l, (long)3l)))))\n        // (10l)\n        // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l, (long)8l, (long)2l,\
    \ (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l, (long)2l, (long)1l,\
    \ (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))))\n        // (25l)\n  \
    \      // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l, (long)163l,\
    \ (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l, (long)3l)))))\n\
    \        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)", "        long max = 0;\n        for (long i :\
    \ lst) {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        // Your code here\n        return (long)0l;",
  "        long largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumDigits(largestPrime);", "        return lst.stream().filter(x -> {\n    \
    \        if (x == 0l) {\n                return false;\n            }\n      \
    \      for (long i = 2l; i < x; i += 1l) {\n                if (x % i == 0l) {\n\
    \                    return false;\n                }\n            }\n       \
    \     return true;\n        }).max(Comparator.naturalOrder()).get().toString().chars().map(x\
    \ -> x - 48).sum();", "        // Your code here\n        return (long)0l;", " \
    \       // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l,\
    \ (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l,\
    \ (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l,\
    \ (long)32l, (long)324l, (long)4l, (long)3l)))))\n        // (10l)\n        //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l,\
    \ (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l,\
    \ (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))))\n\
    \        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l)))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)", "        long max = 0;\n        for (long i :\
    \ lst) {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        max = i;\n            }\n        }\n        return sumOfDigits(max);",
  "        long largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumOfDigits(largestPrime);", "        return lst.stream().filter(x -> isPrime(x)).max(Comparator.naturalOrder()).get().toString().chars().map(x\
    \ -> x - '0').sum();", "        // Your code here\n        return (long)0l;",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        // Your code here\n        long max = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                if (i > max) {\n                    max = i;\n          \
    \      }\n            }\n        }\n        return sumDigits(max);", "       \
    \ long max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n\
    \                max = i;\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                if (i > max) {\n                    max = i;\n          \
    \      }\n            }\n        }\n        return sumDigits(max);", "       \
    \ long max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n\
    \                max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        return lst.stream().filter(x -> isPrime(x)).max(Comparator.naturalOrder()).get().toString().chars().map(x\
    \ -> x - '0').sum();", "        long max = 0;\n        for (long i : lst) {\n\
    \            if (isPrime(i)) {\n                max = i;\n            }\n    \
    \    }\n        return sumDigits(max);", "        long max = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                max = Math.max(max,\
    \ i);\n            }\n        }\n        return sumDigits(max);", "        long\
    \ max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n    \
    \            max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0;\n        for (long i : lst) {\n   \
    \         if (isPrime(i)) {\n                max = i;\n            }\n       \
    \ }\n        return sumDigits(max);", "        long max = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                max = i;\n      \
    \      }\n        }\n        return sumDigits(max);", "        long maxPrime =\
    \ 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n          \
    \      maxPrime = Math.max(maxPrime, i);\n            }\n        }\n        return\
    \ sumDigits(maxPrime);", "        long max = 0;\n        for (long i : lst) {\n\
    \            if (isPrime(i)) {\n                max = Math.max(max, i);\n    \
    \        }\n        }\n        return sumDigits(max);", "        // Your code\
    \ goes here.\n        return (long)0l;", "        long max = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                max = Math.max(max,\
    \ i);\n            }\n        }\n        return sumDigits(max);", "        long\
    \ max = 0;\n        for (Long l : lst) {\n            if (l > max) {\n       \
    \         max = l;\n            }\n        }\n        for (Long l : lst) {\n \
    \           if (l > max) {\n                max = l;\n            }\n        }\n\
    \        for (Long l : lst) {\n            if (l > max) {\n                max\
    \ = l;\n            }\n        }\n        for (Long l : lst) {\n            if\
    \ (l > max) {\n                max = l;\n            }\n        }\n        for\
    \ (Long l : lst) {\n            if (l > max) {\n                max = l;\n   \
    \         }\n        }\n        for (Long l : lst) {\n            if (l > max)\
    \ {\n                max = l;\n            }\n        }\n        for (Long l :\
    \ lst) {\n            if (l > max) {\n                max = l;\n            }\n\
    \        }\n        for (Long l : lst) {\n            if (l > max) {\n       \
    \         max = l;\n            }\n        }\n        for (Long l : lst) {\n \
    \           if (l > max) {\n                max = l;\n            }\n        }\n\
    \        for (Long l : lst) {\n            if (l > max) {\n                max\
    \ = l;\n            }\n        }\n        for (Long l : lst) {\n            if\
    \ (l > max) {\n                max = l;\n            }\n        }\n        for\
    \ (Long l : lst) {\n            if (l > max) {\n                max = l;\n   \
    \         }\n        }\n        for (Long l : lst) {\n            if (l > max)\
    \ {\n                max = l;\n            }\n        }\n        for (Long l :\
    \ lst) {\n            if (l > max) {\n                max = l;\n            }\n\
    \        }\n        for (Long l : lst) {\n            if (l > max) {\n       \
    \         max = l;\n            }\n        }\n        for (Long l : lst) {\n \
    \           if (l > max) {\n                max = l", "        long max = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = i;\n            }\n\
    \        }\n        return sumDigits(max);", "        long max = 0;\n        for\
    \ (long i : lst) {\n            if (isPrime(i)) {\n                max = Math.max(max,\
    \ i);\n            }\n        }\n        return sumDigits(max);", "        long\
    \ max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n    \
    \            max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0;\n        for (long i : lst) {\n   \
    \         if (isPrime(i)) {\n                max = i;\n            }\n       \
    \ }\n        return sumDigits(max);", "        // Your code here\n        return\
    \ 0l;", "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                if (i > max) {\n                    max = i;\n          \
    \      }\n            }\n        }\n        return sumDigits(max);", "       \
    \ // Your code here\n        return 0l;", "        long ret = 0;\n        long\
    \ max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n    \
    \            if (i > max) {\n                    max = i;\n                }\n\
    \            }\n        }\n        while (max > 0) {\n            ret += max %\
    \ 10;\n            max /= 10;\n        }\n        return ret;", "        long\
    \ max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n    \
    \            if (i > max) {\n                    max = i;\n                }\n\
    \            }\n        }\n        return sumDigits(max);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        max = i;\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (i > max) {\n                max = i;\n            }\n   \
    \     }\n        long maxPrime = 0;\n        for (long i = 2; i <= max; i++) {\n\
    \            if (isPrime(i)) {\n                maxPrime = i;\n            }\n\
    \        }\n        return sumDigits(maxPrime);", "        // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l, (long)1l, (long)3l,\
    \ (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l, (long)2l, (long)181l,\
    \ (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l, (long)324l, (long)4l,\
    \ (long)3l)))))\n        // (10l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)0l, (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l,\
    \ (long)40l, (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l,\
    \ (long)1l)))))\n        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l)))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)", "        long largestPrime = 0l;\n        for\
    \ (long i : lst) {\n            if (isPrime(i)) {\n                if (i > largestPrime)\
    \ {\n                    largestPrime = i;\n                }\n            }\n\
    \        }\n        return sumDigits(largestPrime);", "        // Your code here.\n\
    \        return (long)0l;", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (i > max) {\n           \
    \     max = i;\n            }\n        }\n        long sum = 0;\n        while\
    \ (max > 0) {\n            sum += max % 10;\n            max /= 10;\n        }\n\
    \        return sum;", "        long largestPrime = 0;\n        for (long i :\
    \ lst) {\n            if (isPrime(i)) {\n                largestPrime = i;\n \
    \           }\n        }\n        return sumDigits(largestPrime);", "        long\
    \ max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n    \
    \            max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0l;\n        for (long i : lst) {\n  \
    \          if (i > max) {\n                max = i;\n            }\n        }\n\
    \        long sum = 0l;\n        while (max > 0) {\n            sum += max % 10;\n\
    \            max /= 10;\n        }\n        return sum;", "        long max =\
    \ 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n          \
    \      max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long largestPrime = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                largestPrime = i;\n\
    \            }\n        }\n        return sumDigits(largestPrime);", "       \
    \ // Your code here\n        return 0;", "        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l)))))\n        // (10l)\n\
    \        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l,\
    \ (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l,\
    \ (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))))\n\
    \        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l)))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)", "        long largest = 0;\n        for (long\
    \ i : lst) {\n            if (i > largest) {\n                largest = i;\n \
    \           }\n        }\n        long largestPrime = largest;\n        for (long\
    \ i = 2; i < largest; i++) {\n            if (largest % i == 0) {\n          \
    \      largestPrime = i;\n                break;\n            }\n        }\n \
    \       long sum = 0;\n        while (largestPrime > 0) {\n            sum +=\
    \ largestPrime % 10;\n            largestPrime /= 10;\n        }\n        return\
    \ sum;", "        long max = 0;\n        for (Long i : lst) {\n            if\
    \ (isPrime(i)) {\n                max = Math.max(max, i);\n            }\n   \
    \     }\n        return sumDigits(max);", "        long max = 0;\n        for\
    \ (long i : lst) {\n            if (i > max) {\n                max = i;\n   \
    \         }\n        }\n        for (long i = max; i > 1; i--) {\n           \
    \ boolean isPrime = true;\n            for (long j = 2; j < i; j++) {\n      \
    \          if (i % j == 0) {\n                    isPrime = false;\n         \
    \           break;\n                }\n            }\n            if (isPrime)\
    \ {\n                return sumDigits(i);\n            }\n        }\n        return\
    \ 0;", "        // Your code goes here.\n        return 0;", "        long largestPrime\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        largestPrime = i;\n            }\n        }\n        return sumDigits(largestPrime);",
  '        return 0l;', "        // Your code here\n        return (long)0l;", " \
    \       long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                if (i > max) {\n                    max = i;\n          \
    \      }\n            }\n        }\n        return sumDigits(max);", "       \
    \ // Your code here\n        return (long)0l;", "        long max = 0;\n     \
    \   for (long i : lst) {\n            if (isPrime(i)) {\n                max =\
    \ Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumDigits(largestPrime);", "        // Your code here\n        return (long)0l;",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                if (i > max) {\n                    max = i;\n          \
    \      }\n            }\n        }\n        return sumDigits(max);", "       \
    \ long max = 0;\n        for (Long i : lst) {\n            if (isPrime(i)) {\n\
    \                if (i > max) {\n                    max = i;\n              \
    \  }\n            }\n        }\n        return sumDigits(max);", "        long\
    \ max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n    \
    \            max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0l;\n        for (Long i : lst) {\n  \
    \          if (isPrime(i)) {\n                max = i;\n            }\n      \
    \  }\n        return sumDigits(max);", "        long max = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                if (i > max) {\n\
    \                    max = i;\n                }\n            }\n        }\n \
    \       return sumDigits(max);", "        long max = 0;\n        for (long i :\
    \ lst) {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long largestPrime\
    \ = 0l;\n        for (long l : lst) {\n            if (isPrime(l)) {\n       \
    \         largestPrime = Math.max(largestPrime, l);\n            }\n        }\n\
    \        return sumDigits(largestPrime);", "        long max = 0;\n        for\
    \ (Long l : lst) {\n            if (isPrime(l)) {\n                max = Math.max(max,\
    \ l);\n            }\n        }\n        return sumDigits(max);", "        //\
    \ Your code here\n        return (long)0l;", "        long max = 0;\n        for\
    \ (long i : lst) {\n            if (isPrime(i)) {\n                max = i;\n\
    \            }\n        }\n        return sumDigits(max);", "        // Your code\
    \ here\n        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", '        return lst.stream().filter(x
    -> isPrime(x)).max(Comparator.naturalOrder()).get().toString().chars().map(Character::getNumericValue).sum();',
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        // Your code here\n        return (long)0l;", "        // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l, (long)1l, (long)3l,\
    \ (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l, (long)2l, (long)181l,\
    \ (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l, (long)324l, (long)4l,\
    \ (long)3l)))))\n        // (10l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)0l, (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l,\
    \ (long)40l, (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l,\
    \ (long)1l)))))\n        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l)))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)", "        long max = 0;\n        for (long i :\
    \ lst) {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = i;\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        max = i;\n            }\n        }\n        return sumDigits(max);",
  "        long largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumOfDigits(largestPrime);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                if (max < i) {\n         \
    \           max = i;\n                }\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0;\n        for (long i : lst) {\n   \
    \         if (isPrime(i)) {\n                max = i;\n            }\n       \
    \ }\n        return sumDigits(max);", "        long largestPrime = 0;\n      \
    \  for (long i : lst) {\n            if (isPrime(i)) {\n                largestPrime\
    \ = i;\n            }\n        }\n        long sum = 0;\n        for (char c :\
    \ String.valueOf(largestPrime).toCharArray()) {\n            sum += Integer.parseInt(String.valueOf(c));\n\
    \        }\n        return sum;", "        long largestPrime = 0;\n        for\
    \ (long i : lst) {\n            if (isPrime(i)) {\n                largestPrime\
    \ = i;\n            }\n        }\n        return sumDigits(largestPrime);", " \
    \       long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long max\
    \ = 0;\n        for (long l : lst) {\n            if (isPrime(l)) {\n        \
    \        max = Math.max(max, l);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                if (i > max) {\n                    max = i;\n          \
    \      }\n            }\n        }\n        return sumDigits(max);", "       \
    \ long max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n\
    \                max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        // Your code here.\n        return (long)0l;", " \
    \       // Your code here\n        return (long)0l;", "        long max = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ if (i > max) {\n                    max = i;\n                }\n          \
    \  }\n        }\n        return sumDigits(max);", "        long max = 0;\n   \
    \     for (Long l : lst) {\n            if (isPrime(l)) {\n                max\
    \ = l;\n            }\n        }\n        return sumDigits(max);", "        //\
    \ Your code here\n        return (long)0l;", "        long largestPrime = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ if (i > largestPrime) {\n                    largestPrime = i;\n           \
    \     }\n            }\n        }\n        return sumDigits(largestPrime);", " \
    \       long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = i;\n            }\n\
    \        }\n        return sumDigits(max);", "        long largestPrime = 0l;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ if (i > largestPrime) {\n                    largestPrime = i;\n           \
    \     }\n            }\n        }\n        return sumOfDigits(largestPrime);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (Long i : lst)\
    \ {\n            if (isPrime(i)) {\n                if (i > max) {\n         \
    \           max = i;\n                }\n            }\n        }\n        return\
    \ sumDigits(max);", "        // Write your code here\n        // To print results\
    \ to the standard output you can use System.out.println()\n        // Example:\
    \ System.out.println(\"Hello world!\");\n        long max = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                max = Math.max(max,\
    \ i);\n            }\n        }\n        return sumDigits(max);", "        //\
    \ Your code here\n        long max = 0;\n        for (long i : lst) {\n      \
    \      if (isPrime(i)) {\n                max = Math.max(max, i);\n          \
    \  }\n        }\n        return sumDigits(max);", "        // Your code here.\n\
    \        return (long)0l;", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                if (i > max) {\n         \
    \           max = i;\n                }\n            }\n        }\n        return\
    \ sumDigits(max);", "        // Your code here\n        return (long)0l;", " \
    \       // Your code here\n        return 0l;", "        long max = 0;\n     \
    \   for (long i : lst) {\n            if (isPrime(i)) {\n                max =\
    \ Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long largestPrime = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                largestPrime = i;\n\
    \            }\n        }\n        return sumDigits(largestPrime);", "       \
    \ long max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n\
    \                max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long largestPrime = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                largestPrime = i;\n      \
    \      }\n        }\n        return sumDigits(largestPrime);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        max = i;\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (Long l : lst) {\n            if (isPrime(l))\
    \ {\n                max = Math.max(max, l);\n            }\n        }\n     \
    \   return sumDigits(max);", '        return lst.stream().filter(x -> isPrime(x)).mapToLong(x
    -> sumDigits(x)).max().getAsLong();', "        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l)))))\n        // (10l)\n\
    \        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l,\
    \ (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l,\
    \ (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))))\n\
    \        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l)))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)", "        long max = 0;\n        for (long i :\
    \ lst) {\n            if (isPrime(i)) {\n                if (i > max) {\n    \
    \                max = i;\n                }\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = i;\n            }\n\
    \        }\n        return sumDigits(max);", "        // Your code goes here.\n\
    \        return 0l;", "        long max = 0;\n        for (long i : lst) {\n \
    \           if (isPrime(i)) {\n                max = i;\n            }\n     \
    \   }\n        return sumDigits(max);", "        // Your code here\n        return\
    \ (long)0l;", "        long largestPrime = 0;\n        for (long i : lst) {\n\
    \            if (isPrime(i)) {\n                largestPrime = i;\n          \
    \  }\n        }\n        return sumDigits(largestPrime);", "        long max =\
    \ 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n          \
    \      max = i;\n            }\n        }\n        return sumDigits(max);", " \
    \       long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        // Your code here\n        return 0l;", "        long max = 0;\n      \
    \  for (long i : lst) {\n            if (isPrime(i)) {\n                max =\
    \ i;\n            }\n        }\n        return sumDigits(max);", "        long\
    \ max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n    \
    \            max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0;\n        for (long i : lst) {\n   \
    \         if (isPrime(i)) {\n                max = Math.max(max, i);\n       \
    \     }\n        }\n        return sumDigits(max);", '        return lst.stream().filter(x
    -> x > 1).filter(x -> (x % 2 != 0) || (x == 2)).filter(x -> (x % 3 != 0) || (x
    == 3)).filter(x -> (x % 5 != 0) || (x == 5)).filter(x -> (x % 7 != 0) || (x ==
    7)).filter(x -> (x % 11 != 0) || (x == 11)).filter(x -> (x % 13 != 0) || (x ==
    13)).filter(x -> (x % 17 != 0) || (x == 17)).filter(x -> (x % 19 != 0) || (x ==
    19)).filter(x -> (x % 23 != 0) || (x == 23)).filter(x -> (x % 29 != 0) || (x ==
    29)).filter(x -> (x % 31 != 0) || (x == 31)).filter(x -> (x % 37 != 0) || (x ==
    37)).filter(x -> (x % 41 != 0) || (x == 41)).filter(x -> (x % 43 != 0) || (x ==
    43)).filter(x -> (x % 47 != 0) || (x == 47)).filter(x -> (x % 53 != 0) || (x ==
    53)).filter(x -> (x % 59 != 0) || (x == 59)).filter(x -> (x % 61 != 0) || (x ==
    61)).filter(x -> (x % 67 != 0) || (x == 67)).filter(x -> (x % 71 != 0) || (x ==
    71)).filter(x -> (x % 73 != 0) || (x == 73)).filter(x -> (x % 79 != 0) || (x ==
    79)).filter(x -> (x % 83 != 0) || (x == 83)).filter(x -> (x % 89 != 0) || (x ==
    89)).filter(x -> (x % 97 != 0) || (x == 97)).filter(x -> (x % 101 != 0) || (x
    == 101)).filter(x -> (x % 103 != 0) || (x == 103)).filter(x -> (x % 107 != 0)
    || (x == 107)).filter(x -> (x % 109 != 0) || (x == 109)).filter(x', "        long\
    \ max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n    \
    \            max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long largestPrime = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                largestPrime = i;\n      \
    \      }\n        }\n        return sumDigits(largestPrime);", "        // Your\
    \ code here\n        return (long)0l;", "        long largestPrime = 0;\n    \
    \    for (long i : lst) {\n            if (isPrime(i)) {\n                largestPrime\
    \ = i;\n            }\n        }\n        return sumDigits(largestPrime);", " \
    \       long largestPrime = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                largestPrime = i;\n            }\n        }\n        return\
    \ sumDigits(largestPrime);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                if (i > max) {\n         \
    \           max = i;\n                }\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0;\n        for (long i : lst) {\n   \
    \         if (isPrime(i)) {\n                max = Math.max(max, i);\n       \
    \     }\n        }\n        return sumDigits(max);", "        long max = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        // >>> skjkasdkd((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)3l, (long)2l, (long)1l, (long)3l,\
    \ (long)5l, (long)7l, (long)4l, (long)5l, (long)5l, (long)5l, (long)2l, (long)181l,\
    \ (long)32l, (long)4l, (long)32l, (long)3l, (long)2l, (long)32l, (long)324l, (long)4l,\
    \ (long)3l)))))\n        // (10l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)0l, (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l,\
    \ (long)40l, (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l,\
    \ (long)1l)))))\n        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l)))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)", '        return lst.stream().filter(x -> x > 1).filter(x
    -> x % 2 != 0).filter(x -> x % 3 != 0).filter(x -> x % 5 != 0).filter(x -> x %
    7 != 0).filter(x -> x % 11 != 0).filter(x -> x % 13 != 0).filter(x -> x % 17 !=
    0).filter(x -> x % 19 != 0).filter(x -> x % 23 != 0).filter(x -> x % 29 != 0).filter(x
    -> x % 31 != 0).filter(x -> x % 37 != 0).filter(x -> x % 41 != 0).filter(x ->
    x % 43 != 0).filter(x -> x % 47 != 0).filter(x -> x % 53 != 0).filter(x -> x %
    59 != 0).filter(x -> x % 61 != 0).filter(x -> x % 67 != 0).filter(x -> x % 71
    != 0).filter(x -> x % 73 != 0).filter(x -> x % 79 != 0).filter(x -> x % 83 !=
    0).filter(x -> x % 89 != 0).filter(x -> x % 97 != 0).filter(x -> x % 101 != 0).filter(x
    -> x % 103 != 0).filter(x -> x % 107 != 0).filter(x -> x % 109 != 0).filter(x
    -> x % 113 != 0).filter(x -> x % 127 != 0).filter(x -> x % 131 != 0).filter(x
    -> x % 137 != 0).filter(x -> x % 139 != 0).filter(x -> x % 149 != 0).filter(x
    -> x % 151 != 0).filter(x -> x % 157 != 0).filter(x -> x % 163 != 0).filter(x
    -> x % 167 != 0).filter(x -> x % 173 != 0).filter(x -> x % 179 != 0).filter(x
    -> x % 181 != 0).filter(x -> x % 191 != 0).filter(x -> x % 193 != 0).filter(x
    -> x % 197 != 0).filter(x -> x % 199 != 0).filter(x -> x % 211 != 0).filter(x
    -> x % 223 != 0).filter(x -> x % 227 != 0).filter(x -> x %', "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l,\
    \ (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l,\
    \ (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l,\
    \ (long)32l, (long)324l, (long)4l, (long)3l)))))\n        // (10l)\n        //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l,\
    \ (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l,\
    \ (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))))\n\
    \        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l)))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)", "        long max = 0;\n        for (long i :\
    \ lst) {\n            if (isPrime(i)) {\n                max = i;\n          \
    \  }\n        }\n        return sumDigits(max);", "        // Your code here.\n\
    \        return (long)0l;", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                if (i > max) {\n         \
    \           max = i;\n                }\n            }\n        }\n        return\
    \ sumOfDigits(max);", "        long largestPrime = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                largestPrime = i;\n      \
    \      }\n        }\n        return sumOfDigits(largestPrime);", "        long\
    \ max = 0;\n        for (Long i : lst) {\n            if (isPrime(i)) {\n    \
    \            max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0;\n        for (long i : lst) {\n   \
    \         if (isPrime(i)) {\n                max = Math.max(max, i);\n       \
    \     }\n        }\n        return sumDigits(max);", "        long max = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l, (long)3l,\
    \ (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l, (long)5l,\
    \ (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l, (long)2l,\
    \ (long)32l, (long)324l, (long)4l, (long)3l)))))\n        // (10l)\n        //\
    \ >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)1l,\
    \ (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l, (long)1l,\
    \ (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))))\n\
    \        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l)))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)", "        long max = 0;\n        for (long i :\
    \ lst) {\n            if (i > max) {\n                max = i;\n            }\n\
    \        }\n        long maxPrime = 0;\n        for (long i = 0; i < max; i++)\
    \ {\n            if (isPrime(i)) {\n                maxPrime = i;\n          \
    \  }\n        }\n        long sum = 0;\n        for (char c : Long.toString(maxPrime).toCharArray())\
    \ {\n            sum += Character.getNumericValue(c);\n        }\n        return\
    \ sum;", "        return lst.stream().filter(x -> isPrime(x)).max(Comparator.naturalOrder()).get().toString().chars().map(x\
    \ -> x - '0').sum();", "        long max = 0;\n        for (long i : lst) {\n\
    \            if (isPrime(i)) {\n                max = Math.max(max, i);\n    \
    \        }\n        }\n        return sumDigits(max);", '        return (long)0l;',
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumDigits(max);", "        long max = 0;\n        for (long i : lst)\
    \ {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        long max\
    \ = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n        \
    \        max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = i;\n            }\n        }\n        return sumDigits(max);",
  "        // Your code here\n        return 0l;", "        long max = 0;\n      \
    \  for (long i : lst) {\n            if (isPrime(i)) {\n                if (i\
    \ > max) {\n                    max = i;\n                }\n            }\n \
    \       }\n        return sumDigits(max);", "        long max = 0;\n        for\
    \ (long i : lst) {\n            if (isPrime(i)) {\n                max = Math.max(max,\
    \ i);\n            }\n        }\n        return sumDigits(max);", "        long\
    \ max = 0;\n        for (long i : lst) {\n            if (isPrime(i)) {\n    \
    \            max = Math.max(max, i);\n            }\n        }\n        return\
    \ sumDigits(max);", "        long max = 0;\n        for (long i : lst) {\n   \
    \         if (isPrime(i)) {\n                max = i;\n            }\n       \
    \ }\n        return sumDigits(max);", "        long max = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                max = i;\n      \
    \      }\n        }\n        return sumDigits(max);", "        long max = 0;\n\
    \        for (long i : lst) {\n            if (isPrime(i)) {\n               \
    \ max = Math.max(max, i);\n            }\n        }\n        return sumDigits(max);",
  "        long max = 0;\n        for (long i : lst) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        long maxPrime = 0;\n\
    \        for (long i = 2; i <= max; i++) {\n            boolean isPrime = true;\n\
    \            for (long j = 2; j <= Math.sqrt(i); j++) {\n                if (i\
    \ % j == 0) {\n                    isPrime = false;\n                    break;\n\
    \                }\n            }\n            if (isPrime) {\n              \
    \  maxPrime = i;\n            }\n        }\n        long sum = 0;\n        while\
    \ (maxPrime > 0) {\n            sum += maxPrime % 10;\n            maxPrime /=\
    \ 10;\n        }\n        return sum;", "        long max = 0;\n        for (long\
    \ i : lst) {\n            if (isPrime(i)) {\n                if (i > max) {\n\
    \                    max = i;\n                }\n            }\n        }\n \
    \       return sumDigits(max);", "        // Your code goes here.\n        return\
    \ 0l;", "        long max = 0;\n        for (long i : lst) {\n            if (isPrime(i))\
    \ {\n                max = Math.max(max, i);\n            }\n        }\n     \
    \   return sumOfDigits(max);", "        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)3l, (long)2l, (long)1l, (long)3l, (long)5l, (long)7l, (long)4l, (long)5l,\
    \ (long)5l, (long)5l, (long)2l, (long)181l, (long)32l, (long)4l, (long)32l, (long)3l,\
    \ (long)2l, (long)32l, (long)324l, (long)4l, (long)3l)))))\n        // (10l)\n\
    \        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l,\
    \ (long)1l, (long)8l, (long)2l, (long)4597l, (long)2l, (long)1l, (long)3l, (long)40l,\
    \ (long)1l, (long)2l, (long)1l, (long)2l, (long)4l, (long)2l, (long)5l, (long)1l)))))\n\
    \        // (25l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)1l, (long)32l, (long)5107l, (long)34l, (long)83278l, (long)109l,\
    \ (long)163l, (long)23l, (long)2323l, (long)32l, (long)30l, (long)1l, (long)9l,\
    \ (long)3l)))))\n        // (13l)\n        // >>> skjkasdkd((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)724l, (long)32l, (long)71l, (long)99l, (long)32l, (long)6l, (long)0l,\
    \ (long)5l, (long)91l, (long)", "        long max = 0;\n        for (long i :\
    \ lst) {\n            if (isPrime(i)) {\n                max = Math.max(max, i);\n\
    \            }\n        }\n        return sumDigits(max);", "        return lst.stream().filter(x\
    \ -> isPrime(x)).max(Comparator.naturalOrder()).get().toString().chars().map(x\
    \ -> x - '0').sum();"]
stop_tokens:
- "\n    }\n"

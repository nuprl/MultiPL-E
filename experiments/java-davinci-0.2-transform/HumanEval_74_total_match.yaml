name: HumanEval_74_total_match
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Write a function that accepts two lists of strings and returns\
  \ the list that has \n    // total number of chars in the all strings of the list\
  \ less than the other list.\n    // if the two lists have the same number of chars,\
  \ return the first list.\n    // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
  \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
  \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
  admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
  ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
  )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\",\
  \ (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
  hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
  hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
  hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
  , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
  hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
  4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
  3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
  4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1, ArrayList<String>\
  \ lst2) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
  \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
  \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
  hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
  , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
  , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
  hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
  , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
  hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
  4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
  3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
  4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
  hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
  , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
  , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
  hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
  , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
  hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
  hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
  , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
  hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
  \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
  \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
  \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
  \    }\n\n}\n"
completions: ["        // >>> YOUR CODE GOES HERE <<<\n        return null;", '        return
    null;', "        // Your code goes here\n        return null;", "        // Your\
    \ code here\n        return null;", "        int total1 = 0;\n        int total2\
    \ = 0;\n        for (String s : lst1) {\n            total1 += s.length();\n \
    \       }\n        for (String s : lst2) {\n            total2 += s.length();\n\
    \        }\n        if (total1 < total2) {\n            return lst1;\n       \
    \ } else {\n            return lst2;\n        }", "        int lst1Total = 0;\n\
    \        int lst2Total = 0;\n        for (String s : lst1) {\n            lst1Total\
    \ += s.length();\n        }\n        for (String s : lst2) {\n            lst2Total\
    \ += s.length();\n        }\n        if (lst1Total < lst2Total) {\n          \
    \  return lst1;\n        } else {\n            return lst2;\n        }", "   \
    \     // >>> YOUR CODE HERE <<<\n        return null;", "        int sum1 = 0;\n\
    \        int sum2 = 0;\n        for (String str : lst1) {\n            sum1 +=\
    \ str.length();\n        }\n        for (String str : lst2) {\n            sum2\
    \ += str.length();\n        }\n        if (sum1 < sum2) {\n            return\
    \ lst1;\n        } else {\n            return lst2;\n        }", '        return
    null;', "        int lst1Total = 0;\n        int lst2Total = 0;\n        for (String\
    \ s : lst1) {\n            lst1Total += s.length();\n        }\n        for (String\
    \ s : lst2) {\n            lst2Total += s.length();\n        }\n        if (lst1Total\
    \ < lst2Total) {\n            return lst1;\n        } else {\n            return\
    \ lst2;\n        }", "        // write your code here\n        return null;",
  "        int lst1_total = 0;\n        int lst2_total = 0;\n        for (String s\
    \ : lst1) {\n            lst1_total += s.length();\n        }\n        for (String\
    \ s : lst2) {\n            lst2_total += s.length();\n        }\n        if (lst1_total\
    \ < lst2_total) {\n            return lst1;\n        } else {\n            return\
    \ lst2;\n        }", "        // Your code goes here\n        return null;", " \
    \       int lst1Total = 0;\n        int lst2Total = 0;\n        for (String s\
    \ : lst1) {\n            lst1Total += s.length();\n        }\n        for (String\
    \ s : lst2) {\n            lst2Total += s.length();\n        }\n        if (lst1Total\
    \ < lst2Total) {\n            return lst1;\n        } else {\n            return\
    \ lst2;\n        }", "        int total1 = 0;\n        int total2 = 0;\n     \
    \   for (String s : lst1) {\n            total1 += s.length();\n        }\n  \
    \      for (String s : lst2) {\n            total2 += s.length();\n        }\n\
    \        if (total1 < total2) {\n            return lst1;\n        } else {\n\
    \            return lst2;\n        }", "        // Your code here\n        return\
    \ null;", "        int lst1Total = 0;\n        int lst2Total = 0;\n        for\
    \ (String s : lst1) {\n            lst1Total += s.length();\n        }\n     \
    \   for (String s : lst2) {\n            lst2Total += s.length();\n        }\n\
    \        if (lst1Total < lst2Total) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }", "        int total1 = 0;\n        int\
    \ total2 = 0;\n        for (String s : lst1) {\n            total1 += s.length();\n\
    \        }\n        for (String s : lst2) {\n            total2 += s.length();\n\
    \        }\n        if (total1 < total2) {\n            return lst1;\n       \
    \ } else {\n            return lst2;\n        }", "        // write your code\
    \ here\n        return null;", "        int total1 = 0;\n        int total2 =\
    \ 0;\n        for (String s : lst1) {\n            total1 += s.length();\n   \
    \     }\n        for (String s : lst2) {\n            total2 += s.length();\n\
    \        }\n        if (total1 < total2) {\n            return lst1;\n       \
    \ } else {\n            return lst2;\n        }"]
stop_tokens:
- "\n    }\n"

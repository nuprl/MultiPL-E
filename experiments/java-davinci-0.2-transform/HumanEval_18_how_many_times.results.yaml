language: java
name: HumanEval_18_how_many_times
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ (long) string.chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c\
    \ -> c.toString()).collect(Collectors.joining()).split(substring).length - 1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzok90t4_.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcp6wbjew.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 11\n\tat java.lang.String.substring(String.java:1963)\n\
    \tat Problem.howManyTimes(tmpid851uja.java:20)\n\tat Problem.main(tmpid851uja.java:30)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ string.chars().mapToObj(c -> (char) c).collect(Collectors.joining()).split(substring).length\
    \ - 1;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpci25cf5n.java:17: error: no suitable method found for collect(Collector<CharSequence,CAP#1,String>)\n\
    \        return string.chars().mapToObj(c -> (char) c).collect(Collectors.joining()).split(substring).length\
    \ - 1;\n                                                     ^\n    method Stream.<R#1>collect(Supplier<R#1>,BiConsumer<R#1,?\
    \ super Character>,BiConsumer<R#1,R#1>) is not applicable\n      (cannot infer\
    \ type-variable(s) R#1\n        (actual and formal argument lists differ in length))\n\
    \    method Stream.<R#2,A>collect(Collector<? super Character,A,R#2>) is not applicable\n\
    \      (cannot infer type-variable(s) R#2,A\n        (argument mismatch; Collector<CharSequence,CAP#1,String>\
    \ cannot be converted to Collector<? super Character,A,R#2>))\n  where R#1,T,R#2,A\
    \ are type-variables:\n    R#1 extends Object declared in method <R#1>collect(Supplier<R#1>,BiConsumer<R#1,?\
    \ super T>,BiConsumer<R#1,R#1>)\n    T extends Object declared in interface Stream\n\
    \    R#2 extends Object declared in method <R#2,A>collect(Collector<? super T,A,R#2>)\n\
    \    A extends Object declared in method <R#2,A>collect(Collector<? super T,A,R#2>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 11\n\tat java.lang.String.substring(String.java:1963)\n\
    \tat Problem.howManyTimes(tmpid851uja.java:20)\n\tat Problem.main(tmpid851uja.java:30)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ string.chars().mapToObj(x -> (char) x).collect(Collectors.toList()).stream().map(x\
    \ -> x.toString()).collect(Collectors.joining()).split(substring).length - 1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvb7lzr5f.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcp6wbjew.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int count\
    \ = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index++;\n            count++;\n        }\n  \
    \      return count;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int i = 0;\n        while (i < string.length()) {\n          \
    \  if (string.substring(i).startsWith(substring)) {\n                count++;\n\
    \                i += substring.length();\n            } else {\n            \
    \    i++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsdv_w86s.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcp6wbjew.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.length() - i >= substring.length())\
    \ {\n                    if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcp6wbjew.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 11\n\tat java.lang.String.substring(String.java:1963)\n\
    \tat Problem.howManyTimes(tmpid851uja.java:20)\n\tat Problem.main(tmpid851uja.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcp6wbjew.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4_txsk0.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcp6wbjew.java:28)\n"
  stdout: ''

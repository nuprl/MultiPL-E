language: java
name: HumanEval_85_add
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i +=\
    \ 2) {\n            sum += lst.get(i);\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbdv5foib.java:21)\n"
  stdout: ''
  timestamp: 1659800057
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((long)0, (x, y) -> x + y);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1rundak4.java:20)\n"
  stdout: ''
  timestamp: 1659800057
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((long)0, (x, y) -> x + y);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1rundak4.java:20)\n"
  stdout: ''
  timestamp: 1659800057
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i +=\
    \ 2) {\n            if (lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfpc57w5.java:23)\n"
  stdout: ''
  timestamp: 1659800057
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (a, b)\
    \ -> a + b);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo7_ylbr_.java:17)\n"
  stdout: ''
  timestamp: 1659800057
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((long)0, (x, y) -> x + y);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1rundak4.java:20)\n"
  stdout: ''
  timestamp: 1659800057
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i +=\
    \ 2) {\n            if (lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfpc57w5.java:23)\n"
  stdout: ''
  timestamp: 1659800057
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> (x % 2 == 0)).reduce((long)0,\
    \ (x, y) -> x + y);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb8b90jk3.java:17)\n"
  stdout: ''
  timestamp: 1659800057
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).mapToLong(x -> x).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq1ez2k6d.java:20)\n"
  stdout: ''
  timestamp: 1659800057
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6cbzsro.java:17)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 1).reduce((x, y) -> x + y).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4p6yej.java:20)\n"
  stdout: ''

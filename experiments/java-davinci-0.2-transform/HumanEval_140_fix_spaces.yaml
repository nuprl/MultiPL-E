name: HumanEval_140_fix_spaces
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
  \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
  \ all consecutive spaces with - \n    // >>> fixSpaces((\" Example\"))\n    // (\"\
  Example\")\n    // >>> fixSpaces((\" Example 1\"))\n    // (\"Example_1\")\n   \
  \ // >>> fixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>> fixSpaces((\"\
  \ Example 3\"))\n    // (\"_Example-3\")\n    public static String fixSpaces(String\
  \ text) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
  Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"\
  Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"\
  Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"\
  Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\"\
  )));\n    }\n\n}\n"
completions: ['        return text.replaceAll("\\s+", "_");', '        return text.replaceAll("\\s{2,}",
    "-").replaceAll(" ", "_");', '        return text.replaceAll("\\s+", "-");', '        return
    text.replaceAll("\\s+", " ").replaceAll(" ", "_");', '        return text.replaceAll("\\s+",
    "_");', '        return text;', "        if (text == null) {\n            return\
    \ null;\n        }\n        StringBuilder sb = new StringBuilder();\n        int\
    \ count = 0;\n        for (int i = 0; i < text.length(); i++) {\n            if\
    \ (text.charAt(i) == ' ') {\n                count++;\n                if (count\
    \ == 1) {\n                    sb.append(\"_\");\n                } else if (count\
    \ == 2) {\n                    sb.append(\"_\");\n                } else {\n \
    \                   sb.append(\"-\");\n                }\n            } else {\n\
    \                count = 0;\n                sb.append(text.charAt(i));\n    \
    \        }\n        }\n        return sb.toString();", "        // TODO: Implement\
    \ this method\n        return \"\";", '        return text.replaceAll("\\s{2,}",
    "-").replaceAll("\\s", "_");', '        return text.replaceAll("\\s{2,}", "-").replaceAll("\\s",
    "_");', '        return text.replaceAll("\\s+", "_");', '        return text.replaceAll("\\s+",
    "_");', '        return text.replaceAll("\\s{2,}", "-").replaceAll("\\s", "_");',
  "        StringBuilder sb = new StringBuilder();\n        int count = 0;\n     \
    \   for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                count++;\n                if (count > 2) {\n    \
    \                sb.append('-');\n                } else {\n                 \
    \   sb.append('_');\n                }\n            } else {\n               \
    \ count = 0;\n                sb.append(text.charAt(i));\n            }\n    \
    \    }\n        return sb.toString();", '        return text.replaceAll("\\s+",
    " ").replaceAll(" ", "_");', "        String result = \"\";\n        int count\
    \ = 0;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ == ' ') {\n                count++;\n            } else {\n                count\
    \ = 0;\n            }\n            if (count == 1) {\n                result +=\
    \ \"_\";\n            } else if (count == 2) {\n                result += \"-\"\
    ;\n            } else if (count > 2) {\n                continue;\n          \
    \  } else {\n                result += text.charAt(i);\n            }\n      \
    \  }\n        return result;", '        return text.replaceAll("\\s+", " ").replaceAll("
    ", "_");', '        return text.replaceAll("\\s+", " ").replaceAll(" ", "_");',
  '        return text.replaceAll("\\s+", " ").replaceAll(" ", "_");', "        //\
    \ TODO: Implement this method\n        return null;"]
stop_tokens:
- "\n    }\n"

language: java
name: HumanEval_158_find_max
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdb31k4bb.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // your code here\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpubfvpess.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // your code here\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpubfvpess.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph8kbhimk.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = words.get(0);\n        int maxUniq = 0;\n   \
    \     for (String word : words) {\n            int uniq = 0;\n            for\
    \ (int i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    uniq++;\n                }\n            }\n   \
    \         if (uniq > maxUniq) {\n                max = word;\n               \
    \ maxUniq = uniq;\n            }\n        }\n        return max;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqm68a5t.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = words.get(0);\n        int maxCount = 0;\n  \
    \      for (String word : words) {\n            int count = 0;\n            for\
    \ (int i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > maxCount) {\n                maxCount = count;\n      \
    \          max = word;\n            }\n        }\n        return max;\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_ag1eyd.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int unique = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max) {\n                max = unique;\n             \
    \   maxWord = word;\n            }\n        }\n        return maxWord;\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprjz4aa3m.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(Problem::countUniqueChars)).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1sw8jr06.java:20: error: invalid method reference\n        return\
    \ words.stream().max(Comparator.comparing(Problem::countUniqueChars)).get();\n\
    \                                                       ^\n  cannot find symbol\n\
    \    symbol:   method countUniqueChars()\n    location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(word -> word.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0b04evc9.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = words.get(0);\n        for (String word : words)\
    \ {\n            if (word.length() > max.length()) {\n                max = word;\n\
    \            }\n        }\n        return max;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpni_d3fqj.java:30)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6fbjxeh6.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxString = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxString\
    \ = word;\n            }\n        }\n        return maxString;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptm5chqvj.java:38)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph8kbhimk.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_size = 0;\n        for\
    \ (String word : words) {\n            int size = (int)word.chars().distinct().count();\n\
    \            if (size > max_size) {\n                max = word;\n           \
    \     max_size = size;\n            }\n        }\n        return max;\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nh1cndy.java:33)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(Problem::countUniqueChars).thenComparing(String::compareTo)).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsb5dpvra.java:20: error: invalid method reference\n        return\
    \ words.stream().max(Comparator.comparing(Problem::countUniqueChars).thenComparing(String::compareTo)).get();\n\
    \                                                       ^\n  cannot find symbol\n\
    \    symbol:   method countUniqueChars()\n    location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdb31k4bb.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdb31k4bb.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(word -> word.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0b04evc9.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxString = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxString\
    \ = word;\n            }\n        }\n        return maxString;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptm5chqvj.java:38)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparingInt(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsv7z22ui.java:20: error: incompatible types: cannot infer type-variable(s)\
    \ T\n        return words.stream().max(Comparator.comparingInt(s -> s.chars().distinct().count())).get();\n\
    \                                                         ^\n    (argument mismatch;\
    \ bad return type in lambda expression\n      possible lossy conversion from long\
    \ to int)\n  where T is a type-variable:\n    T extends Object declared in method\
    \ <T>comparingInt(ToIntFunction<? super T>)\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(word -> word.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0b04evc9.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph8kbhimk.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int unique = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max) {\n                max = unique;\n             \
    \   maxWord = word;\n            }\n        }\n        return maxWord;\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprjz4aa3m.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr0nlc_88.java:38)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(new Comparator<String>() {\n   \
    \         public int compare(String a, String b) {\n                int a_len\
    \ = a.chars().distinct().count();\n                int b_len = b.chars().distinct().count();\n\
    \                if (a_len == b_len) {\n                    return a.compareTo(b);\n\
    \                }\n                return b_len - a_len;\n            }\n   \
    \     }).get();\n    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1vo5xx39.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n                int a_len = a.chars().distinct().count();\n\
    \                                                      ^\n/tmp/tmp1vo5xx39.java:23:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \            int b_len = b.chars().distinct().count();\n                     \
    \                                 ^\n2 errors\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdb31k4bb.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6fbjxeh6.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(new Comparator<String>() {\n   \
    \         public int compare(String a, String b) {\n                int a_len\
    \ = a.chars().distinct().count();\n                int b_len = b.chars().distinct().count();\n\
    \                if (a_len == b_len) {\n                    return a.compareTo(b);\n\
    \                }\n                return b_len - a_len;\n            }\n   \
    \     }).get();\n    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1vo5xx39.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n                int a_len = a.chars().distinct().count();\n\
    \                                                      ^\n/tmp/tmp1vo5xx39.java:23:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \            int b_len = b.chars().distinct().count();\n                     \
    \                                 ^\n2 errors\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here.\n        return null;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdwklagv3.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparingInt(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsv7z22ui.java:20: error: incompatible types: cannot infer type-variable(s)\
    \ T\n        return words.stream().max(Comparator.comparingInt(s -> s.chars().distinct().count())).get();\n\
    \                                                         ^\n    (argument mismatch;\
    \ bad return type in lambda expression\n      possible lossy conversion from long\
    \ to int)\n  where T is a type-variable:\n    T extends Object declared in method\
    \ <T>comparingInt(ToIntFunction<? super T>)\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(new Comparator<String>() {\n   \
    \         public int compare(String a, String b) {\n                int a_len\
    \ = a.chars().distinct().count();\n                int b_len = b.chars().distinct().count();\n\
    \                if (a_len == b_len) {\n                    return a.compareTo(b);\n\
    \                }\n                return b_len - a_len;\n            }\n   \
    \     }).get();\n    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1vo5xx39.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n                int a_len = a.chars().distinct().count();\n\
    \                                                      ^\n/tmp/tmp1vo5xx39.java:23:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \            int b_len = b.chars().distinct().count();\n                     \
    \                                 ^\n2 errors\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            if (word.length() > max) {\n          \
    \      max = word.length();\n                maxWord = word;\n            }\n\
    \        }\n        return maxWord;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzua1wmoz.java:32)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr0nlc_88.java:38)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // your code here\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpubfvpess.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph8kbhimk.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdb31k4bb.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr0nlc_88.java:38)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph8kbhimk.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String maxWord = \"\";\n        int maxUnique = 0;\n     \
    \   for (String word : words) {\n            int unique = 0;\n            for\
    \ (int i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > maxUnique) {\n                maxUnique = unique;\n \
    \               maxWord = word;\n            }\n        }\n        return maxWord;\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcuomg4dl.java:38)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdb31k4bb.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph8kbhimk.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph8kbhimk.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here.\n        return \"\";\n    }\n  \
    \  public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2nkrvgc9.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = (int)word.chars().distinct().count();\n\
    \            if (count > max) {\n                max = count;\n              \
    \  maxWord = word;\n            }\n        }\n        return maxWord;\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwzop08np.java:33)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            Set<Character> set = new HashSet<Character>();\n\
    \            for (int i = 0; i < word.length(); i++) {\n                set.add(word.charAt(i));\n\
    \            }\n            if (set.size() > max) {\n                max = set.size();\n\
    \                maxWord = word;\n            }\n        }\n        return maxWord;\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw1chcdad.java:36)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr0nlc_88.java:38)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (char c\
    \ : word.toCharArray()) {\n                if (word.indexOf(c) == word.lastIndexOf(c))\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphux4dhja.java:38)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(Problem::countUniqueChars)).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1sw8jr06.java:20: error: invalid method reference\n        return\
    \ words.stream().max(Comparator.comparing(Problem::countUniqueChars)).get();\n\
    \                                                       ^\n  cannot find symbol\n\
    \    symbol:   method countUniqueChars()\n    location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6fbjxeh6.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here.\n        return \"\";\n    }\n  \
    \  public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2nkrvgc9.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int maxCount = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > maxCount) {\n                maxCount = count;\n      \
    \          max = word;\n            }\n        }\n        return max;\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm0xoxlvo.java:38)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int maxUnique = 0;\n        for\
    \ (String word : words) {\n            int unique = 0;\n            for (char\
    \ c : word.toCharArray()) {\n                if (word.indexOf(c) == word.lastIndexOf(c))\
    \ {\n                    unique++;\n                }\n            }\n       \
    \     if (unique > maxUnique) {\n                maxUnique = unique;\n       \
    \         max = word;\n            } else if (unique == maxUnique) {\n       \
    \         max = word.compareTo(max) < 0 ? word : max;\n            }\n       \
    \ }\n        return max;\n    }\n    public static void main(String[] args) {\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprglfwqnx.java:41)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = words.get(0);\n        int max_count = max.length();\n\
    \        for (int i = 1; i < words.size(); i++) {\n            String word = words.get(i);\n\
    \            int count = word.length();\n            if (count > max_count) {\n\
    \                max = word;\n                max_count = count;\n           \
    \ }\n        }\n        return max;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplw1lhg3q.java:34)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6fbjxeh6.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdb31k4bb.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here.\n        return \"\";\n    }\n  \
    \  public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2nkrvgc9.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // your code here\n        return null;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpuar5gtmp.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6fbjxeh6.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return null;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpi4uprhvo.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int maxCount = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > maxCount) {\n                maxCount = count;\n      \
    \          max = word;\n            }\n        }\n        return max;\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm0xoxlvo.java:38)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = words.get(0);\n        int max_count = 0;\n \
    \       for (String word : words) {\n            int count = 0;\n            for\
    \ (int i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ul1id4b.java:38)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int unique = 0;\n            for (char\
    \ c : word.toCharArray()) {\n                if (word.indexOf(c) == word.lastIndexOf(c))\
    \ {\n                    unique++;\n                }\n            }\n       \
    \     if (unique > max) {\n                max = unique;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppv91wse_.java:38)\n"
  stdout: ''
  timestamp: 1659798334
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = words.get(0);\n        int maxUnique = unique(max);\n\
    \        for (String word : words) {\n            int unique = unique(word);\n\
    \            if (unique > maxUnique) {\n                max = word;\n        \
    \        maxUnique = unique;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpladuq3wk.java:21: error: cannot find symbol\n        int maxUnique\
    \ = unique(max);\n                        ^\n  symbol:   method unique(String)\n\
    \  location: class Problem\n/tmp/tmpladuq3wk.java:23: error: cannot find symbol\n\
    \            int unique = unique(word);\n                         ^\n  symbol:\
    \   method unique(String)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798334
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here.\n        return \"\";\n    }\n  \
    \  public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2nkrvgc9.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(Problem::numUniqueChars)).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgtfgncmj.java:20: error: invalid method reference\n        return\
    \ words.stream().max(Comparator.comparing(Problem::numUniqueChars)).get();\n \
    \                                                      ^\n  cannot find symbol\n\
    \    symbol:   method numUniqueChars()\n    location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798334
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdb31k4bb.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = words.get(0);\n        int max_count = countUnique(max);\n\
    \        for (int i = 1; i < words.size(); i++) {\n            String word = words.get(i);\n\
    \            int count = countUnique(word);\n            if (count > max_count)\
    \ {\n                max = word;\n                max_count = count;\n       \
    \     } else if (count == max_count) {\n                if (word.compareTo(max)\
    \ < 0) {\n                    max = word;\n                    max_count = count;\n\
    \                }\n            }\n        }\n        return max;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5i0p28l_.java:21: error: cannot find symbol\n        int max_count\
    \ = countUnique(max);\n                        ^\n  symbol:   method countUnique(String)\n\
    \  location: class Problem\n/tmp/tmp5i0p28l_.java:24: error: cannot find symbol\n\
    \            int count = countUnique(word);\n                        ^\n  symbol:\
    \   method countUnique(String)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798334
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph8kbhimk.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph8kbhimk.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparingInt(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsv7z22ui.java:20: error: incompatible types: cannot infer type-variable(s)\
    \ T\n        return words.stream().max(Comparator.comparingInt(s -> s.chars().distinct().count())).get();\n\
    \                                                         ^\n    (argument mismatch;\
    \ bad return type in lambda expression\n      possible lossy conversion from long\
    \ to int)\n  where T is a type-variable:\n    T extends Object declared in method\
    \ <T>comparingInt(ToIntFunction<? super T>)\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxString = \"\";\n        for\
    \ (String word : words) {\n            int num = 0;\n            for (int i =\
    \ 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    num++;\n                }\n            }\n    \
    \        if (num > max) {\n                max = num;\n                maxString\
    \ = word;\n            }\n        }\n        return maxString;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjm46or9j.java:38)\n"
  stdout: ''
  timestamp: 1659798334
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String res = \"\";\n        for (String\
    \ word : words) {\n            int count = 0;\n            for (int i = 0; i <\
    \ word.length(); i++) {\n                if (word.indexOf(word.charAt(i)) == i)\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > max) {\n                max = count;\n                res = word;\n\
    \            }\n        }\n        return res;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbmfq6z95.java:38)\n"
  stdout: ''
  timestamp: 1659798334
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6fbjxeh6.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr0nlc_88.java:38)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(Problem::countUniqueChars).thenComparing(String::compareTo)).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsb5dpvra.java:20: error: invalid method reference\n        return\
    \ words.stream().max(Comparator.comparing(Problem::countUniqueChars).thenComparing(String::compareTo)).get();\n\
    \                                                       ^\n  cannot find symbol\n\
    \    symbol:   method countUniqueChars()\n    location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6fbjxeh6.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // write your code here\n        return \"\";\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1lsa3faj.java:24)\n"
  stdout: ''
  timestamp: 1659798334
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return null;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvm5d5moh.java:24)\n"
  stdout: ''
  timestamp: 1659798334
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdb31k4bb.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return null;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpvm5d5moh.java:24)\n"
  stdout: ''
  timestamp: 1659798334
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6fbjxeh6.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx3oz5tdn.java:38)\n"
  stdout: ''
  timestamp: 1659798334
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6fbjxeh6.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6fbjxeh6.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = words.get(0);\n        int maxCount = 0;\n  \
    \      for (String word : words) {\n            int count = 0;\n            for\
    \ (int i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > maxCount) {\n                maxCount = count;\n      \
    \          max = word;\n            }\n        }\n        return max;\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_ag1eyd.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String max_word = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (char c\
    \ : word.toCharArray()) {\n                if (word.indexOf(c) == word.lastIndexOf(c))\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > max) {\n                max = count;\n                max_word\
    \ = word;\n            }\n        }\n        return max_word;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj2hr3xf9.java:38)\n"
  stdout: ''
  timestamp: 1659798334
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = words.get(0);\n        for (String word : words)\
    \ {\n            if (word.length() > max.length()) {\n                max = word;\n\
    \            }\n        }\n        return max;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpni_d3fqj.java:30)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph8kbhimk.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = words.get(0);\n        int maxCount = 0;\n  \
    \      for (String word : words) {\n            int count = 0;\n            for\
    \ (int i = 0; i < word.length(); i++) {\n                char c = word.charAt(i);\n\
    \                if (word.indexOf(c) == i) {\n                    count++;\n \
    \               }\n            }\n            if (count > maxCount) {\n      \
    \          maxCount = count;\n                max = word;\n            }\n   \
    \     }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ecd6gjh.java:39)\n"
  stdout: ''
  timestamp: 1659798334
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream().max(Comparator.comparing(s -> s.chars().distinct().count())).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctyo0gx.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6fbjxeh6.java:24)\n"
  stdout: ''
  timestamp: 1659798333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpmk9p9tja.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\"))))\n    // (\"string\")\n    // >>> findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\"))))\n    // (\"enam\")\n    // >>>\
    \ findMax((new ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"\
    bb\", (String)\"cc\"))))\n    // (\"aaaaaaa\")\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx3oz5tdn.java:38)\n"
  stdout: ''
  timestamp: 1659798334

name: HumanEval_151_double_the_difference
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a list of numbers, return the sum of squares of the\
  \ numbers\n    // in the list that are odd. Ignore numbers that are negative or\
  \ not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
  \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
  \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
  \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l, (long)-2l))))\n\
  \    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
  \    // (0l)\n    // If the input list is empty, return 0.\n    public static long\
  \ doubleTheDifference(ArrayList<Float> lst) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
  \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
  \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new\
  \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) == (0l));\n\
  \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
  \ (float)-20.0f, (float)-30.0f)))) == (0l));\n    assert(doubleTheDifference((new\
  \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
  \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
  \ (float)3.0f, (float)5.0f)))) == (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
  \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
  \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
completions: ['        return 0;', '        return 0;', '        return 0;', '        return
    0;', '        return 0;', '        return 0;', '        return 0l;', '        return
    0;', '        return 0l;', '        return 0;', '        return 0;', '        return
    0;', '        return 0;', '        return 0;', '        return 0;', '        return
    0;', '        return 0;', '        return 0;', '        return 0;', '        return
    0;']
stop_tokens:
- "\n    }\n"

name: HumanEval_54_same_chars
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Check if two words have the same characters.\n    // >>>\
  \ sameChars((\"eabcdzzzz\"), (\"dddzzzzzzzddeddabc\"))\n    // (true)\n    // >>>\
  \ sameChars((\"abcd\"), (\"dddddddabc\"))\n    // (true)\n    // >>> sameChars((\"\
  dddddddabc\"), (\"abcd\"))\n    // (true)\n    // >>> sameChars((\"eabcd\"), (\"\
  dddddddabc\"))\n    // (false)\n    // >>> sameChars((\"abcd\"), (\"dddddddabce\"\
  ))\n    // (false)\n    // >>> sameChars((\"eabcdzzzz\"), (\"dddzzzzzzzddddabc\"\
  ))\n    // (false)\n    public static boolean sameChars(String s0, String s1) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(sameChars((\"\
  eabcdzzzz\"), (\"dddzzzzzzzddeddabc\")) == (true));\n    assert(sameChars((\"abcd\"\
  ), (\"dddddddabc\")) == (true));\n    assert(sameChars((\"dddddddabc\"), (\"abcd\"\
  )) == (true));\n    assert(sameChars((\"eabcd\"), (\"dddddddabc\")) == (false));\n\
  \    assert(sameChars((\"abcd\"), (\"dddddddabcf\")) == (false));\n    assert(sameChars((\"\
  eabcdzzzz\"), (\"dddzzzzzzzddddabc\")) == (false));\n    assert(sameChars((\"aabb\"\
  ), (\"aaccc\")) == (false));\n    }\n\n}\n"
completions: ["        if (s0.length() != s1.length()) {\n            return false;\n\
    \        }\n        int[] c0 = new int[26];\n        int[] c1 = new int[26];\n\
    \        for (int i = 0; i < s0.length(); i++) {\n            c0[s0.charAt(i)\
    \ - 'a']++;\n            c1[s1.charAt(i) - 'a']++;\n        }\n        for (int\
    \ i = 0; i < 26; i++) {\n            if (c0[i] != c1[i]) {\n                return\
    \ false;\n            }\n        }\n        return true;", '        return false;',
  "        if (s0.length() != s1.length()) {\n            return false;\n        }\n\
    \        int[] c0 = new int[26];\n        int[] c1 = new int[26];\n        for\
    \ (int i = 0; i < s0.length(); i++) {\n            c0[s0.charAt(i) - 'a']++;\n\
    \            c1[s1.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i <\
    \ 26; i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (s0.length() !=\
    \ s1.length()) {\n            return false;\n        }\n        int[] count =\
    \ new int[26];\n        for (int i = 0; i < s0.length(); i++) {\n            count[s0.charAt(i)\
    \ - 'a']++;\n            count[s1.charAt(i) - 'a']--;\n        }\n        for\
    \ (int i = 0; i < 26; i++) {\n            if (count[i] != 0) {\n             \
    \   return false;\n            }\n        }\n        return true;", "        if\
    \ (s0.length() != s1.length()) {\n            return false;\n        }\n     \
    \   Map<Character, Integer> map0 = new HashMap<>();\n        Map<Character, Integer>\
    \ map1 = new HashMap<>();\n        for (int i = 0; i < s0.length(); i++) {\n \
    \           char c0 = s0.charAt(i);\n            char c1 = s1.charAt(i);\n   \
    \         map0.put(c0, map0.getOrDefault(c0, 0) + 1);\n            map1.put(c1,\
    \ map1.getOrDefault(c1, 0) + 1);\n        }\n        return map0.equals(map1);",
  "        if (s0.length() != s1.length()) {\n            return false;\n        }\n\
    \        int[] c0 = new int[26];\n        int[] c1 = new int[26];\n        for\
    \ (int i = 0; i < s0.length(); i++) {\n            c0[s0.charAt(i) - 'a']++;\n\
    \            c1[s1.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i <\
    \ 26; i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (s0.length() !=\
    \ s1.length()) {\n            return false;\n        }\n        int[] c0 = new\
    \ int[26];\n        int[] c1 = new int[26];\n        for (int i = 0; i < s0.length();\
    \ i++) {\n            c0[s0.charAt(i) - 'a']++;\n            c1[s1.charAt(i) -\
    \ 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i]\
    \ != c1[i]) {\n                return false;\n            }\n        }\n     \
    \   return true;", "        int[] c0 = new int[26];\n        int[] c1 = new int[26];\n\
    \        for (int i = 0; i < s0.length(); i++) {\n            c0[s0.charAt(i)\
    \ - 'a']++;\n        }\n        for (int i = 0; i < s1.length(); i++) {\n    \
    \        c1[s1.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        // Your code here.\n\
    \        return false;", "        int[] c0 = new int[26];\n        int[] c1 =\
    \ new int[26];\n        for (int i = 0; i < s0.length(); i++) {\n            c0[s0.charAt(i)\
    \ - 'a']++;\n        }\n        for (int i = 0; i < s1.length(); i++) {\n    \
    \        c1[s1.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        // TODO: Implement me!\n\
    \        return false;", "        if (s0.length() != s1.length()) {\n        \
    \    return false;\n        }\n        int[] a = new int[26];\n        int[] b\
    \ = new int[26];\n        for (int i = 0; i < s0.length(); i++) {\n          \
    \  a[s0.charAt(i) - 'a']++;\n            b[s1.charAt(i) - 'a']++;\n        }\n\
    \        for (int i = 0; i < 26; i++) {\n            if (a[i] != b[i]) {\n   \
    \             return false;\n            }\n        }\n        return true;",
  "        // TODO: Implement this function.\n        return false;", "        if\
    \ (s0.length() != s1.length()) {\n            return false;\n        }\n     \
    \   int[] c0 = new int[26];\n        int[] c1 = new int[26];\n        for (int\
    \ i = 0; i < s0.length(); i++) {\n            c0[s0.charAt(i) - 'a']++;\n    \
    \        c1[s1.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        if (s0.length() != s1.length())\
    \ {\n            return false;\n        }\n        int[] counts0 = new int[26];\n\
    \        int[] counts1 = new int[26];\n        for (int i = 0; i < s0.length();\
    \ i++) {\n            counts0[s0.charAt(i) - 'a']++;\n            counts1[s1.charAt(i)\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (counts0[i] != counts1[i]) {\n                return false;\n            }\n\
    \        }\n        return true;", "        // Your code here\n        return\
    \ false;", "        int[] c0 = new int[26];\n        int[] c1 = new int[26];\n\
    \        for (int i = 0; i < s0.length(); i++) {\n            c0[s0.charAt(i)\
    \ - 'a']++;\n        }\n        for (int i = 0; i < s1.length(); i++) {\n    \
    \        c1[s1.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < 26;\
    \ i++) {\n            if (c0[i] != c1[i]) {\n                return false;\n \
    \           }\n        }\n        return true;", "        if (s0.length() != s1.length())\
    \ {\n            return false;\n        }\n        int[] c0 = new int[26];\n \
    \       int[] c1 = new int[26];\n        for (int i = 0; i < s0.length(); i++)\
    \ {\n            c0[s0.charAt(i) - 'a']++;\n            c1[s1.charAt(i) - 'a']++;\n\
    \        }\n        for (int i = 0; i < 26; i++) {\n            if (c0[i] != c1[i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        int[] c0 = new int[26];\n        int[] c1 = new int[26];\n        for (int\
    \ i = 0; i < s0.length(); i++) {\n            c0[s0.charAt(i) - 'a']++;\n    \
    \    }\n        for (int i = 0; i < s1.length(); i++) {\n            c1[s1.charAt(i)\
    \ - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if\
    \ (c0[i] != c1[i]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        if (s0.length() != s1.length()) {\n         \
    \   return false;\n        }\n        Map<Character, Integer> m0 = new HashMap<>();\n\
    \        Map<Character, Integer> m1 = new HashMap<>();\n        for (int i = 0;\
    \ i < s0.length(); i++) {\n            char c0 = s0.charAt(i);\n            char\
    \ c1 = s1.charAt(i);\n            if (m0.containsKey(c0)) {\n                m0.put(c0,\
    \ m0.get(c0) + 1);\n            } else {\n                m0.put(c0, 1);\n   \
    \         }\n            if (m1.containsKey(c1)) {\n                m1.put(c1,\
    \ m1.get(c1) + 1);\n            } else {\n                m1.put(c1, 1);\n   \
    \         }\n        }\n        return m0.equals(m1);"]
stop_tokens:
- "\n    }\n"

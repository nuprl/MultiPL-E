name: HumanEval_144_simplify
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Your task is to implement a function that will simplify\
  \ the expression\n    // x * n. The function returns True if x * n evaluates to\
  \ a whole number and False\n    // otherwise. Both x and n, are string representation\
  \ of a fraction, and have the following format,\n    // <numerator>/<denominator>\
  \ where both numerator and denominator are positive whole numbers.\n    // You can\
  \ assume that x, and n are valid fractions, and do not have zero as denominator.\n\
  \    // >>> simplify((\"1/5\"), (\"5/1\"))\n    // (true)\n    // >>> simplify((\"\
  1/6\"), (\"2/1\"))\n    // (false)\n    // >>> simplify((\"7/10\"), (\"10/2\"))\n\
  \    // (false)\n    public static boolean simplify(String x, String n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(simplify((\"\
  1/5\"), (\"5/1\")) == (true));\n    assert(simplify((\"1/6\"), (\"2/1\")) == (false));\n\
  \    assert(simplify((\"5/1\"), (\"3/1\")) == (true));\n    assert(simplify((\"\
  7/10\"), (\"10/2\")) == (false));\n    assert(simplify((\"2/10\"), (\"50/10\"))\
  \ == (true));\n    assert(simplify((\"7/2\"), (\"4/2\")) == (true));\n    assert(simplify((\"\
  11/6\"), (\"6/1\")) == (true));\n    assert(simplify((\"2/3\"), (\"5/2\")) == (false));\n\
  \    assert(simplify((\"5/2\"), (\"3/5\")) == (false));\n    assert(simplify((\"\
  2/4\"), (\"8/4\")) == (true));\n    assert(simplify((\"2/4\"), (\"4/2\")) == (true));\n\
  \    assert(simplify((\"1/5\"), (\"5/1\")) == (true));\n    assert(simplify((\"\
  1/5\"), (\"1/5\")) == (false));\n    }\n\n}\n"
completions: ["        String[] x_arr = x.split(\"/\");\n        String[] n_arr =\
    \ n.split(\"/\");\n        int x_num = Integer.parseInt(x_arr[0]);\n        int\
    \ x_den = Integer.parseInt(x_arr[1]);\n        int n_num = Integer.parseInt(n_arr[0]);\n\
    \        int n_den = Integer.parseInt(n_arr[1]);\n        int num = x_num * n_den;\n\
    \        int den = x_den * n_num;\n        return num % den == 0;", "        String[]\
    \ x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"/\");\n    \
    \    int x_numerator = Integer.parseInt(x_parts[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_parts[1]);\n        int n_numerator = Integer.parseInt(n_parts[0]);\n\
    \        int n_denominator = Integer.parseInt(n_parts[1]);\n        int product_numerator\
    \ = x_numerator * n_numerator;\n        int product_denominator = x_denominator\
    \ * n_denominator;\n        return product_numerator % product_denominator ==\
    \ 0;", "        String[] xs = x.split(\"/\");\n        String[] ns = n.split(\"\
    /\");\n        int xn = Integer.parseInt(xs[0]);\n        int xd = Integer.parseInt(xs[1]);\n\
    \        int nn = Integer.parseInt(ns[0]);\n        int nd = Integer.parseInt(ns[1]);\n\
    \        return (xn * nd) % (xd * nn) == 0;", "        String[] x_ = x.split(\"\
    /\");\n        String[] n_ = n.split(\"/\");\n        int x_n = Integer.parseInt(x_[0]);\n\
    \        int x_d = Integer.parseInt(x_[1]);\n        int n_n = Integer.parseInt(n_[0]);\n\
    \        int n_d = Integer.parseInt(n_[1]);\n        int x_n_ = x_n * n_d;\n \
    \       int x_d_ = x_d * n_n;\n        return x_n_ % x_d_ == 0;", "        String[]\
    \ x_split = x.split(\"/\");\n        String[] n_split = n.split(\"/\");\n    \
    \    int x_numerator = Integer.parseInt(x_split[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_split[1]);\n        int n_numerator = Integer.parseInt(n_split[0]);\n\
    \        int n_denominator = Integer.parseInt(n_split[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return numerator % denominator == 0;", "        String[] x_split = x.split(\"\
    /\");\n        String[] n_split = n.split(\"/\");\n        int x_num = Integer.parseInt(x_split[0]);\n\
    \        int x_den = Integer.parseInt(x_split[1]);\n        int n_num = Integer.parseInt(n_split[0]);\n\
    \        int n_den = Integer.parseInt(n_split[1]);\n        int x_num_n = x_num\
    \ * n_den;\n        int x_den_n = x_den * n_num;\n        if (x_num_n % x_den_n\
    \ == 0) {\n            return true;\n        }\n        return false;", "    \
    \    // Your code here\n        return false;", "        String[] x_parts = x.split(\"\
    /\");\n        String[] n_parts = n.split(\"/\");\n        int x_num = Integer.parseInt(x_parts[0]);\n\
    \        int x_den = Integer.parseInt(x_parts[1]);\n        int n_num = Integer.parseInt(n_parts[0]);\n\
    \        int n_den = Integer.parseInt(n_parts[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return num % den == 0;", " \
    \       String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        int x_num = Integer.parseInt(x_split[0]);\n        int x_den =\
    \ Integer.parseInt(x_split[1]);\n        int n_num = Integer.parseInt(n_split[0]);\n\
    \        int n_den = Integer.parseInt(n_split[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        if (num % den == 0) {\n  \
    \          return true;\n        }\n        return false;", "        String[]\
    \ x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"/\");\n    \
    \    BigInteger x_numerator = new BigInteger(x_parts[0]);\n        BigInteger\
    \ x_denominator = new BigInteger(x_parts[1]);\n        BigInteger n_numerator\
    \ = new BigInteger(n_parts[0]);\n        BigInteger n_denominator = new BigInteger(n_parts[1]);\n\
    \        BigInteger numerator = x_numerator.multiply(n_denominator);\n       \
    \ BigInteger denominator = x_denominator.multiply(n_numerator);\n        BigInteger\
    \ gcd = numerator.gcd(denominator);\n        numerator = numerator.divide(gcd);\n\
    \        denominator = denominator.divide(gcd);\n        return numerator.mod(denominator).equals(BigInteger.ZERO);",
  "        String[] x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"\
    /\");\n        double x_num = Double.parseDouble(x_parts[0]);\n        double\
    \ x_den = Double.parseDouble(x_parts[1]);\n        double n_num = Double.parseDouble(n_parts[0]);\n\
    \        double n_den = Double.parseDouble(n_parts[1]);\n        double result\
    \ = x_num * n_num / (x_den * n_den);\n        return result % 1 == 0;", "    \
    \    String[] x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_parts[1]);\n        int n_numerator = Integer.parseInt(n_parts[0]);\n\
    \        int n_denominator = Integer.parseInt(n_parts[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return numerator % denominator == 0;", "        String[] x_split = x.split(\"\
    /\");\n        String[] n_split = n.split(\"/\");\n        int x_num = Integer.parseInt(x_split[0]);\n\
    \        int x_den = Integer.parseInt(x_split[1]);\n        int n_num = Integer.parseInt(n_split[0]);\n\
    \        int n_den = Integer.parseInt(n_split[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return num % den == 0;", " \
    \       String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        int x_num = Integer.parseInt(x_split[0]);\n        int x_den =\
    \ Integer.parseInt(x_split[1]);\n        int n_num = Integer.parseInt(n_split[0]);\n\
    \        int n_den = Integer.parseInt(n_split[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        if (num % den == 0) {\n  \
    \          return true;\n        }\n        return false;", "        String[]\
    \ x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"/\");\n    \
    \    int x_numerator = Integer.parseInt(x_parts[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_parts[1]);\n        int n_numerator = Integer.parseInt(n_parts[0]);\n\
    \        int n_denominator = Integer.parseInt(n_parts[1]);\n        int x_numerator_times_n_denominator\
    \ = x_numerator * n_denominator;\n        int x_denominator_times_n_numerator\
    \ = x_denominator * n_numerator;\n        return x_numerator_times_n_denominator\
    \ % x_denominator_times_n_numerator == 0;", "        // Your code here\n     \
    \   return false;", "        String[] x_split = x.split(\"/\");\n        String[]\
    \ n_split = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n\
    \        int x_denominator = Integer.parseInt(x_split[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_split[0]);\n        int n_denominator = Integer.parseInt(n_split[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        if (numerator % denominator == 0) {\n\
    \            return true;\n        }\n        return false;", "        String[]\
    \ x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"/\");\n    \
    \    int x_numerator = Integer.parseInt(x_parts[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_parts[1]);\n        int n_numerator = Integer.parseInt(n_parts[0]);\n\
    \        int n_denominator = Integer.parseInt(n_parts[1]);\n        int x_numerator_times_n_denominator\
    \ = x_numerator * n_denominator;\n        int x_denominator_times_n_numerator\
    \ = x_denominator * n_numerator;\n        return x_numerator_times_n_denominator\
    \ % x_denominator_times_n_numerator == 0;", "        String[] xs = x.split(\"\
    /\");\n        String[] ns = n.split(\"/\");\n        BigInteger xn = new BigInteger(xs[0]).multiply(new\
    \ BigInteger(ns[1]));\n        BigInteger xd = new BigInteger(xs[1]).multiply(new\
    \ BigInteger(ns[0]));\n        return xn.mod(xd).equals(BigInteger.ZERO);", " \
    \       String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        int x_num = Integer.parseInt(x_split[0]);\n        int x_den =\
    \ Integer.parseInt(x_split[1]);\n        int n_num = Integer.parseInt(n_split[0]);\n\
    \        int n_den = Integer.parseInt(n_split[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        if (num % den == 0) {\n  \
    \          return true;\n        }\n        return false;", "        String[]\
    \ x_ = x.split(\"/\");\n        String[] n_ = n.split(\"/\");\n        BigInteger\
    \ x_numerator = new BigInteger(x_[0]);\n        BigInteger x_denominator = new\
    \ BigInteger(x_[1]);\n        BigInteger n_numerator = new BigInteger(n_[0]);\n\
    \        BigInteger n_denominator = new BigInteger(n_[1]);\n        BigInteger\
    \ numerator = x_numerator.multiply(n_denominator);\n        BigInteger denominator\
    \ = x_denominator.multiply(n_numerator);\n        BigInteger gcd = numerator.gcd(denominator);\n\
    \        numerator = numerator.divide(gcd);\n        denominator = denominator.divide(gcd);\n\
    \        return numerator.mod(denominator).equals(BigInteger.ZERO);", "      \
    \  String[] x_arr = x.split(\"/\");\n        String[] n_arr = n.split(\"/\");\n\
    \        int x_num = Integer.parseInt(x_arr[0]);\n        int x_den = Integer.parseInt(x_arr[1]);\n\
    \        int n_num = Integer.parseInt(n_arr[0]);\n        int n_den = Integer.parseInt(n_arr[1]);\n\
    \        int num = x_num * n_den;\n        int den = x_den * n_num;\n        if\
    \ (num % den == 0) {\n            return true;\n        }\n        return false;",
  "        String[] x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_parts[1]);\n        int n_numerator = Integer.parseInt(n_parts[0]);\n\
    \        int n_denominator = Integer.parseInt(n_parts[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return numerator % denominator == 0;", "        String[] xs = x.split(\"\
    /\");\n        String[] ns = n.split(\"/\");\n        BigInteger xn = new BigInteger(xs[0]).multiply(new\
    \ BigInteger(ns[1]));\n        BigInteger xd = new BigInteger(xs[1]).multiply(new\
    \ BigInteger(ns[0]));\n        BigInteger gcd = xn.gcd(xd);\n        return xd.divide(gcd).equals(xn.divide(gcd));",
  "        String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        int x_num = Integer.parseInt(x_split[0]);\n        int x_den =\
    \ Integer.parseInt(x_split[1]);\n        int n_num = Integer.parseInt(n_split[0]);\n\
    \        int n_den = Integer.parseInt(n_split[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return num % den == 0;", " \
    \       String[] x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_parts[1]);\n        int n_numerator = Integer.parseInt(n_parts[0]);\n\
    \        int n_denominator = Integer.parseInt(n_parts[1]);\n        int product_numerator\
    \ = x_numerator * n_numerator;\n        int product_denominator = x_denominator\
    \ * n_denominator;\n        int gcd = gcd(product_numerator, product_denominator);\n\
    \        product_numerator /= gcd;\n        product_denominator /= gcd;\n    \
    \    return product_denominator == 1;", "        String[] x_split = x.split(\"\
    /\");\n        String[] n_split = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n\
    \        int x_denominator = Integer.parseInt(x_split[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_split[0]);\n        int n_denominator = Integer.parseInt(n_split[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        return numerator % denominator == 0;",
  "        String[] x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_parts[1]);\n        int n_numerator = Integer.parseInt(n_parts[0]);\n\
    \        int n_denominator = Integer.parseInt(n_parts[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return numerator % denominator == 0;", "        // Your code here\n \
    \       String[] x_arr = x.split(\"/\");\n        String[] n_arr = n.split(\"\
    /\");\n        int x_num = Integer.parseInt(x_arr[0]);\n        int x_den = Integer.parseInt(x_arr[1]);\n\
    \        int n_num = Integer.parseInt(n_arr[0]);\n        int n_den = Integer.parseInt(n_arr[1]);\n\
    \        int num = x_num * n_den;\n        int den = x_den * n_num;\n        return\
    \ (num % den == 0);", "        // Your code here\n        return false;", "  \
    \      String[] x_arr = x.split(\"/\");\n        String[] n_arr = n.split(\"/\"\
    );\n        int x_num = Integer.parseInt(x_arr[0]);\n        int x_den = Integer.parseInt(x_arr[1]);\n\
    \        int n_num = Integer.parseInt(n_arr[0]);\n        int n_den = Integer.parseInt(n_arr[1]);\n\
    \        int num = x_num * n_den;\n        int den = x_den * n_num;\n        int\
    \ gcd = gcd(num, den);\n        return (num / gcd) % (den / gcd) == 0;", "   \
    \     String[] xSplit = x.split(\"/\");\n        String[] nSplit = n.split(\"\
    /\");\n        int xNum = Integer.parseInt(xSplit[0]);\n        int xDen = Integer.parseInt(xSplit[1]);\n\
    \        int nNum = Integer.parseInt(nSplit[0]);\n        int nDen = Integer.parseInt(nSplit[1]);\n\
    \        int xNumNew = xNum * nDen;\n        int xDenNew = xDen * nNum;\n    \
    \    if (xNumNew % xDenNew == 0) {\n            return true;\n        }\n    \
    \    return false;", "        String[] x_parts = x.split(\"/\");\n        String[]\
    \ n_parts = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n\
    \        int x_denominator = Integer.parseInt(x_parts[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_parts[0]);\n        int n_denominator = Integer.parseInt(n_parts[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        return numerator % denominator == 0;",
  "        String[] x_arr = x.split(\"/\");\n        String[] n_arr = n.split(\"/\"\
    );\n        BigInteger x_num = new BigInteger(x_arr[0]);\n        BigInteger x_den\
    \ = new BigInteger(x_arr[1]);\n        BigInteger n_num = new BigInteger(n_arr[0]);\n\
    \        BigInteger n_den = new BigInteger(n_arr[1]);\n        BigInteger res_num\
    \ = x_num.multiply(n_den);\n        BigInteger res_den = x_den.multiply(n_num);\n\
    \        BigInteger gcd = res_num.gcd(res_den);\n        res_num = res_num.divide(gcd);\n\
    \        res_den = res_den.divide(gcd);\n        return res_num.mod(res_den).equals(BigInteger.ZERO);",
  "        String[] x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_parts[1]);\n        int n_numerator = Integer.parseInt(n_parts[0]);\n\
    \        int n_denominator = Integer.parseInt(n_parts[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return numerator % denominator == 0;", "        String[] x_parts = x.split(\"\
    /\");\n        String[] n_parts = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n\
    \        int x_denominator = Integer.parseInt(x_parts[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_parts[0]);\n        int n_denominator = Integer.parseInt(n_parts[1]);\n\
    \        int x_numerator_product = x_numerator * n_numerator;\n        int x_denominator_product\
    \ = x_denominator * n_denominator;\n        if (x_numerator_product % x_denominator_product\
    \ == 0) {\n            return true;\n        } else {\n            return false;\n\
    \        }", "        // Your code here\n        return false;", "        String[]\
    \ x_split = x.split(\"/\");\n        String[] n_split = n.split(\"/\");\n    \
    \    int x_numerator = Integer.parseInt(x_split[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_split[1]);\n        int n_numerator = Integer.parseInt(n_split[0]);\n\
    \        int n_denominator = Integer.parseInt(n_split[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return numerator % denominator == 0;", "        String[] x_split = x.split(\"\
    /\");\n        String[] n_split = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n\
    \        int x_denominator = Integer.parseInt(x_split[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_split[0]);\n        int n_denominator = Integer.parseInt(n_split[1]);\n\
    \        int x_numerator_product = x_numerator * n_denominator;\n        int x_denominator_product\
    \ = x_denominator * n_numerator;\n        if (x_numerator_product % x_denominator_product\
    \ == 0) {\n            return true;\n        } else {\n            return false;\n\
    \        }", "        String[] x_split = x.split(\"/\");\n        String[] n_split\
    \ = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n\
    \        int x_denominator = Integer.parseInt(x_split[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_split[0]);\n        int n_denominator = Integer.parseInt(n_split[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        return (numerator % denominator == 0);",
  "        String[] xs = x.split(\"/\");\n        String[] ns = n.split(\"/\");\n\
    \        int xn = Integer.parseInt(xs[0]);\n        int xd = Integer.parseInt(xs[1]);\n\
    \        int nn = Integer.parseInt(ns[0]);\n        int nd = Integer.parseInt(ns[1]);\n\
    \        int p = xn * nd;\n        int q = xd * nn;\n        return p % q == 0;",
  "        // Your code here\n        return false;", "        String[] x_arr = x.split(\"\
    /\");\n        String[] n_arr = n.split(\"/\");\n        int x_num = Integer.parseInt(x_arr[0]);\n\
    \        int x_den = Integer.parseInt(x_arr[1]);\n        int n_num = Integer.parseInt(n_arr[0]);\n\
    \        int n_den = Integer.parseInt(n_arr[1]);\n        int num = x_num * n_den;\n\
    \        int den = x_den * n_num;\n        if (num % den == 0) {\n           \
    \ return true;\n        }\n        return false;", "        String[] x_ = x.split(\"\
    /\");\n        String[] n_ = n.split(\"/\");\n        int x_n = Integer.parseInt(x_[0]);\n\
    \        int x_d = Integer.parseInt(x_[1]);\n        int n_n = Integer.parseInt(n_[0]);\n\
    \        int n_d = Integer.parseInt(n_[1]);\n        int product_n = x_n * n_n;\n\
    \        int product_d = x_d * n_d;\n        return product_n % product_d == 0;",
  "        String[] x_arr = x.split(\"/\");\n        String[] n_arr = n.split(\"/\"\
    );\n        BigInteger x_numerator = new BigInteger(x_arr[0]);\n        BigInteger\
    \ x_denominator = new BigInteger(x_arr[1]);\n        BigInteger n_numerator =\
    \ new BigInteger(n_arr[0]);\n        BigInteger n_denominator = new BigInteger(n_arr[1]);\n\
    \        BigInteger result_numerator = x_numerator.multiply(n_numerator);\n  \
    \      BigInteger result_denominator = x_denominator.multiply(n_denominator);\n\
    \        BigInteger gcd = result_numerator.gcd(result_denominator);\n        result_numerator\
    \ = result_numerator.divide(gcd);\n        result_denominator = result_denominator.divide(gcd);\n\
    \        return result_denominator.equals(BigInteger.ONE);", "        String[]\
    \ x_ = x.split(\"/\");\n        String[] n_ = n.split(\"/\");\n        int x_n\
    \ = Integer.parseInt(x_[0]);\n        int x_d = Integer.parseInt(x_[1]);\n   \
    \     int n_n = Integer.parseInt(n_[0]);\n        int n_d = Integer.parseInt(n_[1]);\n\
    \        int numerator = x_n * n_d;\n        int denominator = x_d * n_n;\n  \
    \      return numerator % denominator == 0;", "        String[] x_arr = x.split(\"\
    /\");\n        String[] n_arr = n.split(\"/\");\n        int x_num = Integer.parseInt(x_arr[0]);\n\
    \        int x_den = Integer.parseInt(x_arr[1]);\n        int n_num = Integer.parseInt(n_arr[0]);\n\
    \        int n_den = Integer.parseInt(n_arr[1]);\n        int num = x_num * n_den;\n\
    \        int den = x_den * n_num;\n        if (num % den == 0) {\n           \
    \ return true;\n        }\n        return false;", "        String[] x_ = x.split(\"\
    /\");\n        String[] n_ = n.split(\"/\");\n        int x_n = Integer.parseInt(x_[0]);\n\
    \        int x_d = Integer.parseInt(x_[1]);\n        int n_n = Integer.parseInt(n_[0]);\n\
    \        int n_d = Integer.parseInt(n_[1]);\n        int x_n_n = x_n * n_n;\n\
    \        int x_d_d = x_d * n_d;\n        return x_n_n % x_d_d == 0;", "      \
    \  // Your code here\n        return false;", "        String[] xArr = x.split(\"\
    /\");\n        String[] nArr = n.split(\"/\");\n        int xNum = Integer.parseInt(xArr[0]);\n\
    \        int xDen = Integer.parseInt(xArr[1]);\n        int nNum = Integer.parseInt(nArr[0]);\n\
    \        int nDen = Integer.parseInt(nArr[1]);\n        int num = xNum * nDen;\n\
    \        int den = xDen * nNum;\n        return num % den == 0;", "        String[]\
    \ x_nums = x.split(\"/\");\n        String[] n_nums = n.split(\"/\");\n      \
    \  int x_num = Integer.parseInt(x_nums[0]);\n        int x_den = Integer.parseInt(x_nums[1]);\n\
    \        int n_num = Integer.parseInt(n_nums[0]);\n        int n_den = Integer.parseInt(n_nums[1]);\n\
    \        int num = x_num * n_num;\n        int den = x_den * n_den;\n        int\
    \ gcd = gcd(num, den);\n        return den / gcd == 1;", "        String[] x_\
    \ = x.split(\"/\");\n        String[] n_ = n.split(\"/\");\n        int x_n =\
    \ Integer.parseInt(x_[0]);\n        int x_d = Integer.parseInt(x_[1]);\n     \
    \   int n_n = Integer.parseInt(n_[0]);\n        int n_d = Integer.parseInt(n_[1]);\n\
    \        int x_n_ = x_n * n_d;\n        int x_d_ = x_d * n_n;\n        return\
    \ x_n_ % x_d_ == 0;", "        String[] xParts = x.split(\"/\");\n        String[]\
    \ nParts = n.split(\"/\");\n        int xNumerator = Integer.parseInt(xParts[0]);\n\
    \        int xDenominator = Integer.parseInt(xParts[1]);\n        int nNumerator\
    \ = Integer.parseInt(nParts[0]);\n        int nDenominator = Integer.parseInt(nParts[1]);\n\
    \        int numerator = xNumerator * nDenominator;\n        int denominator =\
    \ xDenominator * nNumerator;\n        return numerator % denominator == 0;", " \
    \       String[] x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_parts[1]);\n        int n_numerator = Integer.parseInt(n_parts[0]);\n\
    \        int n_denominator = Integer.parseInt(n_parts[1]);\n        int product_numerator\
    \ = x_numerator * n_numerator;\n        int product_denominator = x_denominator\
    \ * n_denominator;\n        return product_numerator % product_denominator ==\
    \ 0;", "        String[] xArr = x.split(\"/\");\n        String[] nArr = n.split(\"\
    /\");\n        int xNum = Integer.parseInt(xArr[0]);\n        int xDen = Integer.parseInt(xArr[1]);\n\
    \        int nNum = Integer.parseInt(nArr[0]);\n        int nDen = Integer.parseInt(nArr[1]);\n\
    \        int xnNum = xNum * nDen;\n        int xnDen = xDen * nNum;\n        return\
    \ xnNum % xnDen == 0;", "        String[] x_split = x.split(\"/\");\n        String[]\
    \ n_split = n.split(\"/\");\n        int x_num = Integer.parseInt(x_split[0]);\n\
    \        int x_den = Integer.parseInt(x_split[1]);\n        int n_num = Integer.parseInt(n_split[0]);\n\
    \        int n_den = Integer.parseInt(n_split[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return num % den == 0;", '        return
    false;', "        String[] x_split = x.split(\"/\");\n        String[] n_split\
    \ = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n\
    \        int x_denominator = Integer.parseInt(x_split[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_split[0]);\n        int n_denominator = Integer.parseInt(n_split[1]);\n\
    \        int x_numerator_n = x_numerator * n_denominator;\n        int x_denominator_n\
    \ = x_denominator * n_numerator;\n        return x_numerator_n % x_denominator_n\
    \ == 0;", "        String[] x_ = x.split(\"/\");\n        String[] n_ = n.split(\"\
    /\");\n        int x_num = Integer.parseInt(x_[0]);\n        int x_den = Integer.parseInt(x_[1]);\n\
    \        int n_num = Integer.parseInt(n_[0]);\n        int n_den = Integer.parseInt(n_[1]);\n\
    \        int num = x_num * n_num;\n        int den = x_den * n_den;\n        if\
    \ (num % den == 0) {\n            return true;\n        }\n        return false;",
  "        String[] x_arr = x.split(\"/\");\n        String[] n_arr = n.split(\"/\"\
    );\n        int x_num = Integer.parseInt(x_arr[0]);\n        int x_den = Integer.parseInt(x_arr[1]);\n\
    \        int n_num = Integer.parseInt(n_arr[0]);\n        int n_den = Integer.parseInt(n_arr[1]);\n\
    \        int num = x_num * n_den;\n        int den = x_den * n_num;\n        return\
    \ num % den == 0;", "        String[] xs = x.split(\"/\");\n        String[] ns\
    \ = n.split(\"/\");\n        int xn = Integer.parseInt(xs[0]);\n        int xd\
    \ = Integer.parseInt(xs[1]);\n        int nn = Integer.parseInt(ns[0]);\n    \
    \    int nd = Integer.parseInt(ns[1]);\n        int xn1 = xn * nd;\n        int\
    \ xd1 = xd * nn;\n        return xn1 % xd1 == 0;", "        String[] x_split =\
    \ x.split(\"/\");\n        String[] n_split = n.split(\"/\");\n        int x_numerator\
    \ = Integer.parseInt(x_split[0]);\n        int x_denominator = Integer.parseInt(x_split[1]);\n\
    \        int n_numerator = Integer.parseInt(n_split[0]);\n        int n_denominator\
    \ = Integer.parseInt(n_split[1]);\n        int numerator = x_numerator * n_numerator;\n\
    \        int denominator = x_denominator * n_denominator;\n        return numerator\
    \ % denominator == 0;", "        Pair<Integer, Integer> xPair = getPair(x);\n\
    \        Pair<Integer, Integer> nPair = getPair(n);\n        int xNumerator =\
    \ xPair.getValue0();\n        int xDenominator = xPair.getValue1();\n        int\
    \ nNumerator = nPair.getValue0();\n        int nDenominator = nPair.getValue1();\n\
    \        int numerator = xNumerator * nDenominator;\n        int denominator =\
    \ xDenominator * nNumerator;\n        return numerator % denominator == 0;", " \
    \       String[] x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"\
    /\");\n        BigInteger x_numerator = new BigInteger(x_parts[0]);\n        BigInteger\
    \ x_denominator = new BigInteger(x_parts[1]);\n        BigInteger n_numerator\
    \ = new BigInteger(n_parts[0]);\n        BigInteger n_denominator = new BigInteger(n_parts[1]);\n\
    \        BigInteger numerator = x_numerator.multiply(n_denominator);\n       \
    \ BigInteger denominator = x_denominator.multiply(n_numerator);\n        BigInteger\
    \ gcd = numerator.gcd(denominator);\n        numerator = numerator.divide(gcd);\n\
    \        denominator = denominator.divide(gcd);\n        return numerator.mod(denominator).equals(BigInteger.ZERO);",
  "        String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        int x_num = Integer.parseInt(x_split[0]);\n        int x_den =\
    \ Integer.parseInt(x_split[1]);\n        int n_num = Integer.parseInt(n_split[0]);\n\
    \        int n_den = Integer.parseInt(n_split[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return (num % den == 0);",
  "        String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        BigInteger x_numerator = new BigInteger(x_split[0]);\n        BigInteger\
    \ x_denominator = new BigInteger(x_split[1]);\n        BigInteger n_numerator\
    \ = new BigInteger(n_split[0]);\n        BigInteger n_denominator = new BigInteger(n_split[1]);\n\
    \        BigInteger x_numerator_times_n_denominator = x_numerator.multiply(n_denominator);\n\
    \        BigInteger x_denominator_times_n_numerator = x_denominator.multiply(n_numerator);\n\
    \        BigInteger x_numerator_times_n_denominator_plus_x_denominator_times_n_numerator\
    \ = x_numerator_times_n_denominator.add(x_denominator_times_n_numerator);\n  \
    \      BigInteger x_denominator_times_n_denominator = x_denominator.multiply(n_denominator);\n\
    \        BigInteger gcd = x_numerator_times_n_denominator_plus_x_denominator_times_n_numerator.gcd(x_denominator_times_n_denominator);\n\
    \        BigInteger x_numerator_times_n_denominator_plus_x_denominator_times_n_numerator_divided_by_gcd\
    \ = x_numerator_times_n_denominator_plus_x_denominator_times_n_numerator.divide(gcd);\n\
    \        BigInteger x_denominator_times_n_denominator_divided_by_gcd = x_denominator_times_n_denominator.divide(gcd);\n\
    \        return x_numerator_times_n_denominator_plus_x_denominator_times_n_numerator_divided_by_gcd.equals(x_denominator_times_n_denominator_divided",
  "        String[] x_ = x.split(\"/\");\n        String[] n_ = n.split(\"/\");\n\
    \        int x_n = Integer.parseInt(x_[0]);\n        int x_d = Integer.parseInt(x_[1]);\n\
    \        int n_n = Integer.parseInt(n_[0]);\n        int n_d = Integer.parseInt(n_[1]);\n\
    \        int x_n_n = x_n * n_n;\n        int x_d_d = x_d * n_d;\n        return\
    \ x_n_n % x_d_d == 0;", "        String[] x_parts = x.split(\"/\");\n        String[]\
    \ n_parts = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n\
    \        int x_denominator = Integer.parseInt(x_parts[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_parts[0]);\n        int n_denominator = Integer.parseInt(n_parts[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        return numerator % denominator == 0;",
  "        String[] x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"\
    /\");\n        BigInteger x_numerator = new BigInteger(x_parts[0]);\n        BigInteger\
    \ x_denominator = new BigInteger(x_parts[1]);\n        BigInteger n_numerator\
    \ = new BigInteger(n_parts[0]);\n        BigInteger n_denominator = new BigInteger(n_parts[1]);\n\
    \        BigInteger numerator = x_numerator.multiply(n_denominator);\n       \
    \ BigInteger denominator = x_denominator.multiply(n_numerator);\n        return\
    \ numerator.mod(denominator).equals(BigInteger.ZERO);", "        // Your code\
    \ here\n        return false;", '        return false;', "        String[] x_parts\
    \ = x.split(\"/\");\n        String[] n_parts = n.split(\"/\");\n        BigInteger\
    \ x_numerator = new BigInteger(x_parts[0]);\n        BigInteger x_denominator\
    \ = new BigInteger(x_parts[1]);\n        BigInteger n_numerator = new BigInteger(n_parts[0]);\n\
    \        BigInteger n_denominator = new BigInteger(n_parts[1]);\n        BigInteger\
    \ result_numerator = x_numerator.multiply(n_numerator);\n        BigInteger result_denominator\
    \ = x_denominator.multiply(n_denominator);\n        BigInteger gcd = result_numerator.gcd(result_denominator);\n\
    \        result_numerator = result_numerator.divide(gcd);\n        result_denominator\
    \ = result_denominator.divide(gcd);\n        return result_denominator.equals(BigInteger.ONE);",
  "        // Your code here\n        return false;", "        String[] x_split =\
    \ x.split(\"/\");\n        String[] n_split = n.split(\"/\");\n        int x_num\
    \ = Integer.parseInt(x_split[0]);\n        int x_den = Integer.parseInt(x_split[1]);\n\
    \        int n_num = Integer.parseInt(n_split[0]);\n        int n_den = Integer.parseInt(n_split[1]);\n\
    \        int num = x_num * n_den;\n        int den = x_den * n_num;\n        return\
    \ num % den == 0;", "        String[] x_parts = x.split(\"/\");\n        String[]\
    \ n_parts = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n\
    \        int x_denominator = Integer.parseInt(x_parts[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_parts[0]);\n        int n_denominator = Integer.parseInt(n_parts[1]);\n\
    \        int x_numerator_product = x_numerator * n_numerator;\n        int x_denominator_product\
    \ = x_denominator * n_denominator;\n        return x_numerator_product % x_denominator_product\
    \ == 0;", "        String[] x_split = x.split(\"/\");\n        String[] n_split\
    \ = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n\
    \        int x_denominator = Integer.parseInt(x_split[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_split[0]);\n        int n_denominator = Integer.parseInt(n_split[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        return (numerator % denominator == 0);",
  "        String[] x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"\
    /\");\n        int x_num = Integer.parseInt(x_parts[0]);\n        int x_den =\
    \ Integer.parseInt(x_parts[1]);\n        int n_num = Integer.parseInt(n_parts[0]);\n\
    \        int n_den = Integer.parseInt(n_parts[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return num % den == 0;", " \
    \       String[] xs = x.split(\"/\");\n        String[] ns = n.split(\"/\");\n\
    \        int xn = Integer.parseInt(xs[0]);\n        int xd = Integer.parseInt(xs[1]);\n\
    \        int nn = Integer.parseInt(ns[0]);\n        int nd = Integer.parseInt(ns[1]);\n\
    \        int num = xn * nd;\n        int den = xd * nn;\n        int gcd = gcd(num,\
    \ den);\n        return (num / gcd) % (den / gcd) == 0;", "        String[] x_arr\
    \ = x.split(\"/\");\n        String[] n_arr = n.split(\"/\");\n        int x_num\
    \ = Integer.parseInt(x_arr[0]);\n        int x_den = Integer.parseInt(x_arr[1]);\n\
    \        int n_num = Integer.parseInt(n_arr[0]);\n        int n_den = Integer.parseInt(n_arr[1]);\n\
    \        int num = x_num * n_den;\n        int den = x_den * n_num;\n        if\
    \ (num % den == 0) {\n            return true;\n        }\n        return false;",
  "        String[] xs = x.split(\"/\");\n        String[] ns = n.split(\"/\");\n\
    \        int xn = Integer.parseInt(xs[0]);\n        int xd = Integer.parseInt(xs[1]);\n\
    \        int nn = Integer.parseInt(ns[0]);\n        int nd = Integer.parseInt(ns[1]);\n\
    \        double xdbl = (double)xn / (double)xd;\n        double ndbl = (double)nn\
    \ / (double)nd;\n        double xndbl = xdbl * ndbl;\n        return xndbl ==\
    \ (int)xndbl;", "        String[] xs = x.split(\"/\");\n        String[] ns =\
    \ n.split(\"/\");\n        int xn = Integer.parseInt(xs[0]);\n        int xd =\
    \ Integer.parseInt(xs[1]);\n        int nn = Integer.parseInt(ns[0]);\n      \
    \  int nd = Integer.parseInt(ns[1]);\n        int xnn = xn * nd;\n        int\
    \ xdd = xd * nn;\n        return xnn % xdd == 0;", "        int xn = Integer.parseInt(x.split(\"\
    /\")[0]);\n        int xd = Integer.parseInt(x.split(\"/\")[1]);\n        int\
    \ nn = Integer.parseInt(n.split(\"/\")[0]);\n        int nd = Integer.parseInt(n.split(\"\
    /\")[1]);\n        return (xn * nd) % (xd * nn) == 0;", "        String[] x_arr\
    \ = x.split(\"/\");\n        String[] n_arr = n.split(\"/\");\n        int x_numerator\
    \ = Integer.parseInt(x_arr[0]);\n        int x_denominator = Integer.parseInt(x_arr[1]);\n\
    \        int n_numerator = Integer.parseInt(n_arr[0]);\n        int n_denominator\
    \ = Integer.parseInt(n_arr[1]);\n        int numerator = x_numerator * n_numerator;\n\
    \        int denominator = x_denominator * n_denominator;\n        int gcd = gcd(numerator,\
    \ denominator);\n        return gcd == 1;", "        String[] x_arr = x.split(\"\
    /\");\n        String[] n_arr = n.split(\"/\");\n        int x_num = Integer.parseInt(x_arr[0]);\n\
    \        int x_den = Integer.parseInt(x_arr[1]);\n        int n_num = Integer.parseInt(n_arr[0]);\n\
    \        int n_den = Integer.parseInt(n_arr[1]);\n        int num = x_num * n_den;\n\
    \        int den = x_den * n_num;\n        return num % den == 0;", "        String[]\
    \ x_split = x.split(\"/\");\n        String[] n_split = n.split(\"/\");\n    \
    \    int x_numerator = Integer.parseInt(x_split[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_split[1]);\n        int n_numerator = Integer.parseInt(n_split[0]);\n\
    \        int n_denominator = Integer.parseInt(n_split[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return (numerator % denominator == 0);", "        String[] x_split =\
    \ x.split(\"/\");\n        String[] n_split = n.split(\"/\");\n        int x_numerator\
    \ = Integer.parseInt(x_split[0]);\n        int x_denominator = Integer.parseInt(x_split[1]);\n\
    \        int n_numerator = Integer.parseInt(n_split[0]);\n        int n_denominator\
    \ = Integer.parseInt(n_split[1]);\n        int numerator = x_numerator * n_numerator;\n\
    \        int denominator = x_denominator * n_denominator;\n        return numerator\
    \ % denominator == 0;", "        String[] xs = x.split(\"/\");\n        String[]\
    \ ns = n.split(\"/\");\n        int xn = Integer.parseInt(xs[0]);\n        int\
    \ xd = Integer.parseInt(xs[1]);\n        int nn = Integer.parseInt(ns[0]);\n \
    \       int nd = Integer.parseInt(ns[1]);\n        int num = xn * nd;\n      \
    \  int den = xd * nn;\n        int gcd = gcd(num, den);\n        num /= gcd;\n\
    \        den /= gcd;\n        return num % den == 0;", "        String[] xSplit\
    \ = x.split(\"/\");\n        String[] nSplit = n.split(\"/\");\n        BigInteger\
    \ xNum = new BigInteger(xSplit[0]);\n        BigInteger xDen = new BigInteger(xSplit[1]);\n\
    \        BigInteger nNum = new BigInteger(nSplit[0]);\n        BigInteger nDen\
    \ = new BigInteger(nSplit[1]);\n        BigInteger xNumTimesNDen = xNum.multiply(nDen);\n\
    \        BigInteger xDenTimesNNum = xDen.multiply(nNum);\n        return xNumTimesNDen.mod(xDenTimesNNum).equals(BigInteger.ZERO);",
  "        String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_split[1]);\n        int n_numerator = Integer.parseInt(n_split[0]);\n\
    \        int n_denominator = Integer.parseInt(n_split[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        int gcd = gcd(numerator, denominator);\n        numerator /= gcd;\n \
    \       denominator /= gcd;\n        if (numerator % denominator == 0) {\n   \
    \         return true;\n        }\n        return false;", "        // Your code\
    \ here\n        return false;", "        String[] x_split = x.split(\"/\");\n\
    \        String[] n_split = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n\
    \        int x_denominator = Integer.parseInt(x_split[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_split[0]);\n        int n_denominator = Integer.parseInt(n_split[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        int gcd = gcd(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        if (numerator\
    \ % denominator == 0) {\n            return true;\n        }\n        return false;",
  "        // Your code here\n        return false;", "        String[] x_parts =\
    \ x.split(\"/\");\n        String[] n_parts = n.split(\"/\");\n        int x_num\
    \ = Integer.parseInt(x_parts[0]);\n        int x_den = Integer.parseInt(x_parts[1]);\n\
    \        int n_num = Integer.parseInt(n_parts[0]);\n        int n_den = Integer.parseInt(n_parts[1]);\n\
    \        int x_num_n = x_num * n_den;\n        int x_den_n = x_den * n_num;\n\
    \        return x_num_n % x_den_n == 0;", "        String[] x_arr = x.split(\"\
    /\");\n        String[] n_arr = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_arr[0]);\n\
    \        int x_denominator = Integer.parseInt(x_arr[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_arr[0]);\n        int n_denominator = Integer.parseInt(n_arr[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        int gcd = gcd(numerator, denominator);\n\
    \        return denominator / gcd == 1;", "        String[] x_split = x.split(\"\
    /\");\n        String[] n_split = n.split(\"/\");\n        int x_num = Integer.parseInt(x_split[0]);\n\
    \        int x_den = Integer.parseInt(x_split[1]);\n        int n_num = Integer.parseInt(n_split[0]);\n\
    \        int n_den = Integer.parseInt(n_split[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return num % den == 0;", " \
    \       String[] x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"\
    /\");\n        int x_num = Integer.parseInt(x_parts[0]);\n        int x_den =\
    \ Integer.parseInt(x_parts[1]);\n        int n_num = Integer.parseInt(n_parts[0]);\n\
    \        int n_den = Integer.parseInt(n_parts[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return (num % den == 0);",
  "        String[] xs = x.split(\"/\");\n        String[] ns = n.split(\"/\");\n\
    \        int xn = Integer.parseInt(xs[0]);\n        int xd = Integer.parseInt(xs[1]);\n\
    \        int nn = Integer.parseInt(ns[0]);\n        int nd = Integer.parseInt(ns[1]);\n\
    \        int xnn = xn * nd;\n        int xdd = xd * nn;\n        return xnn %\
    \ xdd == 0;", "        String[] x_parts = x.split(\"/\");\n        String[] n_parts\
    \ = n.split(\"/\");\n        int x_num = Integer.parseInt(x_parts[0]);\n     \
    \   int x_den = Integer.parseInt(x_parts[1]);\n        int n_num = Integer.parseInt(n_parts[0]);\n\
    \        int n_den = Integer.parseInt(n_parts[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return num % den == 0;", " \
    \       String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_split[1]);\n        int n_numerator = Integer.parseInt(n_split[0]);\n\
    \        int n_denominator = Integer.parseInt(n_split[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return numerator % denominator == 0;", "        String[] x_arr = x.split(\"\
    /\");\n        String[] n_arr = n.split(\"/\");\n        int x_num = Integer.parseInt(x_arr[0]);\n\
    \        int x_den = Integer.parseInt(x_arr[1]);\n        int n_num = Integer.parseInt(n_arr[0]);\n\
    \        int n_den = Integer.parseInt(n_arr[1]);\n        int num = x_num * n_den;\n\
    \        int den = x_den * n_num;\n        if (num % den == 0) {\n           \
    \ return true;\n        }\n        return false;", "        String[] x_split =\
    \ x.split(\"/\");\n        String[] n_split = n.split(\"/\");\n        int x_num\
    \ = Integer.parseInt(x_split[0]);\n        int x_den = Integer.parseInt(x_split[1]);\n\
    \        int n_num = Integer.parseInt(n_split[0]);\n        int n_den = Integer.parseInt(n_split[1]);\n\
    \        int num = x_num * n_den;\n        int den = x_den * n_num;\n        return\
    \ num % den == 0;", "        String[] x_split = x.split(\"/\");\n        String[]\
    \ n_split = n.split(\"/\");\n        int x_num = Integer.parseInt(x_split[0]);\n\
    \        int x_den = Integer.parseInt(x_split[1]);\n        int n_num = Integer.parseInt(n_split[0]);\n\
    \        int n_den = Integer.parseInt(n_split[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return num % den == 0;", " \
    \       String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_split[1]);\n        int n_numerator = Integer.parseInt(n_split[0]);\n\
    \        int n_denominator = Integer.parseInt(n_split[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return numerator % denominator == 0;", "        // Your code here\n \
    \       return false;", "        String[] x_parts = x.split(\"/\");\n        String[]\
    \ n_parts = n.split(\"/\");\n        int x_num = Integer.parseInt(x_parts[0]);\n\
    \        int x_den = Integer.parseInt(x_parts[1]);\n        int n_num = Integer.parseInt(n_parts[0]);\n\
    \        int n_den = Integer.parseInt(n_parts[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        if (num % den == 0) {\n  \
    \          return true;\n        }\n        return false;", "        // Your code\
    \ here\n        return false;", "        String[] x_parts = x.split(\"/\");\n\
    \        String[] n_parts = n.split(\"/\");\n        BigInteger x_numerator =\
    \ new BigInteger(x_parts[0]);\n        BigInteger x_denominator = new BigInteger(x_parts[1]);\n\
    \        BigInteger n_numerator = new BigInteger(n_parts[0]);\n        BigInteger\
    \ n_denominator = new BigInteger(n_parts[1]);\n        BigInteger numerator =\
    \ x_numerator.multiply(n_denominator);\n        BigInteger denominator = x_denominator.multiply(n_numerator);\n\
    \        BigInteger gcd = numerator.gcd(denominator);\n        numerator = numerator.divide(gcd);\n\
    \        denominator = denominator.divide(gcd);\n        return numerator.mod(denominator).equals(BigInteger.ZERO);",
  "        String[] x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_parts[1]);\n        int n_numerator = Integer.parseInt(n_parts[0]);\n\
    \        int n_denominator = Integer.parseInt(n_parts[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return numerator % denominator == 0;", "        String[] x_split = x.split(\"\
    /\");\n        String[] n_split = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n\
    \        int x_denominator = Integer.parseInt(x_split[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_split[0]);\n        int n_denominator = Integer.parseInt(n_split[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        if (numerator % denominator == 0) {\n\
    \            return true;\n        }\n        return false;", "        String[]\
    \ x_ = x.split(\"/\");\n        String[] n_ = n.split(\"/\");\n        int x_n\
    \ = Integer.parseInt(x_[0]);\n        int x_d = Integer.parseInt(x_[1]);\n   \
    \     int n_n = Integer.parseInt(n_[0]);\n        int n_d = Integer.parseInt(n_[1]);\n\
    \        int x_n_ = x_n * n_d;\n        int x_d_ = x_d * n_n;\n        return\
    \ x_n_ % x_d_ == 0;", "        String[] x_parts = x.split(\"/\");\n        String[]\
    \ n_parts = n.split(\"/\");\n        int x_num = Integer.parseInt(x_parts[0]);\n\
    \        int x_den = Integer.parseInt(x_parts[1]);\n        int n_num = Integer.parseInt(n_parts[0]);\n\
    \        int n_den = Integer.parseInt(n_parts[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return (num % den == 0);",
  "        String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        BigInteger x_numerator = new BigInteger(x_split[0]);\n        BigInteger\
    \ x_denominator = new BigInteger(x_split[1]);\n        BigInteger n_numerator\
    \ = new BigInteger(n_split[0]);\n        BigInteger n_denominator = new BigInteger(n_split[1]);\n\
    \        BigInteger numerator = x_numerator.multiply(n_denominator);\n       \
    \ BigInteger denominator = x_denominator.multiply(n_numerator);\n        return\
    \ numerator.mod(denominator).equals(BigInteger.ZERO);", "        String[] x_split\
    \ = x.split(\"/\");\n        String[] n_split = n.split(\"/\");\n        int x_num\
    \ = Integer.parseInt(x_split[0]);\n        int x_den = Integer.parseInt(x_split[1]);\n\
    \        int n_num = Integer.parseInt(n_split[0]);\n        int n_den = Integer.parseInt(n_split[1]);\n\
    \        int num = x_num * n_den;\n        int den = x_den * n_num;\n        return\
    \ num % den == 0;", "        String[] x_parts = x.split(\"/\");\n        String[]\
    \ n_parts = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n\
    \        int x_denominator = Integer.parseInt(x_parts[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_parts[0]);\n        int n_denominator = Integer.parseInt(n_parts[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        return numerator % denominator == 0;",
  "        String[] x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_parts[1]);\n        int n_numerator = Integer.parseInt(n_parts[0]);\n\
    \        int n_denominator = Integer.parseInt(n_parts[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return (numerator % denominator == 0);", "        String[] x_arr = x.split(\"\
    /\");\n        String[] n_arr = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_arr[0]);\n\
    \        int x_denominator = Integer.parseInt(x_arr[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_arr[0]);\n        int n_denominator = Integer.parseInt(n_arr[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        int gcd = gcd(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return numerator\
    \ % denominator == 0;", "        // Your code here\n        return false;", " \
    \       String[] xSplit = x.split(\"/\");\n        String[] nSplit = n.split(\"\
    /\");\n        int xNumerator = Integer.parseInt(xSplit[0]);\n        int xDenominator\
    \ = Integer.parseInt(xSplit[1]);\n        int nNumerator = Integer.parseInt(nSplit[0]);\n\
    \        int nDenominator = Integer.parseInt(nSplit[1]);\n        int numerator\
    \ = xNumerator * nDenominator;\n        int denominator = xDenominator * nNumerator;\n\
    \        return numerator % denominator == 0;", '        return false;', "   \
    \     String[] x_ = x.split(\"/\");\n        String[] n_ = n.split(\"/\");\n \
    \       int x_n = Integer.parseInt(x_[0]);\n        int x_d = Integer.parseInt(x_[1]);\n\
    \        int n_n = Integer.parseInt(n_[0]);\n        int n_d = Integer.parseInt(n_[1]);\n\
    \        int num = x_n * n_d;\n        int den = x_d * n_n;\n        return num\
    \ % den == 0;", "        String[] x_split = x.split(\"/\");\n        String[]\
    \ n_split = n.split(\"/\");\n        BigInteger x_numerator = new BigInteger(x_split[0]);\n\
    \        BigInteger x_denominator = new BigInteger(x_split[1]);\n        BigInteger\
    \ n_numerator = new BigInteger(n_split[0]);\n        BigInteger n_denominator\
    \ = new BigInteger(n_split[1]);\n        BigInteger x_mult = x_numerator.multiply(n_denominator);\n\
    \        BigInteger n_mult = n_numerator.multiply(x_denominator);\n        BigInteger\
    \ x_mult_n_mult = x_mult.multiply(n_mult);\n        BigInteger x_mult_n_mult_denominator\
    \ = x_denominator.multiply(n_denominator);\n        BigInteger gcd = x_mult_n_mult.gcd(x_mult_n_mult_denominator);\n\
    \        BigInteger x_mult_n_mult_div = x_mult_n_mult.divide(gcd);\n        BigInteger\
    \ x_mult_n_mult_denominator_div = x_mult_n_mult_denominator.divide(gcd);\n   \
    \     if (x_mult_n_mult_div.equals(x_mult_n_mult_denominator_div)) {\n       \
    \     return true;\n        }\n        return false;", "        String[] x_parts\
    \ = x.split(\"/\");\n        String[] n_parts = n.split(\"/\");\n        int x_numerator\
    \ = Integer.parseInt(x_parts[0]);\n        int x_denominator = Integer.parseInt(x_parts[1]);\n\
    \        int n_numerator = Integer.parseInt(n_parts[0]);\n        int n_denominator\
    \ = Integer.parseInt(n_parts[1]);\n        int numerator = x_numerator * n_numerator;\n\
    \        int denominator = x_denominator * n_denominator;\n        return numerator\
    \ % denominator == 0;", "        String[] x_split = x.split(\"/\");\n        String[]\
    \ n_split = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n\
    \        int x_denominator = Integer.parseInt(x_split[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_split[0]);\n        int n_denominator = Integer.parseInt(n_split[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        return (denominator % numerator == 0);",
  "        String[] x_ = x.split(\"/\");\n        String[] n_ = n.split(\"/\");\n\
    \        int x_n = Integer.parseInt(x_[0]);\n        int x_d = Integer.parseInt(x_[1]);\n\
    \        int n_n = Integer.parseInt(n_[0]);\n        int n_d = Integer.parseInt(n_[1]);\n\
    \        int num = x_n * n_d;\n        int den = x_d * n_n;\n        return (num\
    \ % den == 0);", "        // Your code here\n        return false;", "       \
    \ String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"/\"\
    );\n        int x_numerator = Integer.parseInt(x_split[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_split[1]);\n        int n_numerator = Integer.parseInt(n_split[0]);\n\
    \        int n_denominator = Integer.parseInt(n_split[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        if (numerator % denominator == 0) {\n            return true;\n     \
    \   }\n        return false;", "        String[] xs = x.split(\"/\");\n      \
    \  String[] ns = n.split(\"/\");\n        int xn = Integer.parseInt(xs[0]);\n\
    \        int xd = Integer.parseInt(xs[1]);\n        int nn = Integer.parseInt(ns[0]);\n\
    \        int nd = Integer.parseInt(ns[1]);\n        return (xn * nd) % (xd * nn)\
    \ == 0;", "        String[] x_parts = x.split(\"/\");\n        String[] n_parts\
    \ = n.split(\"/\");\n        int x_num = Integer.parseInt(x_parts[0]);\n     \
    \   int x_den = Integer.parseInt(x_parts[1]);\n        int n_num = Integer.parseInt(n_parts[0]);\n\
    \        int n_den = Integer.parseInt(n_parts[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return num % den == 0;", " \
    \       String[] x_ = x.split(\"/\");\n        String[] n_ = n.split(\"/\");\n\
    \        BigInteger x_num = new BigInteger(x_[0]);\n        BigInteger x_den =\
    \ new BigInteger(x_[1]);\n        BigInteger n_num = new BigInteger(n_[0]);\n\
    \        BigInteger n_den = new BigInteger(n_[1]);\n        BigInteger num = x_num.multiply(n_den);\n\
    \        BigInteger den = x_den.multiply(n_num);\n        BigInteger gcd = num.gcd(den);\n\
    \        num = num.divide(gcd);\n        den = den.divide(gcd);\n        return\
    \ num.mod(den).equals(BigInteger.ZERO);", "        String[] x_parts = x.split(\"\
    /\");\n        String[] n_parts = n.split(\"/\");\n        int x_num = Integer.parseInt(x_parts[0]);\n\
    \        int x_den = Integer.parseInt(x_parts[1]);\n        int n_num = Integer.parseInt(n_parts[0]);\n\
    \        int n_den = Integer.parseInt(n_parts[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return num % den == 0;", " \
    \       String[] x_arr = x.split(\"/\");\n        String[] n_arr = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_arr[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_arr[1]);\n        int n_numerator = Integer.parseInt(n_arr[0]);\n\
    \        int n_denominator = Integer.parseInt(n_arr[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        int gcd = gcd(numerator, denominator);\n        numerator /= gcd;\n \
    \       denominator /= gcd;\n        return numerator % denominator == 0;", " \
    \       String[] xs = x.split(\"/\");\n        String[] ns = n.split(\"/\");\n\
    \        BigInteger xn = new BigInteger(xs[0]).multiply(new BigInteger(ns[1]));\n\
    \        BigInteger xd = new BigInteger(xs[1]).multiply(new BigInteger(ns[0]));\n\
    \        return xn.mod(xd).equals(BigInteger.ZERO);", "        String[] x_split\
    \ = x.split(\"/\");\n        String[] n_split = n.split(\"/\");\n        int x_numerator\
    \ = Integer.parseInt(x_split[0]);\n        int x_denominator = Integer.parseInt(x_split[1]);\n\
    \        int n_numerator = Integer.parseInt(n_split[0]);\n        int n_denominator\
    \ = Integer.parseInt(n_split[1]);\n        int numerator = x_numerator * n_numerator;\n\
    \        int denominator = x_denominator * n_denominator;\n        if (numerator\
    \ % denominator == 0) {\n            return true;\n        }\n        return false;",
  "        String[] x_arr = x.split(\"/\");\n        String[] n_arr = n.split(\"/\"\
    );\n        int x_numerator = Integer.parseInt(x_arr[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_arr[1]);\n        int n_numerator = Integer.parseInt(n_arr[0]);\n\
    \        int n_denominator = Integer.parseInt(n_arr[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        int gcd = gcd(numerator, denominator);\n        numerator /= gcd;\n \
    \       denominator /= gcd;\n        return numerator % denominator == 0;", " \
    \       String[] xSplit = x.split(\"/\");\n        String[] nSplit = n.split(\"\
    /\");\n        int xNumerator = Integer.parseInt(xSplit[0]);\n        int xDenominator\
    \ = Integer.parseInt(xSplit[1]);\n        int nNumerator = Integer.parseInt(nSplit[0]);\n\
    \        int nDenominator = Integer.parseInt(nSplit[1]);\n        int numerator\
    \ = xNumerator * nDenominator;\n        int denominator = xDenominator * nNumerator;\n\
    \        return (numerator % denominator == 0);", "        // Your code here\n\
    \        return false;", "        String[] x_ = x.split(\"/\");\n        String[]\
    \ n_ = n.split(\"/\");\n        int x_n = Integer.parseInt(x_[0]);\n        int\
    \ x_d = Integer.parseInt(x_[1]);\n        int n_n = Integer.parseInt(n_[0]);\n\
    \        int n_d = Integer.parseInt(n_[1]);\n        int numerator = x_n * n_d;\n\
    \        int denominator = x_d * n_n;\n        if (numerator % denominator ==\
    \ 0) {\n            return true;\n        }\n        return false;", "       \
    \ // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        String[] xs = x.split(\"/\");\n        String[] ns =\
    \ n.split(\"/\");\n        BigInteger xn = new BigInteger(xs[0]);\n        BigInteger\
    \ xd = new BigInteger(xs[1]);\n        BigInteger nn = new BigInteger(ns[0]);\n\
    \        BigInteger nd = new BigInteger(ns[1]);\n        BigInteger xnn = xn.multiply(nd);\n\
    \        BigInteger xdd = xd.multiply(nn);\n        return xnn.mod(xdd).equals(BigInteger.ZERO);",
  "        String[] xArr = x.split(\"/\");\n        String[] nArr = n.split(\"/\"\
    );\n        int xNum = Integer.parseInt(xArr[0]);\n        int xDen = Integer.parseInt(xArr[1]);\n\
    \        int nNum = Integer.parseInt(nArr[0]);\n        int nDen = Integer.parseInt(nArr[1]);\n\
    \        int xNumerator = xNum * nDen;\n        int xDenominator = xDen * nNum;\n\
    \        return xNumerator % xDenominator == 0;", "        String[] x_split =\
    \ x.split(\"/\");\n        String[] n_split = n.split(\"/\");\n        int x_numerator\
    \ = Integer.parseInt(x_split[0]);\n        int x_denominator = Integer.parseInt(x_split[1]);\n\
    \        int n_numerator = Integer.parseInt(n_split[0]);\n        int n_denominator\
    \ = Integer.parseInt(n_split[1]);\n        int numerator = x_numerator * n_numerator;\n\
    \        int denominator = x_denominator * n_denominator;\n        return (numerator\
    \ % denominator == 0);", "        String[] xs = x.split(\"/\");\n        String[]\
    \ ns = n.split(\"/\");\n        BigInteger xn = new BigInteger(xs[0]).multiply(new\
    \ BigInteger(ns[1]));\n        BigInteger xd = new BigInteger(xs[1]).multiply(new\
    \ BigInteger(ns[0]));\n        return xn.mod(xd).equals(BigInteger.ZERO);", " \
    \       String[] x_arr = x.split(\"/\");\n        String[] n_arr = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_arr[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_arr[1]);\n        int n_numerator = Integer.parseInt(n_arr[0]);\n\
    \        int n_denominator = Integer.parseInt(n_arr[1]);\n        int x_numerator_new\
    \ = x_numerator * n_denominator;\n        int x_denominator_new = x_denominator\
    \ * n_numerator;\n        if (x_numerator_new % x_denominator_new == 0) {\n  \
    \          return true;\n        } else {\n            return false;\n       \
    \ }", "        String[] x_arr = x.split(\"/\");\n        String[] n_arr = n.split(\"\
    /\");\n        int x_num = Integer.parseInt(x_arr[0]);\n        int x_den = Integer.parseInt(x_arr[1]);\n\
    \        int n_num = Integer.parseInt(n_arr[0]);\n        int n_den = Integer.parseInt(n_arr[1]);\n\
    \        int num = x_num * n_den;\n        int den = x_den * n_num;\n        return\
    \ num % den == 0;", "        String[] x_arr = x.split(\"/\");\n        String[]\
    \ n_arr = n.split(\"/\");\n        int x_num = Integer.parseInt(x_arr[0]);\n \
    \       int x_den = Integer.parseInt(x_arr[1]);\n        int n_num = Integer.parseInt(n_arr[0]);\n\
    \        int n_den = Integer.parseInt(n_arr[1]);\n        int num = x_num * n_den;\n\
    \        int den = x_den * n_num;\n        if (num % den == 0) {\n           \
    \ return true;\n        }\n        return false;", "        String[] x_split =\
    \ x.split(\"/\");\n        String[] n_split = n.split(\"/\");\n        int x_num\
    \ = Integer.parseInt(x_split[0]);\n        int x_den = Integer.parseInt(x_split[1]);\n\
    \        int n_num = Integer.parseInt(n_split[0]);\n        int n_den = Integer.parseInt(n_split[1]);\n\
    \        int num = x_num * n_den;\n        int den = x_den * n_num;\n        if\
    \ (num % den == 0) {\n            return true;\n        }\n        return false;",
  "        String[] x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"\
    /\");\n        BigInteger x_numerator = new BigInteger(x_parts[0]);\n        BigInteger\
    \ x_denominator = new BigInteger(x_parts[1]);\n        BigInteger n_numerator\
    \ = new BigInteger(n_parts[0]);\n        BigInteger n_denominator = new BigInteger(n_parts[1]);\n\
    \        BigInteger numerator = x_numerator.multiply(n_denominator);\n       \
    \ BigInteger denominator = x_denominator.multiply(n_numerator);\n        BigInteger\
    \ gcd = numerator.gcd(denominator);\n        numerator = numerator.divide(gcd);\n\
    \        denominator = denominator.divide(gcd);\n        return numerator.mod(denominator).equals(BigInteger.ZERO);",
  "        String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        int x_num = Integer.parseInt(x_split[0]);\n        int x_den =\
    \ Integer.parseInt(x_split[1]);\n        int n_num = Integer.parseInt(n_split[0]);\n\
    \        int n_den = Integer.parseInt(n_split[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return num % den == 0;", " \
    \       String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_split[1]);\n        int n_numerator = Integer.parseInt(n_split[0]);\n\
    \        int n_denominator = Integer.parseInt(n_split[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        int gcd = gcd(numerator, denominator);\n        numerator /= gcd;\n \
    \       denominator /= gcd;\n        return numerator % denominator == 0;", " \
    \       // Your code here\n        return false;", "        String[] x_split =\
    \ x.split(\"/\");\n        String[] n_split = n.split(\"/\");\n        int x_numerator\
    \ = Integer.parseInt(x_split[0]);\n        int x_denominator = Integer.parseInt(x_split[1]);\n\
    \        int n_numerator = Integer.parseInt(n_split[0]);\n        int n_denominator\
    \ = Integer.parseInt(n_split[1]);\n        int numerator = x_numerator * n_numerator;\n\
    \        int denominator = x_denominator * n_denominator;\n        // System.out.println(numerator);\n\
    \        // System.out.println(denominator);\n        return (numerator % denominator\
    \ == 0);", "        String[] x_ = x.split(\"/\");\n        String[] n_ = n.split(\"\
    /\");\n        int x_n = Integer.parseInt(x_[0]);\n        int x_d = Integer.parseInt(x_[1]);\n\
    \        int n_n = Integer.parseInt(n_[0]);\n        int n_d = Integer.parseInt(n_[1]);\n\
    \        int numerator = x_n * n_d;\n        int denominator = x_d * n_n;\n  \
    \      int gcd = gcd(numerator, denominator);\n        numerator /= gcd;\n   \
    \     denominator /= gcd;\n        return numerator % denominator == 0;", "  \
    \      String[] x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_parts[1]);\n        int n_numerator = Integer.parseInt(n_parts[0]);\n\
    \        int n_denominator = Integer.parseInt(n_parts[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return numerator % denominator == 0;", "        String[] xs = x.split(\"\
    /\");\n        String[] ns = n.split(\"/\");\n        int xn = Integer.parseInt(xs[0]);\n\
    \        int xd = Integer.parseInt(xs[1]);\n        int nn = Integer.parseInt(ns[0]);\n\
    \        int nd = Integer.parseInt(ns[1]);\n        int num = xn * nd;\n     \
    \   int den = xd * nn;\n        return num % den == 0;", "        String[] x_split\
    \ = x.split(\"/\");\n        String[] n_split = n.split(\"/\");\n        int x_num\
    \ = Integer.parseInt(x_split[0]);\n        int x_den = Integer.parseInt(x_split[1]);\n\
    \        int n_num = Integer.parseInt(n_split[0]);\n        int n_den = Integer.parseInt(n_split[1]);\n\
    \        int num = x_num * n_den;\n        int den = x_den * n_num;\n        return\
    \ num % den == 0;", "        String[] x_arr = x.split(\"/\");\n        String[]\
    \ n_arr = n.split(\"/\");\n        int x_num = Integer.parseInt(x_arr[0]);\n \
    \       int x_den = Integer.parseInt(x_arr[1]);\n        int n_num = Integer.parseInt(n_arr[0]);\n\
    \        int n_den = Integer.parseInt(n_arr[1]);\n        int num = x_num * n_den;\n\
    \        int den = x_den * n_num;\n        return num % den == 0;", "        String[]\
    \ x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"/\");\n    \
    \    int x_num = Integer.parseInt(x_parts[0]);\n        int x_den = Integer.parseInt(x_parts[1]);\n\
    \        int n_num = Integer.parseInt(n_parts[0]);\n        int n_den = Integer.parseInt(n_parts[1]);\n\
    \        int num = x_num * n_den;\n        int den = x_den * n_num;\n        return\
    \ (num % den == 0);", "        String[] x_split = x.split(\"/\");\n        String[]\
    \ n_split = n.split(\"/\");\n        int x_num = Integer.parseInt(x_split[0]);\n\
    \        int x_den = Integer.parseInt(x_split[1]);\n        int n_num = Integer.parseInt(n_split[0]);\n\
    \        int n_den = Integer.parseInt(n_split[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        if (num % den == 0) {\n  \
    \          return true;\n        }\n        return false;", "        int x_numerator\
    \ = Integer.parseInt(x.split(\"/\")[0]);\n        int x_denominator = Integer.parseInt(x.split(\"\
    /\")[1]);\n        int n_numerator = Integer.parseInt(n.split(\"/\")[0]);\n  \
    \      int n_denominator = Integer.parseInt(n.split(\"/\")[1]);\n        int product_numerator\
    \ = x_numerator * n_numerator;\n        int product_denominator = x_denominator\
    \ * n_denominator;\n        return product_numerator % product_denominator ==\
    \ 0;", "        Pair<Integer, Integer> xPair = getPair(x);\n        Pair<Integer,\
    \ Integer> nPair = getPair(n);\n        int xNumerator = xPair.getValue0();\n\
    \        int xDenominator = xPair.getValue1();\n        int nNumerator = nPair.getValue0();\n\
    \        int nDenominator = nPair.getValue1();\n        int numerator = xNumerator\
    \ * nDenominator;\n        int denominator = xDenominator * nNumerator;\n    \
    \    return numerator % denominator == 0;", "        String[] x_parts = x.split(\"\
    /\");\n        String[] n_parts = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n\
    \        int x_denominator = Integer.parseInt(x_parts[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_parts[0]);\n        int n_denominator = Integer.parseInt(n_parts[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        return numerator % denominator == 0;",
  "        String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        int x_num = Integer.parseInt(x_split[0]);\n        int x_den =\
    \ Integer.parseInt(x_split[1]);\n        int n_num = Integer.parseInt(n_split[0]);\n\
    \        int n_den = Integer.parseInt(n_split[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return num % den == 0;", " \
    \       String[] x_arr = x.split(\"/\");\n        String[] n_arr = n.split(\"\
    /\");\n        int x_num = Integer.parseInt(x_arr[0]);\n        int x_den = Integer.parseInt(x_arr[1]);\n\
    \        int n_num = Integer.parseInt(n_arr[0]);\n        int n_den = Integer.parseInt(n_arr[1]);\n\
    \        int num = x_num * n_den;\n        int den = x_den * n_num;\n        return\
    \ num % den == 0;", "        String[] x_ = x.split(\"/\");\n        String[] n_\
    \ = n.split(\"/\");\n        int x_num = Integer.parseInt(x_[0]);\n        int\
    \ x_den = Integer.parseInt(x_[1]);\n        int n_num = Integer.parseInt(n_[0]);\n\
    \        int n_den = Integer.parseInt(n_[1]);\n        int num = x_num * n_num;\n\
    \        int den = x_den * n_den;\n        return num % den == 0;", "        String[]\
    \ x_ = x.split(\"/\");\n        String[] n_ = n.split(\"/\");\n        int x_num\
    \ = Integer.parseInt(x_[0]);\n        int x_den = Integer.parseInt(x_[1]);\n \
    \       int n_num = Integer.parseInt(n_[0]);\n        int n_den = Integer.parseInt(n_[1]);\n\
    \        int num = x_num * n_num;\n        int den = x_den * n_den;\n        return\
    \ (num % den == 0);", "        String[] x_split = x.split(\"/\");\n        String[]\
    \ n_split = n.split(\"/\");\n        int x_num = Integer.parseInt(x_split[0]);\n\
    \        int x_den = Integer.parseInt(x_split[1]);\n        int n_num = Integer.parseInt(n_split[0]);\n\
    \        int n_den = Integer.parseInt(n_split[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        if (num % den == 0) {\n  \
    \          return true;\n        }\n        return false;", "        String[]\
    \ x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"/\");\n    \
    \    int x_num = Integer.parseInt(x_parts[0]);\n        int x_den = Integer.parseInt(x_parts[1]);\n\
    \        int n_num = Integer.parseInt(n_parts[0]);\n        int n_den = Integer.parseInt(n_parts[1]);\n\
    \        int num = x_num * n_den;\n        int den = x_den * n_num;\n        return\
    \ (num % den == 0);", "        String[] xs = x.split(\"/\");\n        String[]\
    \ ns = n.split(\"/\");\n        int xn = Integer.parseInt(xs[0]);\n        int\
    \ xd = Integer.parseInt(xs[1]);\n        int nn = Integer.parseInt(ns[0]);\n \
    \       int nd = Integer.parseInt(ns[1]);\n        int num = xn * nd;\n      \
    \  int den = xd * nn;\n        int gcd = gcd(num, den);\n        return den /\
    \ gcd == 1;", "        String[] x_arr = x.split(\"/\");\n        String[] n_arr\
    \ = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_arr[0]);\n \
    \       int x_denominator = Integer.parseInt(x_arr[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_arr[0]);\n        int n_denominator = Integer.parseInt(n_arr[1]);\n\
    \        int numerator = x_numerator * n_denominator;\n        int denominator\
    \ = x_denominator * n_numerator;\n        return numerator % denominator == 0;",
  "        String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        int x_num = Integer.parseInt(x_split[0]);\n        int x_den =\
    \ Integer.parseInt(x_split[1]);\n        int n_num = Integer.parseInt(n_split[0]);\n\
    \        int n_den = Integer.parseInt(n_split[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return num % den == 0;", " \
    \       String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_split[1]);\n        int n_numerator = Integer.parseInt(n_split[0]);\n\
    \        int n_denominator = Integer.parseInt(n_split[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return (numerator % denominator == 0);", "        // Your code here\n\
    \        return false;", "        String[] x_ = x.split(\"/\");\n        String[]\
    \ n_ = n.split(\"/\");\n        int x_n = Integer.parseInt(x_[0]);\n        int\
    \ x_d = Integer.parseInt(x_[1]);\n        int n_n = Integer.parseInt(n_[0]);\n\
    \        int n_d = Integer.parseInt(n_[1]);\n        int num = x_n * n_d;\n  \
    \      int den = x_d * n_n;\n        return num % den == 0;", "        String[]\
    \ x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"/\");\n    \
    \    int x_num = Integer.parseInt(x_parts[0]);\n        int x_den = Integer.parseInt(x_parts[1]);\n\
    \        int n_num = Integer.parseInt(n_parts[0]);\n        int n_den = Integer.parseInt(n_parts[1]);\n\
    \        int x_num_n = x_num * n_den;\n        int x_den_n = x_den * n_num;\n\
    \        return x_num_n % x_den_n == 0;", "        String[] xArr = x.split(\"\
    /\");\n        String[] nArr = n.split(\"/\");\n        int xNum = Integer.parseInt(xArr[0]);\n\
    \        int xDen = Integer.parseInt(xArr[1]);\n        int nNum = Integer.parseInt(nArr[0]);\n\
    \        int nDen = Integer.parseInt(nArr[1]);\n        int num = xNum * nDen;\n\
    \        int den = xDen * nNum;\n        return num % den == 0;", "        String[]\
    \ x_split = x.split(\"/\");\n        String[] n_split = n.split(\"/\");\n    \
    \    int x_numerator = Integer.parseInt(x_split[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_split[1]);\n        int n_numerator = Integer.parseInt(n_split[0]);\n\
    \        int n_denominator = Integer.parseInt(n_split[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return numerator % denominator == 0;", "        String[] x_arr = x.split(\"\
    /\");\n        String[] n_arr = n.split(\"/\");\n        int x_num = Integer.parseInt(x_arr[0]);\n\
    \        int x_den = Integer.parseInt(x_arr[1]);\n        int n_num = Integer.parseInt(n_arr[0]);\n\
    \        int n_den = Integer.parseInt(n_arr[1]);\n        int num = x_num * n_den;\n\
    \        int den = x_den * n_num;\n        return num % den == 0;", "        String[]\
    \ x_split = x.split(\"/\");\n        String[] n_split = n.split(\"/\");\n    \
    \    int x_numerator = Integer.parseInt(x_split[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_split[1]);\n        int n_numerator = Integer.parseInt(n_split[0]);\n\
    \        int n_denominator = Integer.parseInt(n_split[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return numerator % denominator == 0;", "        String[] x_parts = x.split(\"\
    /\");\n        String[] n_parts = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n\
    \        int x_denominator = Integer.parseInt(x_parts[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_parts[0]);\n        int n_denominator = Integer.parseInt(n_parts[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        return numerator % denominator == 0;",
  "        String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        int x_num = Integer.parseInt(x_split[0]);\n        int x_den =\
    \ Integer.parseInt(x_split[1]);\n        int n_num = Integer.parseInt(n_split[0]);\n\
    \        int n_den = Integer.parseInt(n_split[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return num % den == 0;", " \
    \       // Your code here\n        String[] x_split = x.split(\"/\");\n      \
    \  String[] n_split = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n\
    \        int x_denominator = Integer.parseInt(x_split[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_split[0]);\n        int n_denominator = Integer.parseInt(n_split[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        return (numerator % denominator == 0);",
  "        String[] x_parts = x.split(\"/\");\n        String[] n_parts = n.split(\"\
    /\");\n        int x_num = Integer.parseInt(x_parts[0]);\n        int x_den =\
    \ Integer.parseInt(x_parts[1]);\n        int n_num = Integer.parseInt(n_parts[0]);\n\
    \        int n_den = Integer.parseInt(n_parts[1]);\n        int num = x_num *\
    \ n_den;\n        int den = x_den * n_num;\n        return num % den == 0;", " \
    \       String[] xs = x.split(\"/\");\n        String[] ns = n.split(\"/\");\n\
    \        int xn = Integer.parseInt(xs[0]);\n        int xd = Integer.parseInt(xs[1]);\n\
    \        int nn = Integer.parseInt(ns[0]);\n        int nd = Integer.parseInt(ns[1]);\n\
    \        int num = xn * nd;\n        int den = xd * nn;\n        int gcd = gcd(num,\
    \ den);\n        return den / gcd == 1;", "        String[] x_parts = x.split(\"\
    /\");\n        String[] n_parts = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n\
    \        int x_denominator = Integer.parseInt(x_parts[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_parts[0]);\n        int n_denominator = Integer.parseInt(n_parts[1]);\n\
    \        int x_numerator_n = x_numerator * n_denominator;\n        int x_denominator_n\
    \ = x_denominator * n_numerator;\n        return x_numerator_n % x_denominator_n\
    \ == 0;", "        String[] x_parts = x.split(\"/\");\n        String[] n_parts\
    \ = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n\
    \        int x_denominator = Integer.parseInt(x_parts[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_parts[0]);\n        int n_denominator = Integer.parseInt(n_parts[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        return numerator % denominator == 0;",
  "        String[] xs = x.split(\"/\");\n        String[] ns = n.split(\"/\");\n\
    \        int xn = Integer.parseInt(xs[0]);\n        int xd = Integer.parseInt(xs[1]);\n\
    \        int nn = Integer.parseInt(ns[0]);\n        int nd = Integer.parseInt(ns[1]);\n\
    \        int num = xn * nd;\n        int den = xd * nn;\n        int gcd = gcd(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        // Your code here\n        return false;", "        String[] x_parts\
    \ = x.split(\"/\");\n        String[] n_parts = n.split(\"/\");\n        int x_numerator\
    \ = Integer.parseInt(x_parts[0]);\n        int x_denominator = Integer.parseInt(x_parts[1]);\n\
    \        int n_numerator = Integer.parseInt(n_parts[0]);\n        int n_denominator\
    \ = Integer.parseInt(n_parts[1]);\n        int numerator = x_numerator * n_numerator;\n\
    \        int denominator = x_denominator * n_denominator;\n        return numerator\
    \ % denominator == 0;", "        String[] xs = x.split(\"/\");\n        String[]\
    \ ns = n.split(\"/\");\n        BigInteger xn = new BigInteger(xs[0]);\n     \
    \   BigInteger xd = new BigInteger(xs[1]);\n        BigInteger nn = new BigInteger(ns[0]);\n\
    \        BigInteger nd = new BigInteger(ns[1]);\n        BigInteger result = xn.multiply(nd).multiply(xd).divide(nn.multiply(xd));\n\
    \        return result.remainder(BigInteger.ONE).equals(BigInteger.ZERO);", " \
    \       String[] x_ = x.split(\"/\");\n        String[] n_ = n.split(\"/\");\n\
    \        BigInteger x_numerator = new BigInteger(x_[0]);\n        BigInteger x_denominator\
    \ = new BigInteger(x_[1]);\n        BigInteger n_numerator = new BigInteger(n_[0]);\n\
    \        BigInteger n_denominator = new BigInteger(n_[1]);\n        BigInteger\
    \ numerator = x_numerator.multiply(n_denominator);\n        BigInteger denominator\
    \ = x_denominator.multiply(n_numerator);\n        BigInteger gcd = numerator.gcd(denominator);\n\
    \        numerator = numerator.divide(gcd);\n        denominator = denominator.divide(gcd);\n\
    \        return numerator.mod(denominator).equals(BigInteger.ZERO);", "      \
    \  String[] xSplit = x.split(\"/\");\n        String[] nSplit = n.split(\"/\"\
    );\n        int xNumerator = Integer.parseInt(xSplit[0]);\n        int xDenominator\
    \ = Integer.parseInt(xSplit[1]);\n        int nNumerator = Integer.parseInt(nSplit[0]);\n\
    \        int nDenominator = Integer.parseInt(nSplit[1]);\n        int numerator\
    \ = xNumerator * nDenominator;\n        int denominator = xDenominator * nNumerator;\n\
    \        return numerator % denominator == 0;", "        String[] x_parts = x.split(\"\
    /\");\n        String[] n_parts = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_parts[0]);\n\
    \        int x_denominator = Integer.parseInt(x_parts[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_parts[0]);\n        int n_denominator = Integer.parseInt(n_parts[1]);\n\
    \        int numerator = x_numerator * n_numerator;\n        int denominator =\
    \ x_denominator * n_denominator;\n        return numerator % denominator == 0;",
  "        String[] x_split = x.split(\"/\");\n        String[] n_split = n.split(\"\
    /\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_split[1]);\n        int n_numerator = Integer.parseInt(n_split[0]);\n\
    \        int n_denominator = Integer.parseInt(n_split[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return numerator % denominator == 0;", "        String[] x_n = x.split(\"\
    /\");\n        String[] n_n = n.split(\"/\");\n        int x_num = Integer.parseInt(x_n[0]);\n\
    \        int x_den = Integer.parseInt(x_n[1]);\n        int n_num = Integer.parseInt(n_n[0]);\n\
    \        int n_den = Integer.parseInt(n_n[1]);\n        int num = x_num * n_den;\n\
    \        int den = x_den * n_num;\n        return num % den == 0;", "        String[]\
    \ x_split = x.split(\"/\");\n        String[] n_split = n.split(\"/\");\n    \
    \    int x_numerator = Integer.parseInt(x_split[0]);\n        int x_denominator\
    \ = Integer.parseInt(x_split[1]);\n        int n_numerator = Integer.parseInt(n_split[0]);\n\
    \        int n_denominator = Integer.parseInt(n_split[1]);\n        int numerator\
    \ = x_numerator * n_numerator;\n        int denominator = x_denominator * n_denominator;\n\
    \        return numerator % denominator == 0;", "        String[] x_ = x.split(\"\
    /\");\n        String[] n_ = n.split(\"/\");\n        int x_n = Integer.parseInt(x_[0]);\n\
    \        int x_d = Integer.parseInt(x_[1]);\n        int n_n = Integer.parseInt(n_[0]);\n\
    \        int n_d = Integer.parseInt(n_[1]);\n        int numerator = x_n * n_d;\n\
    \        int denominator = x_d * n_n;\n        return numerator % denominator\
    \ == 0;", "        String[] x_split = x.split(\"/\");\n        String[] n_split\
    \ = n.split(\"/\");\n        int x_numerator = Integer.parseInt(x_split[0]);\n\
    \        int x_denominator = Integer.parseInt(x_split[1]);\n        int n_numerator\
    \ = Integer.parseInt(n_split[0]);\n        int n_denominator = Integer.parseInt(n_split[1]);\n\
    \        int x_numerator_new = x_numerator * n_denominator;\n        int x_denominator_new\
    \ = x_denominator * n_numerator;\n        if (x_numerator_new % x_denominator_new\
    \ == 0) {\n            return true;\n        } else {\n            return false;\n\
    \        }", "        // Write your code here\n        return true;", "      \
    \  // Your code here\n        return false;", "        String[] x_arr = x.split(\"\
    /\");\n        String[] n_arr = n.split(\"/\");\n        int x_num = Integer.parseInt(x_arr[0]);\n\
    \        int x_den = Integer.parseInt(x_arr[1]);\n        int n_num = Integer.parseInt(n_arr[0]);\n\
    \        int n_den = Integer.parseInt(n_arr[1]);\n        int num = x_num * n_den;\n\
    \        int den = x_den * n_num;\n        return (num % den == 0);", "      \
    \  String[] x_ = x.split(\"/\");\n        String[] n_ = n.split(\"/\");\n    \
    \    BigInteger x_numerator = new BigInteger(x_[0]);\n        BigInteger x_denominator\
    \ = new BigInteger(x_[1]);\n        BigInteger n_numerator = new BigInteger(n_[0]);\n\
    \        BigInteger n_denominator = new BigInteger(n_[1]);\n        BigInteger\
    \ numerator = x_numerator.multiply(n_denominator);\n        BigInteger denominator\
    \ = x_denominator.multiply(n_numerator);\n        BigInteger gcd = numerator.gcd(denominator);\n\
    \        numerator = numerator.divide(gcd);\n        denominator = denominator.divide(gcd);\n\
    \        return numerator.mod(denominator).equals(BigInteger.ZERO);"]
stop_tokens:
- "\n    }\n"

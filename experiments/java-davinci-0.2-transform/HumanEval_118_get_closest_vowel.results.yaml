language: java
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Write your\
    \ code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6iiwbcr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                int j = i - 1;\n                while (j >= 0 &&\
    \ !vowels.contains(word.substring(j, j + 1))) {\n                    j--;\n  \
    \              }\n                if (j >= 0) {\n                    int k = i\
    \ + 1;\n                    while (k < word.length() && !vowels.contains(word.substring(k,\
    \ k + 1))) {\n                        k++;\n                    }\n          \
    \          if (k < word.length()) {\n                        if (k - i < min)\
    \ {\n                            min = k - i;\n                            result\
    \ = word.substring(i, i + 1);\n                        }\n                   \
    \ }\n                }\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi7yuo34z.java:50)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc9hvrnbu.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int min = Integer.MAX_VALUE;\n        for (int\
    \ i = word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                for (int j = i - 1; j >= 0; j--) {\n           \
    \         if (vowels.contains(word.substring(j, j + 1))) {\n                 \
    \       if (i - j < min) {\n                            min = i - j;\n       \
    \                     result = word.substring(j, j + 1);\n                   \
    \     }\n                    }\n                }\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpogsi6uds.java:45)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String closestVowel = \"\";\n        int closestVowelIndex\
    \ = -1;\n        for (int i = word.length() - 1; i >= 0; i--) {\n            char\
    \ c = word.charAt(i);\n            if (vowels.indexOf(c) >= 0) {\n           \
    \     closestVowel = String.valueOf(c);\n                closestVowelIndex = i;\n\
    \                break;\n            }\n        }\n        if (closestVowelIndex\
    \ == -1) {\n            return \"\";\n        }\n        for (int i = closestVowelIndex\
    \ - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c)\
    \ < 0) {\n                return closestVowel;\n            }\n        }\n   \
    \     return \"\";\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeyrobcjt.java:51)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Write your\
    \ code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6iiwbcr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            if (consonants.contains(word.substring(index, index\
    \ + 1))) {\n                if (index + 1 < word.length() && vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    result = word.substring(index + 1,\
    \ index + 2);\n                    break;\n                }\n            }\n\
    \            index--;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmppfazow.java:44)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplep8bgw9.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplep8bgw9.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Write\
    \ your code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_91ccgdy.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = 0;\n                for (int j = i\
    \ + 1; j < word.length(); j++) {\n                    if (consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ != 0 && distance < minDistance) {\n                    minDistance = distance;\n\
    \                    result = word.substring(i, i + 1);\n                }\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\"\
    )));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi0226jmu.java:46)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String result = \"\";\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1)))\
    \ {\n                result = word.substring(i, i + 1);\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\"\
    )));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzar3vry6.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        for (int i = word.length() - 1; i >= 0; i--)\
    \ {\n            String letter = word.substring(i, i + 1);\n            if (vowels.contains(letter))\
    \ {\n                result = letter;\n                break;\n            }\n\
    \            if (consonants.contains(letter)) {\n                break;\n    \
    \        }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppqh5lhsh.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1eh_kw3.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   StringBuilder sb = new StringBuilder();\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n            if (consonants.indexOf(c)\
    \ != -1) {\n                sb.append(c);\n            } else if (vowels.indexOf(c)\
    \ != -1) {\n                if (sb.length() > 0) {\n                    return\
    \ \"\" + c;\n                }\n            }\n        }\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbaiez7h1.java:42)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int index = -1;\n     \
    \   for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                if (index == -1) {\n                    index =\
    \ i;\n                } else {\n                    if (index - i > 1) {\n   \
    \                     result = word.substring(i, i + 1);\n                   \
    \     break;\n                    }\n                }\n            } else {\n\
    \                index = -1;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpob7m26rj.java:44)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp12ho1skq.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        int closest = -1;\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n\
    \                closest = i;\n                break;\n            }\n       \
    \ }\n        if (closest == -1) {\n            return \"\";\n        }\n     \
    \   for (int i = closest - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i))\
    \ == -1) {\n                return word.substring(closest, closest + 1);\n   \
    \         }\n        }\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbynmzcbf.java:47)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String result = \"\";\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1)))\
    \ {\n                if (i == word.length() - 1) {\n                    continue;\n\
    \                }\n                if (i == 0) {\n                    continue;\n\
    \                }\n                if (vowels.contains(word.substring(i - 1,\
    \ i)) || vowels.contains(word.substring(i + 1, i + 2))) {\n                  \
    \  continue;\n                }\n                result = word.substring(i, i\
    \ + 1);\n                break;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(Character.toString(word.charAt(index))))\
    \ {\n                result = Character.toString(word.charAt(index));\n      \
    \          break;\n            }\n            index--;\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkga01u4h.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc9hvrnbu.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Write your\
    \ code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6iiwbcr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc9hvrnbu.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc9hvrnbu.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Write your\
    \ code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6iiwbcr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Implement\
    \ this method\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphg2qwi50.java:28)\n"
  stdout: ''
  timestamp: 1659798638
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   int index = word.length() - 1;\n        while (index >= 0) {\n           \
    \ char c = word.charAt(index);\n            if (vowels.indexOf(c) >= 0) {\n  \
    \              if (index > 0 && consonants.indexOf(word.charAt(index - 1)) >=\
    \ 0) {\n                    return \"\" + c;\n                }\n            }\n\
    \            index--;\n        }\n        return \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdjsi5eln.java:43)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Implement\
    \ your solution here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuv9wnp4i.java:28)\n"
  stdout: ''
  timestamp: 1659798638
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        for (int i = word.length() - 1; i >= 0; i--)\
    \ {\n            if (consonants.contains(word.substring(i, i + 1))) {\n      \
    \          for (int j = i + 1; j < word.length(); j++) {\n                   \
    \ if (vowels.contains(word.substring(j, j + 1))) {\n                        result\
    \ = word.substring(j, j + 1);\n                        break;\n              \
    \      }\n                }\n                break;\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1mi9xr6h.java:41)\n"
  stdout: ''
  timestamp: 1659798638
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (consonants.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            index--;\n                    continue;\n                }\n    \
    \            if (vowels.contains(word.substring(index + 1, index + 2))) {\n  \
    \                  result = word.substring(index + 1, index + 2);\n          \
    \          break;\n                }\n            }\n            index--;\n  \
    \      }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvbww8y2z.java:48)\n"
  stdout: ''
  timestamp: 1659798639
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int left = i - 1;\n                int right = i +\
    \ 1;\n                while (left >= 0 && vowels.indexOf(word.charAt(left)) !=\
    \ -1) {\n                    left--;\n                }\n                while\
    \ (right < word.length() && vowels.indexOf(word.charAt(right)) != -1) {\n    \
    \                right++;\n                }\n                if (left >= 0 &&\
    \ right < word.length()) {\n                    if (right - left < min) {\n  \
    \                      min = right - left;\n                        result = word.substring(i,\
    \ i + 1);\n                    }\n                }\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgssl8ef5.java:48)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1))) {\n  \
    \              result = word.substring(i, i + 1);\n                break;\n  \
    \          }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\"\
    )));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4wnu1mj.java:38)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpils65zke.java:28)\n"
  stdout: ''
  timestamp: 1659798639
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Write your\
    \ code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6iiwbcr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            char c = word.charAt(index);\n            if (vowels.indexOf(c)\
    \ != -1) {\n                result = String.valueOf(c);\n                break;\n\
    \            }\n            index--;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzbu5b2u7.java:41)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            return \"\";\n                }\n                if (consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    return word.substring(index, index\
    \ + 1);\n                }\n            }\n            index--;\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgupp6d2f.java:44)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Implement\
    \ this method\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphg2qwi50.java:28)\n"
  stdout: ''
  timestamp: 1659798638
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwazhep9x.java:40)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            index--;\n                    continue;\n                }\n    \
    \            if (consonants.contains(word.substring(index + 1, index + 2))) {\n\
    \                    result = word.substring(index, index + 1);\n            \
    \        break;\n                }\n            }\n            index--;\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpymuptr1v.java:46)\n"
  stdout: ''
  timestamp: 1659798642
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp12ho1skq.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int index = 0;\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1)))\
    \ {\n                index = i;\n                break;\n            }\n     \
    \   }\n        if (index == 0) return result;\n        for (int i = index - 1;\
    \ i >= 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1)))\
    \ {\n                result = word.substring(index, index + 1);\n            \
    \    break;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp42_4t_6d.java:48)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Implement\
    \ your code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5n77we05.java:28)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (consonants.contains(word.substring(index,\
    \ index + 1))) {\n                if (index + 1 < word.length() && vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    result = word.substring(index + 1,\
    \ index + 2);\n                    break;\n                }\n            }\n\
    \            index--;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg72ki2kf.java:44)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: implement\
    \ this method\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp12ur482j.java:28)\n"
  stdout: ''
  timestamp: 1659798639
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1))) {\n  \
    \              result = word.substring(i, i + 1);\n                break;\n  \
    \          }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\"\
    )));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4wnu1mj.java:38)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        for (int i = word.length() - 1; i >= 0; i--)\
    \ {\n            String letter = word.substring(i, i + 1);\n            if (consonants.contains(letter))\
    \ {\n                for (int j = i - 1; j >= 0; j--) {\n                    String\
    \ letter2 = word.substring(j, j + 1);\n                    if (vowels.contains(letter2))\
    \ {\n                        result = letter2;\n                        break;\n\
    \                    }\n                }\n                break;\n          \
    \  }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcmb6qldo.java:45)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Write your\
    \ code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6iiwbcr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Implement\
    \ your solution here.\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplaqo0yj0.java:28)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplep8bgw9.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1eh_kw3.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Implement\
    \ your code here.\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu7npzj6.java:28)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Implement\
    \ your code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5n77we05.java:28)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        StringBuilder sb = new StringBuilder();\n        for (int\
    \ i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                sb.append(word.substring(i, i + 1));\n         \
    \   } else {\n                if (sb.length() > 0) {\n                    return\
    \ sb.toString();\n                }\n            }\n        }\n        return\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmd4c87qt.java:42)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Write your\
    \ code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6iiwbcr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1eh_kw3.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz65evio9.java:39)\n"
  stdout: ''
  timestamp: 1659798643
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i + 1; j < word.length(); j++) {\n             \
    \       if (vowels.contains(word.substring(j, j + 1))) {\n                   \
    \     result = word.substring(j, j + 1);\n                        break;\n   \
    \                 }\n                }\n                break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpddqc848j.java:41)\n"
  stdout: ''
  timestamp: 1659798639
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String closestVowel = \"\";\n        int closestVowelIndex = -1;\n\
    \        int closestConsonantIndex = -1;\n        for (int i = word.length() -\
    \ 1; i >= 0; i--) {\n            String letter = word.substring(i, i + 1);\n \
    \           if (vowels.contains(letter)) {\n                if (closestVowelIndex\
    \ == -1) {\n                    closestVowelIndex = i;\n                    closestVowel\
    \ = letter;\n                }\n            } else if (consonants.contains(letter))\
    \ {\n                if (closestVowelIndex != -1) {\n                    closestConsonantIndex\
    \ = i;\n                    break;\n                }\n            }\n       \
    \ }\n        if (closestVowelIndex != -1 && closestConsonantIndex != -1) {\n \
    \           return closestVowel;\n        }\n        return \"\";\n    }\n   \
    \ public static void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\"\
    )).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbgjtlx6w.java:53)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplep8bgw9.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1eh_kw3.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        int index = word.length() - 1;\n        while (index >=\
    \ 0) {\n            if (vowels.contains(word.substring(index, index + 1))) {\n\
    \                if (index + 1 < word.length() && vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    index--;\n                    continue;\n\
    \                }\n                if (index - 1 >= 0 && vowels.contains(word.substring(index\
    \ - 1, index))) {\n                    index--;\n                    continue;\n\
    \                }\n                return word.substring(index, index + 1);\n\
    \            }\n            index--;\n        }\n        return \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphr9m9z_z.java:46)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp12ho1skq.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        for (int i = word.length() - 1; i >= 0; i--)\
    \ {\n            String current = word.substring(i, i + 1);\n            if (vowels.contains(current))\
    \ {\n                result = current;\n                break;\n            }\n\
    \            if (consonants.contains(current)) {\n                break;\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\"\
    )));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz22oelwb.java:40)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index\
    \ == 0) {\n                    return \"\";\n                }\n             \
    \   if (consonants.indexOf(word.charAt(index - 1)) != -1) {\n                \
    \    return word.substring(index, index + 1);\n                }\n           \
    \ }\n            index--;\n        }\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclicj6tx.java:45)\n"
  stdout: ''
  timestamp: 1659798638
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index\
    \ != 0 && consonants.indexOf(word.charAt(index - 1)) != -1) {\n              \
    \      return word.substring(index, index + 1);\n                }\n         \
    \   }\n            index--;\n        }\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprw3qmnd8.java:42)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String[] vowels\
    \ = {\"a\", \"e\", \"i\", \"o\", \"u\"};\n        String[] consonants = {\"b\"\
    , \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"};\n        String[]\
    \ wordArr = word.split(\"\");\n        String[] reversedArr = new String[wordArr.length];\n\
    \        for (int i = 0; i < wordArr.length; i++) {\n            reversedArr[i]\
    \ = wordArr[wordArr.length - 1 - i];\n        }\n        for (int i = 0; i < reversedArr.length;\
    \ i++) {\n            if (Arrays.asList(vowels).contains(reversedArr[i])) {\n\
    \                if (i + 1 < reversedArr.length && Arrays.asList(consonants).contains(reversedArr[i\
    \ + 1])) {\n                    return reversedArr[i];\n                }\n  \
    \          }\n        }\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpij5cu227.java:45)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String[] wordArr = word.split(\"\");\n        int index = 0;\n    \
    \    for (int i = wordArr.length - 1; i >= 0; i--) {\n            if (consonants.contains(wordArr[i]))\
    \ {\n                index = i;\n                break;\n            }\n     \
    \   }\n        for (int i = index - 1; i >= 0; i--) {\n            if (vowels.contains(wordArr[i]))\
    \ {\n                return wordArr[i];\n            }\n        }\n        return\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2l_rug88.java:44)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            if (vowels.contains(word.substring(index, index\
    \ + 1))) {\n                if (index + 1 < word.length() && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    if (index - 1 >= 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                        result = word.substring(index, index\
    \ + 1);\n                        break;\n                    }\n             \
    \   }\n            }\n            index--;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798640
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: implement\
    \ this method\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.getClosestVowel(String)\"\
    \ is null\n\tat Problem.main(tmpg_zauqzi.java:28)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Implement\
    \ the method\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppuqp1pk8.java:28)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1eh_kw3.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String result = \"\";\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1)))\
    \ {\n                result = word.substring(i, i + 1);\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\"\
    )));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzar3vry6.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        int closestVowel = -1;\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n\
    \                closestVowel = i;\n                break;\n            }\n  \
    \      }\n        if (closestVowel == -1) {\n            return \"\";\n      \
    \  }\n        for (int i = closestVowel - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i))\
    \ == -1) {\n                return word.substring(closestVowel, closestVowel +\
    \ 1);\n            }\n        }\n        return \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmponml6m64.java:47)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1eh_kw3.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Write your\
    \ code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6iiwbcr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = word.length() - i;\n              \
    \  if (distance < minDistance) {\n                    minDistance = distance;\n\
    \                    result = word.substring(i, i + 1);\n                }\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\"\
    )));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_ej8_8t.java:41)\n"
  stdout: ''
  timestamp: 1659798643
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            index--;\n                    continue;\n                }\n    \
    \            if (consonants.contains(word.substring(index + 1, index + 2))) {\n\
    \                    result = word.substring(index, index + 1);\n            \
    \        break;\n                }\n            }\n            index--;\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpymuptr1v.java:46)\n"
  stdout: ''
  timestamp: 1659798642
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Write your\
    \ code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6iiwbcr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Write your\
    \ code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6iiwbcr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp12ho1skq.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc9hvrnbu.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   int i = word.length() - 1;\n        while (i >= 0) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                break;\n            }\n            i--;\n      \
    \  }\n        if (i == -1) {\n            return \"\";\n        }\n        int\
    \ j = i - 1;\n        while (j >= 0) {\n            if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                break;\n            }\n            j--;\n      \
    \  }\n        if (j == -1) {\n            return \"\";\n        }\n        return\
    \ word.substring(j, j + 1);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjzjso6h6.java:51)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Implement\
    \ your code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5n77we05.java:28)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   int index = -1;\n        for (int i = word.length() - 1; i >= 0; i--) {\n\
    \            if (consonants.contains(word.substring(i, i + 1))) {\n          \
    \      for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        index = j;\n                        break;\n\
    \                    }\n                }\n                break;\n          \
    \  }\n        }\n        return index == -1 ? \"\" : word.substring(index, index\
    \ + 1);\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2v8gish4.java:43)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        for (int i = word.length() - 1; i >= 0; i--)\
    \ {\n            if (consonants.contains(word.substring(i, i + 1))) {\n      \
    \          for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg7maur23.java:43)\n"
  stdout: ''
  timestamp: 1659798640
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1eh_kw3.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            index--;\n                    continue;\n                }\n    \
    \            if (consonants.contains(word.substring(index + 1, index + 2))) {\n\
    \                    result = word.substring(index, index + 1);\n            \
    \        break;\n                }\n            }\n            index--;\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpymuptr1v.java:46)\n"
  stdout: ''
  timestamp: 1659798642
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Implement\
    \ this method\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphg2qwi50.java:28)\n"
  stdout: ''
  timestamp: 1659798638
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp12ho1skq.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n    \
    \    for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = 0;\n                for (int j = i\
    \ + 1; j < word.length(); j++) {\n                    if (consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = word.substring(i, i + 1);\n                }\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8otrxnm5.java:46)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   StringBuilder result = new StringBuilder();\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i, i\
    \ + 1))) {\n                for (int j = i + 1; j < word.length(); j++) {\n  \
    \                  if (vowels.contains(word.substring(j, j + 1))) {\n        \
    \                result.append(word.substring(j, j + 1));\n                  \
    \      return result.toString();\n                    }\n                }\n \
    \           }\n        }\n        return result.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpldafc006.java:44)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1eh_kw3.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index\
    \ > 0 && consonants.indexOf(word.charAt(index - 1)) != -1) {\n               \
    \     return word.substring(index, index + 1);\n                }\n          \
    \  }\n            index--;\n        }\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu973j0dp.java:42)\n"
  stdout: ''
  timestamp: 1659798638
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpils65zke.java:28)\n"
  stdout: ''
  timestamp: 1659798639
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpils65zke.java:28)\n"
  stdout: ''
  timestamp: 1659798639
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            if (vowels.contains(word.substring(index, index\
    \ + 1))) {\n                if (index + 1 < word.length() && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    if (index - 1 >= 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                        result = word.substring(index, index\
    \ + 1);\n                        break;\n                    }\n             \
    \   }\n            }\n            index--;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798640
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        int l = word.length();\n\
    \        if (l < 3) return \"\";\n        int i = l - 1;\n        while (i > 0)\
    \ {\n            if (isVowel(word.charAt(i))) {\n                if (isConsonant(word.charAt(i\
    \ - 1))) {\n                    return word.substring(i, i + 1);\n           \
    \     }\n            }\n            i--;\n        }\n        return \"\";\n  \
    \  }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwouy8nzg.java:28: error: cannot find symbol\n            if (isVowel(word.charAt(i)))\
    \ {\n                ^\n  symbol:   method isVowel(char)\n  location: class Problem\n\
    /tmp/tmpwouy8nzg.java:29: error: cannot find symbol\n                if (isConsonant(word.charAt(i\
    \ - 1))) {\n                    ^\n  symbol:   method isConsonant(char)\n  location:\
    \ class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        for (int i = word.length() - 1; i >= 0; i--)\
    \ {\n            if (consonants.contains(word.substring(i, i + 1))) {\n      \
    \          for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg7maur23.java:43)\n"
  stdout: ''
  timestamp: 1659798640
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1eh_kw3.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplep8bgw9.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        int index = word.length() - 1;\n        while (index >=\
    \ 0) {\n            if (vowels.contains(word.substring(index, index + 1))) {\n\
    \                if (index == word.length() - 1) {\n                    return\
    \ \"\";\n                }\n                if (index == 0) {\n              \
    \      return \"\";\n                }\n                if (!vowels.contains(word.substring(index\
    \ - 1, index))) {\n                    if (!vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                        return word.substring(index, index\
    \ + 1);\n                    }\n                }\n            }\n           \
    \ index--;\n        }\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp_ec8t_u.java:55)\n"
  stdout: ''
  timestamp: 1659798642
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int index = 0;\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i, i\
    \ + 1))) {\n                index = i;\n                break;\n            }\n\
    \        }\n        for (int i = index; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                result = word.substring(i, i + 1);\n           \
    \     break;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn2k2bluf.java:45)\n"
  stdout: ''
  timestamp: 1659798643
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String result = \"\";\n        int minDistance =\
    \ Integer.MAX_VALUE;\n        int distance = 0;\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1)))\
    \ {\n                distance = word.length() - i;\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = word.substring(i, i + 1);\n                }\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp00zwpt_9.java:42)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1eh_kw3.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (consonants.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            return \"\";\n                }\n                if (consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    return \"\";\n                }\n \
    \               if (vowels.contains(word.substring(index + 1, index + 2))) {\n\
    \                    return word.substring(index + 1, index + 2);\n          \
    \      }\n            }\n            index--;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuy879f0p.java:45)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        for (int i = word.length() - 1; i >= 0; i--) {\n     \
    \       if (vowels.contains(word.substring(i, i + 1))) {\n                if (i\
    \ > 0 && !vowels.contains(word.substring(i - 1, i))) {\n                    return\
    \ word.substring(i, i + 1);\n                }\n            }\n        }\n   \
    \     return \"\";\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpis23tgsw.java:39)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            if (vowels.contains(word.substring(index, index\
    \ + 1))) {\n                result = word.substring(index, index + 1);\n     \
    \           break;\n            }\n            index--;\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7yijglt2.java:40)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1eh_kw3.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1eh_kw3.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            if (consonants.contains(word.substring(index, index\
    \ + 1))) {\n                if (index == word.length() - 1) {\n              \
    \      return \"\";\n                }\n                if (vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    return word.substring(index + 1, index\
    \ + 2);\n                }\n            }\n            index--;\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1sqml3st.java:42)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   StringBuilder sb = new StringBuilder();\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c)\
    \ != -1) {\n                sb.append(c);\n            } else if (consonants.indexOf(c)\
    \ != -1) {\n                if (sb.length() > 0) {\n                    return\
    \ sb.toString();\n                }\n            }\n        }\n        return\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6r8alekg.java:44)\n"
  stdout: ''
  timestamp: 1659798639
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = 0;\n        for (int i =\
    \ word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(String.valueOf(word.charAt(i))))\
    \ {\n                index = i;\n                break;\n            }\n     \
    \   }\n        for (int i = index; i >= 0; i--) {\n            if (vowels.contains(String.valueOf(word.charAt(i))))\
    \ {\n                result = String.valueOf(word.charAt(i));\n              \
    \  break;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7i10e47s.java:45)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1)))\
    \ {\n                result = word.substring(i, i + 1);\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\"\
    )));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp92v0nu4t.java:37)\n"
  stdout: ''
  timestamp: 1659798640
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            if (consonants.contains(word.substring(index, index\
    \ + 1))) {\n                if (index > 0 && vowels.contains(word.substring(index\
    \ - 1, index))) {\n                    result = word.substring(index - 1, index);\n\
    \                    break;\n                }\n            }\n            index--;\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps8razisw.java:42)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplep8bgw9.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        int index = word.length() - 1;\n        while (index\
    \ >= 0) {\n            if (vowels.contains(word.substring(index, index + 1)))\
    \ {\n                if (index == word.length() - 1) {\n                    return\
    \ \"\";\n                }\n                if (index == 0) {\n              \
    \      return \"\";\n                }\n                if (!vowels.contains(word.substring(index\
    \ - 1, index))) {\n                    if (!vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                        return word.substring(index, index\
    \ + 1);\n                    }\n                }\n            }\n           \
    \ index--;\n        }\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_tr37qfd.java:55)\n"
  stdout: ''
  timestamp: 1659798642
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplep8bgw9.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                if (index + 1 < word.length() && !vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    break;\n                }\n       \
    \     }\n            index--;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdxot7r4s.java:41)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String closestVowel = \"\";\n        int closestVowelIndex = -1;\n\
    \        int closestConsonantIndex = -1;\n        for (int i = word.length() -\
    \ 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n\
    \                closestVowel = String.valueOf(word.charAt(i));\n            \
    \    closestVowelIndex = i;\n                break;\n            }\n        }\n\
    \        for (int i = closestVowelIndex - 1; i >= 0; i--) {\n            if (consonants.indexOf(word.charAt(i))\
    \ != -1) {\n                closestConsonantIndex = i;\n                break;\n\
    \            }\n        }\n        if (closestVowelIndex == -1 || closestConsonantIndex\
    \ == -1) {\n            return \"\";\n        }\n        return closestVowel;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnip_geb9.java:52)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        int index = -1;\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n\
    \                index = i;\n                break;\n            }\n        }\n\
    \        if (index == -1) {\n            return \"\";\n        }\n        for\
    \ (int i = index - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i))\
    \ == -1) {\n                return String.valueOf(word.charAt(index));\n     \
    \       }\n        }\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps8gzhqno.java:47)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        StringBuilder sb = new StringBuilder();\n        for (int\
    \ i = word.length() - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                sb.append(c);\n \
    \           } else {\n                if (sb.length() > 0) {\n               \
    \     return sb.toString();\n                }\n            }\n        }\n   \
    \     return \"\";\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_a028bbu.java:43)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1)))\
    \ {\n                result = word.substring(i, i + 1);\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\"\
    )));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp92v0nu4t.java:37)\n"
  stdout: ''
  timestamp: 1659798640
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            return \"\";\n                }\n                if (consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    return word.substring(index, index\
    \ + 1);\n                }\n            }\n            index--;\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgupp6d2f.java:44)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        int index = word.length() - 1;\n        while (index >=\
    \ 0) {\n            if (vowels.contains(word.substring(index, index + 1))) {\n\
    \                if (index == word.length() - 1) {\n                    return\
    \ \"\";\n                }\n                if (index == 0) {\n              \
    \      return \"\";\n                }\n                if (!vowels.contains(word.substring(index\
    \ - 1, index))) {\n                    if (!vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                        return word.substring(index, index\
    \ + 1);\n                    }\n                }\n            }\n           \
    \ index--;\n        }\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp_ec8t_u.java:55)\n"
  stdout: ''
  timestamp: 1659798642
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = 0;\n        int min = word.length();\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int j = i - 1;\n                while (j >= 0 && consonants.indexOf(word.charAt(j))\
    \ == -1) {\n                    j--;\n                }\n                if (j\
    \ >= 0) {\n                    int k = i + 1;\n                    while (k <\
    \ word.length() && consonants.indexOf(word.charAt(k)) == -1) {\n             \
    \           k++;\n                    }\n                    if (k < word.length())\
    \ {\n                        if (k - j < min) {\n                            min\
    \ = k - j;\n                            index = i;\n                        }\n\
    \                    }\n                }\n            }\n        }\n        if\
    \ (index != 0) {\n            result = word.substring(index, index + 1);\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpple3zurx.java:55)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String closest = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int distance = word.length()\
    \ - i;\n                if (distance < minDistance) {\n                    minDistance\
    \ = distance;\n                    closest = \"\" + c;\n                }\n  \
    \          }\n        }\n        return closest;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\"\
    )));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp33tc5r4a.java:42)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1eh_kw3.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String closestVowel = \"\";\n        int minDistance =\
    \ word.length();\n        for (int i = 0; i < word.length(); i++) {\n        \
    \    char c = word.charAt(i);\n            if (vowels.indexOf(c) != -1) {\n  \
    \              int distance = word.length() - i;\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        closestVowel = String.valueOf(c);\n                }\n            }\n\
    \        }\n        return closestVowel;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2dmi_7pq.java:42)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int min = word.length();\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int j = i;\n                while (j < word.length()\
    \ && vowels.indexOf(word.charAt(j)) != -1) {\n                    j++;\n     \
    \           }\n                if (j < word.length() && j - i < min) {\n     \
    \               min = j - i;\n                    result = word.substring(i, j);\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu7o3sw47.java:42)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int j = i + 1;\n                while (j < word.length()\
    \ && vowels.indexOf(word.charAt(j)) != -1) {\n                    j++;\n     \
    \           }\n                if (j < word.length()) {\n                    int\
    \ k = j + 1;\n                    while (k < word.length() && vowels.indexOf(word.charAt(k))\
    \ != -1) {\n                        k++;\n                    }\n            \
    \        if (k < word.length()) {\n                        if (k - i < min) {\n\
    \                            min = k - i;\n                            result\
    \ = String.valueOf(word.charAt(i));\n                        }\n             \
    \       }\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc1lnpx_0.java:52)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Implement\
    \ this method\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphg2qwi50.java:28)\n"
  stdout: ''
  timestamp: 1659798638
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String closestVowel = \"\";\n        int closestVowelIndex = -1;\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                for (int j = i - 1; j >= 0; j--) {\n           \
    \         if (vowels.contains(word.substring(j, j + 1))) {\n                 \
    \       if (closestVowelIndex == -1 || j > closestVowelIndex) {\n            \
    \                closestVowelIndex = j;\n                            closestVowel\
    \ = word.substring(j, j + 1);\n                        }\n                   \
    \ }\n                }\n            }\n        }\n        return closestVowel;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpek4og2uk.java:45)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        int index = word.length() - 1;\n        while (index >=\
    \ 0) {\n            if (vowels.contains(word.substring(index, index + 1))) {\n\
    \                if (index == word.length() - 1) {\n                    return\
    \ \"\";\n                }\n                if (index == 0) {\n              \
    \      return \"\";\n                }\n                if (!vowels.contains(word.substring(index\
    \ - 1, index))) {\n                    if (!vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                        return word.substring(index, index\
    \ + 1);\n                    }\n                }\n            }\n           \
    \ index--;\n        }\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp_ec8t_u.java:55)\n"
  stdout: ''
  timestamp: 1659798642
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz65evio9.java:39)\n"
  stdout: ''
  timestamp: 1659798643
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Implement\
    \ this function\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphubyow_z.java:28)\n"
  stdout: ''
  timestamp: 1659798643
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1)))\
    \ {\n                result = word.substring(i, i + 1);\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\"\
    )));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp92v0nu4t.java:37)\n"
  stdout: ''
  timestamp: 1659798640
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index\
    \ == 0) {\n                    return \"\";\n                }\n             \
    \   if (consonants.indexOf(word.charAt(index - 1)) != -1) {\n                \
    \    return word.substring(index, index + 1);\n                }\n           \
    \ }\n            index--;\n        }\n        return \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclicj6tx.java:45)\n"
  stdout: ''
  timestamp: 1659798638
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                int j = i + 1;\n                while (j < word.length()\
    \ && !vowels.contains(word.substring(j, j + 1))) {\n                    j++;\n\
    \                }\n                if (j < word.length() && j - i < min) {\n\
    \                    min = j - i;\n                    result = word.substring(i,\
    \ i + 1);\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw6timefz.java:42)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Implement\
    \ this method\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphg2qwi50.java:28)\n"
  stdout: ''
  timestamp: 1659798638
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Implement\
    \ this method\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphg2qwi50.java:28)\n"
  stdout: ''
  timestamp: 1659798638
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = 0;\n                for (int j = i\
    \ + 1; j < word.length(); j++) {\n                    if (vowels.indexOf(word.charAt(j))\
    \ != -1) {\n                        break;\n                    }\n          \
    \          distance++;\n                }\n                if (distance < minDistance)\
    \ {\n                    minDistance = distance;\n                    result =\
    \ word.substring(i, i + 1);\n                }\n            }\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_9z3ewc.java:45)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp12ho1skq.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = 0;\n        for (int i =\
    \ word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                index = i;\n                break;\n           \
    \ }\n        }\n        for (int i = index; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                result = word.substring(i, i + 1);\n           \
    \     break;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpou93wudc.java:45)\n"
  stdout: ''
  timestamp: 1659798642
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Write your\
    \ code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6iiwbcr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Write your\
    \ code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6iiwbcr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ >= 0) {\n                int distance = word.length() - i;\n               \
    \ if (distance < minDistance) {\n                    minDistance = distance;\n\
    \                    result = word.substring(i, i + 1);\n                }\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\"\
    )));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_zpfqf3k.java:41)\n"
  stdout: ''
  timestamp: 1659798692
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int j = i - 1;\n                int k = i + 1;\n \
    \               while (j >= 0 && vowels.indexOf(word.charAt(j)) != -1) {\n   \
    \                 j--;\n                }\n                while (k < word.length()\
    \ && vowels.indexOf(word.charAt(k)) != -1) {\n                    k++;\n     \
    \           }\n                if (j >= 0 && k < word.length()) {\n          \
    \          int dist = k - j;\n                    if (dist < min) {\n        \
    \                min = dist;\n                        result = word.substring(i,\
    \ i + 1);\n                    }\n                }\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmproaffzz2.java:49)\n"
  stdout: ''
  timestamp: 1659798692
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc9hvrnbu.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String[] letters = word.split(\"\");\n        String[]\
    \ vowelsArray = vowels.split(\"\");\n        String[] consonants = new String[letters.length];\n\
    \        String[] consonantsArray = new String[letters.length];\n        String[]\
    \ vowelsArray2 = new String[letters.length];\n        String[] vowelsArray3 =\
    \ new String[letters.length];\n        String[] vowelsArray4 = new String[letters.length];\n\
    \        String[] vowelsArray5 = new String[letters.length];\n        String[]\
    \ vowelsArray6 = new String[letters.length];\n        String[] vowelsArray7 =\
    \ new String[letters.length];\n        String[] vowelsArray8 = new String[letters.length];\n\
    \        String[] vowelsArray9 = new String[letters.length];\n        String[]\
    \ vowelsArray10 = new String[letters.length];\n        String[] vowelsArray11\
    \ = new String[letters.length];\n        String[] vowelsArray12 = new String[letters.length];\n\
    \        String[] vowelsArray13 = new String[letters.length];\n        String[]\
    \ vowelsArray14 = new String[letters.length];\n        String[] vowelsArray15\
    \ = new String[letters.length];\n        String[] vowelsArray16 = new String[letters.length];\n\
    \        String[] vowelsArray17 = new String[letters.length];\n        String[]\
    \ vowelsArray18 = new String[letters.length];\n        String[] vowelsArray19\
    \ = new String[letters.length];\n        String[] vowelsArray20 = new String[letters.length];\n\
    \        String[] vowelsArray21 = new String[letters.length];\n        String[]\
    \ vowelsArray22 = new String[letters.length];\n        String[] vowelsArray23\
    \ = new String[letters.length];\n        String[] vowelsArray24 = new String[letters.length];\n\
    \        String[] vowelsArray25 = new String[letters.length];\n        String[]\
    \ vowelsArray26 = new String[letters.length];\n        String[] vowelsArray27\
    \ = new String[letters.length];\n        String[] vowelsArray28 = new String[letters.length];\n\
    \        String[] vowelsArray29 = new String[\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph72n4vmh.java:57: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659798692
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   int index = word.length() - 1;\n        while (index >= 0) {\n           \
    \ if (consonants.contains(word.substring(index, index + 1))) {\n             \
    \   int index2 = index - 1;\n                while (index2 >= 0) {\n         \
    \           if (consonants.contains(word.substring(index2, index2 + 1))) {\n \
    \                       return \"\";\n                    }\n                \
    \    if (vowels.contains(word.substring(index2, index2 + 1))) {\n            \
    \            return word.substring(index2, index2 + 1);\n                    }\n\
    \                    index2--;\n                }\n                return \"\"\
    ;\n            }\n            index--;\n        }\n        return \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp77gwjcy.java:46)\n"
  stdout: ''
  timestamp: 1659798692
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String closestVowel = \"\";\n        int closestVowelIndex\
    \ = -1;\n        for (int i = word.length() - 1; i >= 0; i--) {\n            if\
    \ (vowels.contains(word.substring(i, i + 1))) {\n                if (closestVowelIndex\
    \ == -1) {\n                    closestVowelIndex = i;\n                    closestVowel\
    \ = word.substring(i, i + 1);\n                } else {\n                    if\
    \ (i > closestVowelIndex) {\n                        closestVowelIndex = i;\n\
    \                        closestVowel = word.substring(i, i + 1);\n          \
    \          }\n                }\n            }\n        }\n        return closestVowel;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoc_7nut4.java:45)\n"
  stdout: ''
  timestamp: 1659798692
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            break;\n                }\n                if (consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    result = word.substring(index, index\
    \ + 1);\n                    break;\n                }\n            }\n      \
    \      index--;\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\"\
    )));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9e4276pn.java:45)\n"
  stdout: ''
  timestamp: 1659798638
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String closestVowel = \"\";\n        int closestVowelIndex = -1;\n       \
    \ for (int i = word.length() - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                if (closestVowelIndex\
    \ != -1) {\n                    if (closestVowelIndex - i > 1) {\n           \
    \             closestVowel = Character.toString(c);\n                        closestVowelIndex\
    \ = i;\n                    }\n                } else {\n                    closestVowel\
    \ = Character.toString(c);\n                    closestVowelIndex = i;\n     \
    \           }\n            } else if (consonants.indexOf(c) != -1) {\n       \
    \         if (closestVowelIndex != -1) {\n                    if (closestVowelIndex\
    \ - i > 1) {\n                        return closestVowel;\n                 \
    \   }\n                }\n            }\n        }\n        return \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptbb5itwq.java:51)\n"
  stdout: ''
  timestamp: 1659798692
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index + 1 < word.length() && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    if (index - 1 >= 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                        result = word.substring(index, index\
    \ + 1);\n                        break;\n                    }\n             \
    \   }\n            }\n            index--;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798639
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String closestVowel = \"\";\n        int minDistance =\
    \ Integer.MAX_VALUE;\n        for (int i = word.length() - 1; i >= 0; i--) {\n\
    \            char c = word.charAt(i);\n            if (vowels.indexOf(c) != -1)\
    \ {\n                int distance = word.length() - i;\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        closestVowel = \"\" + c;\n                }\n            }\n        }\n\
    \        return closestVowel;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqenwt5tg.java:42)\n"
  stdout: ''
  timestamp: 1659798693
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int vowelIndex = -1;\n        int consonantIndex\
    \ = -1;\n        for (int i = word.length() - 1; i >= 0; i--) {\n            if\
    \ (vowels.contains(word.substring(i, i + 1))) {\n                vowelIndex =\
    \ i;\n                break;\n            }\n        }\n        for (int i = vowelIndex\
    \ - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i, i\
    \ + 1))) {\n                consonantIndex = i;\n                break;\n    \
    \        }\n        }\n        if (vowelIndex != -1 && consonantIndex != -1) {\n\
    \            result = word.substring(vowelIndex, vowelIndex + 1);\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpumk34u8i.java:51)\n"
  stdout: ''
  timestamp: 1659798693
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplep8bgw9.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = 0; i < word.length(); i++)\
    \ {\n            if (consonants.contains(word.substring(i, i + 1))) {\n      \
    \          for (int j = i + 1; j < word.length(); j++) {\n                   \
    \ if (vowels.contains(word.substring(j, j + 1))) {\n                        for\
    \ (int k = j + 1; k < word.length(); k++) {\n                            if (consonants.contains(word.substring(k,\
    \ k + 1))) {\n                                result = word.substring(j, j + 1);\n\
    \                                break;\n                            }\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjd4itsxn.java:53)\n"
  stdout: ''
  timestamp: 1659798692
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Write your\
    \ code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6iiwbcr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (consonants.contains(word.substring(index, index + 1))) {\n      \
    \          index--;\n                break;\n            }\n            index--;\n\
    \        }\n        if (index < 0) {\n            return \"\";\n        }\n  \
    \      while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                return word.substring(index, index + 1);\n \
    \           }\n            index--;\n        }\n        return \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbj6q7yuv.java:48)\n"
  stdout: ''
  timestamp: 1659798642
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        int index = word.length() - 1;\n        while (index\
    \ >= 0) {\n            if (vowels.indexOf(word.charAt(index)) != -1) {\n     \
    \           return String.valueOf(word.charAt(index));\n            }\n      \
    \      index--;\n        }\n        return \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\"\
    )));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4hwdq_vi.java:37)\n"
  stdout: ''
  timestamp: 1659798640
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz65evio9.java:39)\n"
  stdout: ''
  timestamp: 1659798643
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int distance = word.length();\n    \
    \    for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int temp = word.length() - i;\n                if\
    \ (temp < distance) {\n                    distance = temp;\n                \
    \    result = word.substring(i, i + 1);\n                }\n            }\n  \
    \      }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq1ti8o3n.java:42)\n"
  stdout: ''
  timestamp: 1659798692
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplep8bgw9.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Write your\
    \ code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6iiwbcr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Write your\
    \ code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6iiwbcr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: implement\
    \ this method\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp12ur482j.java:28)\n"
  stdout: ''
  timestamp: 1659798639
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            if (vowels.contains(word.substring(index, index\
    \ + 1))) {\n                if (index == word.length() - 1) {\n              \
    \      index--;\n                    continue;\n                }\n          \
    \      if (consonants.contains(word.substring(index + 1, index + 2))) {\n    \
    \                result = word.substring(index, index + 1);\n                \
    \    break;\n                }\n            }\n            index--;\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf2tk_ajq.java:46)\n"
  stdout: ''
  timestamp: 1659798641
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: implement\
    \ this method\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp12ur482j.java:28)\n"
  stdout: ''
  timestamp: 1659798639
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int distance = word.length()\
    \ - i;\n                if (distance < minDistance) {\n                    result\
    \ = String.valueOf(c);\n                    minDistance = distance;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplzpsbppr.java:42)\n"
  stdout: ''
  timestamp: 1659798643
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Implement\
    \ your code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5n77we05.java:28)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: implement\
    \ this method\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp12ur482j.java:28)\n"
  stdout: ''
  timestamp: 1659798639
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i + 1; j < word.length(); j++) {\n             \
    \       if (vowels.contains(word.substring(j, j + 1))) {\n                   \
    \     result = word.substring(j, j + 1);\n                        break;\n   \
    \                 }\n                }\n                break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpddqc848j.java:41)\n"
  stdout: ''
  timestamp: 1659798639
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplep8bgw9.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = 0;\n        for (int i =\
    \ word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                index = i;\n                break;\n           \
    \ }\n        }\n        for (int i = index - 1; i >= 0; i--) {\n            if\
    \ (vowels.contains(word.substring(i, i + 1))) {\n                result = word.substring(i,\
    \ i + 1);\n                break;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp45dvujh0.java:45)\n"
  stdout: ''
  timestamp: 1659798693
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String[] vowels\
    \ = {\"a\", \"e\", \"i\", \"o\", \"u\"};\n        String[] consonants = {\"b\"\
    , \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"};\n        String[]\
    \ wordArray = word.split(\"\");\n        String closestVowel = \"\";\n       \
    \ int closestVowelIndex = 0;\n        for (int i = 0; i < wordArray.length; i++)\
    \ {\n            if (Arrays.asList(vowels).contains(wordArray[i])) {\n       \
    \         if (i > 0 && i < wordArray.length - 1) {\n                    if (Arrays.asList(consonants).contains(wordArray[i\
    \ - 1]) && Arrays.asList(consonants).contains(wordArray[i + 1])) {\n         \
    \               closestVowel = wordArray[i];\n                        closestVowelIndex\
    \ = i;\n                    }\n                }\n            }\n        }\n \
    \       return closestVowel;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798693
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1eh_kw3.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwazhep9x.java:40)\n"
  stdout: ''
  timestamp: 1659798690
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp12ho1skq.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int distance = word.length()\
    \ - i;\n                if (distance < minDistance) {\n                    minDistance\
    \ = distance;\n                    result = Character.toString(c);\n         \
    \       }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpngr_7hy0.java:42)\n"
  stdout: ''
  timestamp: 1659798693
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            if (consonants.contains(word.substring(index, index\
    \ + 1))) {\n                if (index == word.length() - 1) {\n              \
    \      index--;\n                    continue;\n                }\n          \
    \      if (vowels.contains(word.substring(index + 1, index + 2))) {\n        \
    \            result = word.substring(index + 1, index + 2);\n                \
    \    break;\n                }\n            }\n            index--;\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9gf84sv7.java:48)\n"
  stdout: ''
  timestamp: 1659798693
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            if (vowels.contains(word.substring(index, index\
    \ + 1))) {\n                if (index + 1 < word.length() && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    if (index - 1 >= 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                        result = word.substring(index, index\
    \ + 1);\n                        break;\n                    }\n             \
    \   }\n            }\n            index--;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798640
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            index--;\n                    continue;\n                }\n    \
    \            if (index == 0) {\n                    break;\n                }\n\
    \                if (!vowels.contains(word.substring(index - 1, index)) && !vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    result = word.substring(index, index\
    \ + 1);\n                    break;\n                }\n            }\n      \
    \      index--;\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\"\
    )));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798693
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp12ho1skq.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int j = i - 1;\n                while (j >= 0 && vowels.indexOf(word.charAt(j))\
    \ != -1) {\n                    j--;\n                }\n                if (j\
    \ >= 0) {\n                    int k = i + 1;\n                    while (k <\
    \ word.length() && vowels.indexOf(word.charAt(k)) != -1) {\n                 \
    \       k++;\n                    }\n                    if (k < word.length())\
    \ {\n                        if (k - j < min) {\n                            min\
    \ = k - j;\n                            result = word.substring(i, i + 1);\n \
    \                       }\n                    }\n                }\n        \
    \    }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpovkw594l.java:50)\n"
  stdout: ''
  timestamp: 1659798693
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String result = \"\";\n        int index = -1;\n     \
    \   for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                if (i == word.length() - 1) {\n                \
    \    continue;\n                }\n                if (i == 0) {\n           \
    \         continue;\n                }\n                if (vowels.contains(word.substring(i\
    \ - 1, i))) {\n                    continue;\n                }\n            \
    \    if (vowels.contains(word.substring(i + 1, i + 2))) {\n                  \
    \  continue;\n                }\n                result = word.substring(i, i\
    \ + 1);\n                index = i;\n                break;\n            }\n \
    \       }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798693
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = 0;\n                for (int j = i\
    \ + 1; j < word.length(); j++) {\n                    if (consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ != 0 && distance < minDistance) {\n                    minDistance = distance;\n\
    \                    result = word.substring(i, i + 1);\n                }\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\"\
    )));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi0226jmu.java:46)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                int j = i - 1;\n                while (j >= 0 &&\
    \ !vowels.contains(word.substring(j, j + 1))) {\n                    j--;\n  \
    \              }\n                if (j >= 0) {\n                    if (i - j\
    \ < min) {\n                        min = i - j;\n                        result\
    \ = word.substring(i, i + 1);\n                    }\n                }\n    \
    \        }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8bxxauv.java:45)\n"
  stdout: ''
  timestamp: 1659798693
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   StringBuilder sb = new StringBuilder();\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c)\
    \ != -1) {\n                sb.append(c);\n            } else if (consonants.indexOf(c)\
    \ != -1) {\n                if (sb.length() > 0) {\n                    return\
    \ sb.toString();\n                }\n            }\n        }\n        return\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6r8alekg.java:44)\n"
  stdout: ''
  timestamp: 1659798639
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n    \
    \    for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int distance = 0;\n\
    \                for (int j = i + 1; j < word.length(); j++) {\n             \
    \       char d = word.charAt(j);\n                    if (consonants.indexOf(d)\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = String.valueOf(c);\n                }\n            }\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y7203yj.java:48)\n"
  stdout: ''
  timestamp: 1659798693
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int j = i - 1;\n                while (j >= 0 && vowels.indexOf(word.charAt(j))\
    \ != -1) {\n                    j--;\n                }\n                if (j\
    \ >= 0) {\n                    int k = i + 1;\n                    while (k <\
    \ word.length() && vowels.indexOf(word.charAt(k)) != -1) {\n                 \
    \       k++;\n                    }\n                    if (k < word.length())\
    \ {\n                        if (k - i < min) {\n                            min\
    \ = k - i;\n                            result = String.valueOf(word.charAt(i));\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9u4ccep2.java:50)\n"
  stdout: ''
  timestamp: 1659798693
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String closestVowel = \"\";\n        int closestVowelIndex = -1;\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                for (int j = i - 1; j >= 0; j--) {\n           \
    \         if (vowels.contains(word.substring(j, j + 1))) {\n                 \
    \       if (closestVowelIndex == -1 || j > closestVowelIndex) {\n            \
    \                closestVowelIndex = j;\n                            closestVowel\
    \ = word.substring(j, j + 1);\n                        }\n                   \
    \ }\n                }\n            }\n        }\n        return closestVowel;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpek4og2uk.java:45)\n"
  stdout: ''
  timestamp: 1659798691
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            index--;\n                    continue;\n                }\n    \
    \            if (consonants.contains(word.substring(index + 1, index + 2))) {\n\
    \                    if (index == 0) {\n                        result = word.substring(index,\
    \ index + 1);\n                        break;\n                    }\n       \
    \             if (consonants.contains(word.substring(index - 1, index))) {\n \
    \                       result = word.substring(index, index + 1);\n         \
    \               break;\n                    }\n                }\n           \
    \ }\n            index--;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjlkhyiy9.java:54)\n"
  stdout: ''
  timestamp: 1659798643
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int closestVowelIndex = -1;\n        int closestVowelDistance = Integer.MAX_VALUE;\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = word.length() - i;\n              \
    \  if (distance < closestVowelDistance) {\n                    closestVowelDistance\
    \ = distance;\n                    closestVowelIndex = i;\n                }\n\
    \            }\n        }\n        if (closestVowelIndex == -1) {\n          \
    \  return \"\";\n        }\n        for (int i = closestVowelIndex - 1; i >= 0;\
    \ i--) {\n            if (consonants.indexOf(word.charAt(i)) != -1) {\n      \
    \          return \"\" + word.charAt(closestVowelIndex);\n            }\n    \
    \    }\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ohyfpwj.java:52)\n"
  stdout: ''
  timestamp: 1659798693
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        return \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplep8bgw9.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Write\
    \ your code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_91ccgdy.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Write your\
    \ code here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6iiwbcr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // Your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1eh_kw3.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        // TODO: Implement\
    \ your solution here\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuv9wnp4i.java:28)\n"
  stdout: ''
  timestamp: 1659798638
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> getClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> getClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static String getClosestVowel(String word) {\n        int index =\
    \ word.length() - 1;\n        while (index >= 0) {\n            if (isVowel(word.charAt(index)))\
    \ {\n                if (index == word.length() - 1) {\n                    return\
    \ \"\";\n                } else if (index == 0) {\n                    return\
    \ \"\";\n                } else if (isConsonant(word.charAt(index - 1)) && isConsonant(word.charAt(index\
    \ + 1))) {\n                    return String.valueOf(word.charAt(index));\n \
    \               }\n            }\n            index--;\n        }\n        return\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph8fspn36.java:26: error: cannot find symbol\n            if (isVowel(word.charAt(index)))\
    \ {\n                ^\n  symbol:   method isVowel(char)\n  location: class Problem\n\
    /tmp/tmph8fspn36.java:31: error: cannot find symbol\n                } else if\
    \ (isConsonant(word.charAt(index - 1)) && isConsonant(word.charAt(index + 1)))\
    \ {\n                           ^\n  symbol:   method isConsonant(char)\n  location:\
    \ class Problem\n/tmp/tmph8fspn36.java:31: error: cannot find symbol\n       \
    \         } else if (isConsonant(word.charAt(index - 1)) && isConsonant(word.charAt(index\
    \ + 1))) {\n                                                                 \
    \ ^\n  symbol:   method isConsonant(char)\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1659798693

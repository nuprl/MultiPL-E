language: java
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        // >>> greatestCommonDivisor((3l), (5l))\n        // (1l)\n  \
    \      // >>> greatestCommonDivisor((25l), (15l))\n        // (5l)\n        //\
    \ >>> greatestCommonDivisor((25l), (15l))\n        // (5l)\n        // >>> greatestCommonDivisor((25l),\
    \ (15l))\n        // (5l)\n        // >>> greatestCommonDivisor((25l), (15l))\n\
    \        // (5l)\n        // >>> greatestCommonDivisor((25l), (15l))\n       \
    \ // (5l)\n        // >>> greatestCommonDivisor((25l), (15l))\n        // (5l)\n\
    \        // >>> greatestCommonDivisor((25l), (15l))\n        // (5l)\n       \
    \ // >>> greatestCommonDivisor((25l), (15l))\n        // (5l)\n        // >>>\
    \ greatestCommonDivisor((25l), (15l))\n        // (5l)\n        // >>> greatestCommonDivisor((25l),\
    \ (15l))\n        // (5l)\n        // >>> greatestCommonDivisor((25l), (15l))\n\
    \        // (5l)\n        // >>> greatestCommonDivisor((25l), (15l))\n       \
    \ // (5l)\n        // >>> greatestCommonDivisor((25l), (15l))\n        // (5l)\n\
    \        // >>> greatestCommonDivisor((25l), (15l))\n        // (5l)\n       \
    \ // >>> greatestCommonDivisor((25l), (15l))\n        // (5l)\n        // >>>\
    \ greatestCommonDivisor((25l), (15l))\n        // (5l)\n        // >>> greatestCommonDivisor((25l),\
    \ (15l))\n        // (5l)\n        // >>> greatestCommonDivisor((25l), (15l))\n\
    \        // (5l)\n        // >>> greatestCommonDivisor((25l), (15l))\n       \
    \ // (5l)\n        // >>> greatestCommonDivisor((25l), (15l))\n        // (5l)\n\
    \        // >>> greatestCommonDivis\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp21lu3scv.java:58: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b\
    \ == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
    \ a % b);\n    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b\
    \ == 0) {\n            return a;\n        }\n        if (a > b) {\n          \
    \  return greatestCommonDivisor(a % b, b);\n        } else {\n            return\
    \ greatestCommonDivisor(a, b % a);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return greatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b\
    \ == 0) {\n            return a;\n        }\n        if (a > b) {\n          \
    \  return greatestCommonDivisor(a % b, b);\n        } else {\n            return\
    \ greatestCommonDivisor(a, b % a);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b\
    \ == 0) {\n            return a;\n        }\n        if (a > b) {\n          \
    \  return greatestCommonDivisor(a % b, b);\n        } else {\n            return\
    \ greatestCommonDivisor(a, b % a);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b\
    \ == 0) {\n            return a;\n        }\n        if (a > b) {\n          \
    \  return greatestCommonDivisor(a % b, b);\n        } else {\n            return\
    \ greatestCommonDivisor(a, b % a);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b\
    \ == 0) {\n            return a;\n        }\n        if (a > b) {\n          \
    \  return greatestCommonDivisor(a % b, b);\n        } else {\n            return\
    \ greatestCommonDivisor(a, b % a);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a == 0) {\n            return b;\n        }\n        return\
    \ greatestCommonDivisor(b % a, a);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b\
    \ == 0) {\n            return a;\n        }\n        if (a > b) {\n          \
    \  return greatestCommonDivisor(a % b, b);\n        } else {\n            return\
    \ greatestCommonDivisor(a, b % a);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return greatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b\
    \ == 0) {\n            return a;\n        }\n        if (a == b) {\n         \
    \   return a;\n        }\n        if (a > b) {\n            return greatestCommonDivisor(a\
    \ - b, b);\n        }\n        return greatestCommonDivisor(a, b - a);\n    }\n\
    \    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b\
    \ == 0) {\n            return a;\n        }\n        if (a > b) {\n          \
    \  return greatestCommonDivisor(a % b, b);\n        } else {\n            return\
    \ greatestCommonDivisor(a, b % a);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b\
    \ == 0) {\n            return a;\n        }\n        if (a > b) {\n          \
    \  return greatestCommonDivisor(a % b, b);\n        } else {\n            return\
    \ greatestCommonDivisor(a, b % a);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a == 0) return b;\n        if (b == 0) return a;\n       \
    \ if (a == b) return a;\n        if (a > b) return greatestCommonDivisor(a - b,\
    \ b);\n        return greatestCommonDivisor(a, b - a);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3l), (7l)) ==\
    \ (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b\
    \ == 0) {\n            return a;\n        }\n        if (a > b) {\n          \
    \  return greatestCommonDivisor(a % b, b);\n        } else {\n            return\
    \ greatestCommonDivisor(a, b % a);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a == 0) {\n            return b;\n        }\n        return\
    \ greatestCommonDivisor(b % a, a);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b\
    \ == 0) {\n            return a;\n        }\n        if (a > b) {\n          \
    \  return greatestCommonDivisor(a % b, b);\n        } else {\n            return\
    \ greatestCommonDivisor(a, b % a);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        if (a == 0) {\n            return b;\n        }\n        if (b\
    \ == 0) {\n            return a;\n        }\n        if (a > b) {\n          \
    \  return greatestCommonDivisor(a % b, b);\n        } else {\n            return\
    \ greatestCommonDivisor(a, b % a);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    public static long greatestCommonDivisor(long a, long\
    \ b) {\n        long c;\n        while (b != 0) {\n            c = a % b;\n  \
    \          a = b;\n            b = c;\n        }\n        return a;\n    }\n \
    \   public static void main(String[] args) {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
